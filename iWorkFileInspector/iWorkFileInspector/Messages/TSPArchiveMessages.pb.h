// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TSPArchiveMessages.proto

#ifndef PROTOBUF_TSPArchiveMessages_2eproto__INCLUDED
#define PROTOBUF_TSPArchiveMessages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace TSP {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_TSPArchiveMessages_2eproto();
void protobuf_AssignDesc_TSPArchiveMessages_2eproto();
void protobuf_ShutdownFile_TSPArchiveMessages_2eproto();

class ArchiveInfo;
class MessageInfo;
class FieldInfo;
class FieldPath;
class ComponentInfo;
class ComponentExternalReference;
class ComponentDataReference;
class UUIDInternal;
class ObjectUUIDMapEntry;
class PackageMetadata;
class DocumentRevision;
class PasteboardMetadata;
class DataInfo;
class ViewStateMetadata;

enum FieldInfo_Type {
  FieldInfo_Type_Value = 0,
  FieldInfo_Type_ObjectReference = 1,
  FieldInfo_Type_DataReference = 2,
  FieldInfo_Type_Message = 3
};
bool FieldInfo_Type_IsValid(int value);
const FieldInfo_Type FieldInfo_Type_Type_MIN = FieldInfo_Type_Value;
const FieldInfo_Type FieldInfo_Type_Type_MAX = FieldInfo_Type_Message;
const int FieldInfo_Type_Type_ARRAYSIZE = FieldInfo_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* FieldInfo_Type_descriptor();
inline const ::std::string& FieldInfo_Type_Name(FieldInfo_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    FieldInfo_Type_descriptor(), value);
}
inline bool FieldInfo_Type_Parse(
    const ::std::string& name, FieldInfo_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FieldInfo_Type>(
    FieldInfo_Type_descriptor(), name, value);
}
enum FieldInfo_Rule {
  FieldInfo_Rule_IgnoreAndDrop = 0,
  FieldInfo_Rule_IgnoreAndPreserve = 1,
  FieldInfo_Rule_MustUnderstand = 2,
  FieldInfo_Rule_NotSupported = -1
};
bool FieldInfo_Rule_IsValid(int value);
const FieldInfo_Rule FieldInfo_Rule_Rule_MIN = FieldInfo_Rule_NotSupported;
const FieldInfo_Rule FieldInfo_Rule_Rule_MAX = FieldInfo_Rule_MustUnderstand;
const int FieldInfo_Rule_Rule_ARRAYSIZE = FieldInfo_Rule_Rule_MAX + 1;

const ::google::protobuf::EnumDescriptor* FieldInfo_Rule_descriptor();
inline const ::std::string& FieldInfo_Rule_Name(FieldInfo_Rule value) {
  return ::google::protobuf::internal::NameOfEnum(
    FieldInfo_Rule_descriptor(), value);
}
inline bool FieldInfo_Rule_Parse(
    const ::std::string& name, FieldInfo_Rule* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FieldInfo_Rule>(
    FieldInfo_Rule_descriptor(), name, value);
}
// ===================================================================

class ArchiveInfo : public ::google::protobuf::Message {
 public:
  ArchiveInfo();
  virtual ~ArchiveInfo();

  ArchiveInfo(const ArchiveInfo& from);

  inline ArchiveInfo& operator=(const ArchiveInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ArchiveInfo& default_instance();

  void Swap(ArchiveInfo* other);

  // implements Message ----------------------------------------------

  ArchiveInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArchiveInfo& from);
  void MergeFrom(const ArchiveInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 identifier = 1;
  inline bool has_identifier() const;
  inline void clear_identifier();
  static const int kIdentifierFieldNumber = 1;
  inline ::google::protobuf::uint64 identifier() const;
  inline void set_identifier(::google::protobuf::uint64 value);

  // repeated .TSP.MessageInfo message_infos = 2;
  inline int message_infos_size() const;
  inline void clear_message_infos();
  static const int kMessageInfosFieldNumber = 2;
  inline const ::TSP::MessageInfo& message_infos(int index) const;
  inline ::TSP::MessageInfo* mutable_message_infos(int index);
  inline ::TSP::MessageInfo* add_message_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::TSP::MessageInfo >&
      message_infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::TSP::MessageInfo >*
      mutable_message_infos();

  // @@protoc_insertion_point(class_scope:TSP.ArchiveInfo)
 private:
  inline void set_has_identifier();
  inline void clear_has_identifier();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 identifier_;
  ::google::protobuf::RepeatedPtrField< ::TSP::MessageInfo > message_infos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_TSPArchiveMessages_2eproto();
  friend void protobuf_AssignDesc_TSPArchiveMessages_2eproto();
  friend void protobuf_ShutdownFile_TSPArchiveMessages_2eproto();

  void InitAsDefaultInstance();
  static ArchiveInfo* default_instance_;
};
// -------------------------------------------------------------------

class MessageInfo : public ::google::protobuf::Message {
 public:
  MessageInfo();
  virtual ~MessageInfo();

  MessageInfo(const MessageInfo& from);

  inline MessageInfo& operator=(const MessageInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageInfo& default_instance();

  void Swap(MessageInfo* other);

  // implements Message ----------------------------------------------

  MessageInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageInfo& from);
  void MergeFrom(const MessageInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // repeated uint32 version = 2 [packed = true];
  inline int version_size() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 2;
  inline ::google::protobuf::uint32 version(int index) const;
  inline void set_version(int index, ::google::protobuf::uint32 value);
  inline void add_version(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      version() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_version();

  // required uint32 length = 3;
  inline bool has_length() const;
  inline void clear_length();
  static const int kLengthFieldNumber = 3;
  inline ::google::protobuf::uint32 length() const;
  inline void set_length(::google::protobuf::uint32 value);

  // repeated .TSP.FieldInfo field_infos = 4;
  inline int field_infos_size() const;
  inline void clear_field_infos();
  static const int kFieldInfosFieldNumber = 4;
  inline const ::TSP::FieldInfo& field_infos(int index) const;
  inline ::TSP::FieldInfo* mutable_field_infos(int index);
  inline ::TSP::FieldInfo* add_field_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::TSP::FieldInfo >&
      field_infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::TSP::FieldInfo >*
      mutable_field_infos();

  // repeated uint64 object_references = 5 [packed = true];
  inline int object_references_size() const;
  inline void clear_object_references();
  static const int kObjectReferencesFieldNumber = 5;
  inline ::google::protobuf::uint64 object_references(int index) const;
  inline void set_object_references(int index, ::google::protobuf::uint64 value);
  inline void add_object_references(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      object_references() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_object_references();

  // repeated uint64 data_references = 6 [packed = true];
  inline int data_references_size() const;
  inline void clear_data_references();
  static const int kDataReferencesFieldNumber = 6;
  inline ::google::protobuf::uint64 data_references(int index) const;
  inline void set_data_references(int index, ::google::protobuf::uint64 value);
  inline void add_data_references(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      data_references() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_data_references();

  // @@protoc_insertion_point(class_scope:TSP.MessageInfo)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_length();
  inline void clear_has_length();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > version_;
  mutable int _version_cached_byte_size_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 length_;
  ::google::protobuf::RepeatedPtrField< ::TSP::FieldInfo > field_infos_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > object_references_;
  mutable int _object_references_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > data_references_;
  mutable int _data_references_cached_byte_size_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_TSPArchiveMessages_2eproto();
  friend void protobuf_AssignDesc_TSPArchiveMessages_2eproto();
  friend void protobuf_ShutdownFile_TSPArchiveMessages_2eproto();

  void InitAsDefaultInstance();
  static MessageInfo* default_instance_;
};
// -------------------------------------------------------------------

class FieldInfo : public ::google::protobuf::Message {
 public:
  FieldInfo();
  virtual ~FieldInfo();

  FieldInfo(const FieldInfo& from);

  inline FieldInfo& operator=(const FieldInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FieldInfo& default_instance();

  void Swap(FieldInfo* other);

  // implements Message ----------------------------------------------

  FieldInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FieldInfo& from);
  void MergeFrom(const FieldInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef FieldInfo_Type Type;
  static const Type Value = FieldInfo_Type_Value;
  static const Type ObjectReference = FieldInfo_Type_ObjectReference;
  static const Type DataReference = FieldInfo_Type_DataReference;
  static const Type Message = FieldInfo_Type_Message;
  static inline bool Type_IsValid(int value) {
    return FieldInfo_Type_IsValid(value);
  }
  static const Type Type_MIN =
    FieldInfo_Type_Type_MIN;
  static const Type Type_MAX =
    FieldInfo_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    FieldInfo_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return FieldInfo_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return FieldInfo_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return FieldInfo_Type_Parse(name, value);
  }

  typedef FieldInfo_Rule Rule;
  static const Rule IgnoreAndDrop = FieldInfo_Rule_IgnoreAndDrop;
  static const Rule IgnoreAndPreserve = FieldInfo_Rule_IgnoreAndPreserve;
  static const Rule MustUnderstand = FieldInfo_Rule_MustUnderstand;
  static const Rule NotSupported = FieldInfo_Rule_NotSupported;
  static inline bool Rule_IsValid(int value) {
    return FieldInfo_Rule_IsValid(value);
  }
  static const Rule Rule_MIN =
    FieldInfo_Rule_Rule_MIN;
  static const Rule Rule_MAX =
    FieldInfo_Rule_Rule_MAX;
  static const int Rule_ARRAYSIZE =
    FieldInfo_Rule_Rule_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Rule_descriptor() {
    return FieldInfo_Rule_descriptor();
  }
  static inline const ::std::string& Rule_Name(Rule value) {
    return FieldInfo_Rule_Name(value);
  }
  static inline bool Rule_Parse(const ::std::string& name,
      Rule* value) {
    return FieldInfo_Rule_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .TSP.FieldPath path = 1;
  inline bool has_path() const;
  inline void clear_path();
  static const int kPathFieldNumber = 1;
  inline const ::TSP::FieldPath& path() const;
  inline ::TSP::FieldPath* mutable_path();
  inline ::TSP::FieldPath* release_path();
  inline void set_allocated_path(::TSP::FieldPath* path);

  // optional .TSP.FieldInfo.Type type = 2 [default = Value];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::TSP::FieldInfo_Type type() const;
  inline void set_type(::TSP::FieldInfo_Type value);

  // optional .TSP.FieldInfo.Rule rule = 3 [default = IgnoreAndDrop];
  inline bool has_rule() const;
  inline void clear_rule();
  static const int kRuleFieldNumber = 3;
  inline ::TSP::FieldInfo_Rule rule() const;
  inline void set_rule(::TSP::FieldInfo_Rule value);

  // repeated uint64 object_references = 4 [packed = true];
  inline int object_references_size() const;
  inline void clear_object_references();
  static const int kObjectReferencesFieldNumber = 4;
  inline ::google::protobuf::uint64 object_references(int index) const;
  inline void set_object_references(int index, ::google::protobuf::uint64 value);
  inline void add_object_references(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      object_references() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_object_references();

  // repeated uint64 data_references = 5 [packed = true];
  inline int data_references_size() const;
  inline void clear_data_references();
  static const int kDataReferencesFieldNumber = 5;
  inline ::google::protobuf::uint64 data_references(int index) const;
  inline void set_data_references(int index, ::google::protobuf::uint64 value);
  inline void add_data_references(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      data_references() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_data_references();

  // @@protoc_insertion_point(class_scope:TSP.FieldInfo)
 private:
  inline void set_has_path();
  inline void clear_has_path();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_rule();
  inline void clear_has_rule();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::TSP::FieldPath* path_;
  int type_;
  int rule_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > object_references_;
  mutable int _object_references_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > data_references_;
  mutable int _data_references_cached_byte_size_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_TSPArchiveMessages_2eproto();
  friend void protobuf_AssignDesc_TSPArchiveMessages_2eproto();
  friend void protobuf_ShutdownFile_TSPArchiveMessages_2eproto();

  void InitAsDefaultInstance();
  static FieldInfo* default_instance_;
};
// -------------------------------------------------------------------

class FieldPath : public ::google::protobuf::Message {
 public:
  FieldPath();
  virtual ~FieldPath();

  FieldPath(const FieldPath& from);

  inline FieldPath& operator=(const FieldPath& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FieldPath& default_instance();

  void Swap(FieldPath* other);

  // implements Message ----------------------------------------------

  FieldPath* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FieldPath& from);
  void MergeFrom(const FieldPath& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 path = 1 [packed = true];
  inline int path_size() const;
  inline void clear_path();
  static const int kPathFieldNumber = 1;
  inline ::google::protobuf::uint32 path(int index) const;
  inline void set_path(int index, ::google::protobuf::uint32 value);
  inline void add_path(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      path() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_path();

  // @@protoc_insertion_point(class_scope:TSP.FieldPath)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > path_;
  mutable int _path_cached_byte_size_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_TSPArchiveMessages_2eproto();
  friend void protobuf_AssignDesc_TSPArchiveMessages_2eproto();
  friend void protobuf_ShutdownFile_TSPArchiveMessages_2eproto();

  void InitAsDefaultInstance();
  static FieldPath* default_instance_;
};
// -------------------------------------------------------------------

class ComponentInfo : public ::google::protobuf::Message {
 public:
  ComponentInfo();
  virtual ~ComponentInfo();

  ComponentInfo(const ComponentInfo& from);

  inline ComponentInfo& operator=(const ComponentInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ComponentInfo& default_instance();

  void Swap(ComponentInfo* other);

  // implements Message ----------------------------------------------

  ComponentInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ComponentInfo& from);
  void MergeFrom(const ComponentInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 identifier = 1;
  inline bool has_identifier() const;
  inline void clear_identifier();
  static const int kIdentifierFieldNumber = 1;
  inline ::google::protobuf::uint64 identifier() const;
  inline void set_identifier(::google::protobuf::uint64 value);

  // required string preferred_locator = 2;
  inline bool has_preferred_locator() const;
  inline void clear_preferred_locator();
  static const int kPreferredLocatorFieldNumber = 2;
  inline const ::std::string& preferred_locator() const;
  inline void set_preferred_locator(const ::std::string& value);
  inline void set_preferred_locator(const char* value);
  inline void set_preferred_locator(const char* value, size_t size);
  inline ::std::string* mutable_preferred_locator();
  inline ::std::string* release_preferred_locator();
  inline void set_allocated_preferred_locator(::std::string* preferred_locator);

  // optional string locator = 3;
  inline bool has_locator() const;
  inline void clear_locator();
  static const int kLocatorFieldNumber = 3;
  inline const ::std::string& locator() const;
  inline void set_locator(const ::std::string& value);
  inline void set_locator(const char* value);
  inline void set_locator(const char* value, size_t size);
  inline ::std::string* mutable_locator();
  inline ::std::string* release_locator();
  inline void set_allocated_locator(::std::string* locator);

  // repeated uint32 read_version = 4 [packed = true];
  inline int read_version_size() const;
  inline void clear_read_version();
  static const int kReadVersionFieldNumber = 4;
  inline ::google::protobuf::uint32 read_version(int index) const;
  inline void set_read_version(int index, ::google::protobuf::uint32 value);
  inline void add_read_version(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      read_version() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_read_version();

  // repeated uint32 write_version = 5 [packed = true];
  inline int write_version_size() const;
  inline void clear_write_version();
  static const int kWriteVersionFieldNumber = 5;
  inline ::google::protobuf::uint32 write_version(int index) const;
  inline void set_write_version(int index, ::google::protobuf::uint32 value);
  inline void add_write_version(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      write_version() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_write_version();

  // repeated .TSP.ComponentExternalReference external_references = 6;
  inline int external_references_size() const;
  inline void clear_external_references();
  static const int kExternalReferencesFieldNumber = 6;
  inline const ::TSP::ComponentExternalReference& external_references(int index) const;
  inline ::TSP::ComponentExternalReference* mutable_external_references(int index);
  inline ::TSP::ComponentExternalReference* add_external_references();
  inline const ::google::protobuf::RepeatedPtrField< ::TSP::ComponentExternalReference >&
      external_references() const;
  inline ::google::protobuf::RepeatedPtrField< ::TSP::ComponentExternalReference >*
      mutable_external_references();

  // repeated .TSP.ComponentDataReference data_references = 7;
  inline int data_references_size() const;
  inline void clear_data_references();
  static const int kDataReferencesFieldNumber = 7;
  inline const ::TSP::ComponentDataReference& data_references(int index) const;
  inline ::TSP::ComponentDataReference* mutable_data_references(int index);
  inline ::TSP::ComponentDataReference* add_data_references();
  inline const ::google::protobuf::RepeatedPtrField< ::TSP::ComponentDataReference >&
      data_references() const;
  inline ::google::protobuf::RepeatedPtrField< ::TSP::ComponentDataReference >*
      mutable_data_references();

  // repeated .TSP.ObjectUUIDMapEntry object_uuid_map_entries = 11;
  inline int object_uuid_map_entries_size() const;
  inline void clear_object_uuid_map_entries();
  static const int kObjectUuidMapEntriesFieldNumber = 11;
  inline const ::TSP::ObjectUUIDMapEntry& object_uuid_map_entries(int index) const;
  inline ::TSP::ObjectUUIDMapEntry* mutable_object_uuid_map_entries(int index);
  inline ::TSP::ObjectUUIDMapEntry* add_object_uuid_map_entries();
  inline const ::google::protobuf::RepeatedPtrField< ::TSP::ObjectUUIDMapEntry >&
      object_uuid_map_entries() const;
  inline ::google::protobuf::RepeatedPtrField< ::TSP::ObjectUUIDMapEntry >*
      mutable_object_uuid_map_entries();

  // optional bool is_stored_outside_object_archive = 10 [default = false];
  inline bool has_is_stored_outside_object_archive() const;
  inline void clear_is_stored_outside_object_archive();
  static const int kIsStoredOutsideObjectArchiveFieldNumber = 10;
  inline bool is_stored_outside_object_archive() const;
  inline void set_is_stored_outside_object_archive(bool value);

  // optional uint64 save_token = 12 [default = 0];
  inline bool has_save_token() const;
  inline void clear_save_token();
  static const int kSaveTokenFieldNumber = 12;
  inline ::google::protobuf::uint64 save_token() const;
  inline void set_save_token(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TSP.ComponentInfo)
 private:
  inline void set_has_identifier();
  inline void clear_has_identifier();
  inline void set_has_preferred_locator();
  inline void clear_has_preferred_locator();
  inline void set_has_locator();
  inline void clear_has_locator();
  inline void set_has_is_stored_outside_object_archive();
  inline void clear_has_is_stored_outside_object_archive();
  inline void set_has_save_token();
  inline void clear_has_save_token();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 identifier_;
  ::std::string* preferred_locator_;
  ::std::string* locator_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > read_version_;
  mutable int _read_version_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > write_version_;
  mutable int _write_version_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::TSP::ComponentExternalReference > external_references_;
  ::google::protobuf::RepeatedPtrField< ::TSP::ComponentDataReference > data_references_;
  ::google::protobuf::RepeatedPtrField< ::TSP::ObjectUUIDMapEntry > object_uuid_map_entries_;
  ::google::protobuf::uint64 save_token_;
  bool is_stored_outside_object_archive_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_TSPArchiveMessages_2eproto();
  friend void protobuf_AssignDesc_TSPArchiveMessages_2eproto();
  friend void protobuf_ShutdownFile_TSPArchiveMessages_2eproto();

  void InitAsDefaultInstance();
  static ComponentInfo* default_instance_;
};
// -------------------------------------------------------------------

class ComponentExternalReference : public ::google::protobuf::Message {
 public:
  ComponentExternalReference();
  virtual ~ComponentExternalReference();

  ComponentExternalReference(const ComponentExternalReference& from);

  inline ComponentExternalReference& operator=(const ComponentExternalReference& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ComponentExternalReference& default_instance();

  void Swap(ComponentExternalReference* other);

  // implements Message ----------------------------------------------

  ComponentExternalReference* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ComponentExternalReference& from);
  void MergeFrom(const ComponentExternalReference& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 component_identifier = 1;
  inline bool has_component_identifier() const;
  inline void clear_component_identifier();
  static const int kComponentIdentifierFieldNumber = 1;
  inline ::google::protobuf::uint64 component_identifier() const;
  inline void set_component_identifier(::google::protobuf::uint64 value);

  // optional uint64 object_identifier = 2;
  inline bool has_object_identifier() const;
  inline void clear_object_identifier();
  static const int kObjectIdentifierFieldNumber = 2;
  inline ::google::protobuf::uint64 object_identifier() const;
  inline void set_object_identifier(::google::protobuf::uint64 value);

  // optional bool is_weak = 3;
  inline bool has_is_weak() const;
  inline void clear_is_weak();
  static const int kIsWeakFieldNumber = 3;
  inline bool is_weak() const;
  inline void set_is_weak(bool value);

  // @@protoc_insertion_point(class_scope:TSP.ComponentExternalReference)
 private:
  inline void set_has_component_identifier();
  inline void clear_has_component_identifier();
  inline void set_has_object_identifier();
  inline void clear_has_object_identifier();
  inline void set_has_is_weak();
  inline void clear_has_is_weak();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 component_identifier_;
  ::google::protobuf::uint64 object_identifier_;
  bool is_weak_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_TSPArchiveMessages_2eproto();
  friend void protobuf_AssignDesc_TSPArchiveMessages_2eproto();
  friend void protobuf_ShutdownFile_TSPArchiveMessages_2eproto();

  void InitAsDefaultInstance();
  static ComponentExternalReference* default_instance_;
};
// -------------------------------------------------------------------

class ComponentDataReference : public ::google::protobuf::Message {
 public:
  ComponentDataReference();
  virtual ~ComponentDataReference();

  ComponentDataReference(const ComponentDataReference& from);

  inline ComponentDataReference& operator=(const ComponentDataReference& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ComponentDataReference& default_instance();

  void Swap(ComponentDataReference* other);

  // implements Message ----------------------------------------------

  ComponentDataReference* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ComponentDataReference& from);
  void MergeFrom(const ComponentDataReference& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 data_identifier = 1;
  inline bool has_data_identifier() const;
  inline void clear_data_identifier();
  static const int kDataIdentifierFieldNumber = 1;
  inline ::google::protobuf::uint64 data_identifier() const;
  inline void set_data_identifier(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TSP.ComponentDataReference)
 private:
  inline void set_has_data_identifier();
  inline void clear_has_data_identifier();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 data_identifier_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_TSPArchiveMessages_2eproto();
  friend void protobuf_AssignDesc_TSPArchiveMessages_2eproto();
  friend void protobuf_ShutdownFile_TSPArchiveMessages_2eproto();

  void InitAsDefaultInstance();
  static ComponentDataReference* default_instance_;
};
// -------------------------------------------------------------------

class UUIDInternal : public ::google::protobuf::Message {
 public:
  UUIDInternal();
  virtual ~UUIDInternal();

  UUIDInternal(const UUIDInternal& from);

  inline UUIDInternal& operator=(const UUIDInternal& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UUIDInternal& default_instance();

  void Swap(UUIDInternal* other);

  // implements Message ----------------------------------------------

  UUIDInternal* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UUIDInternal& from);
  void MergeFrom(const UUIDInternal& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 lower = 1;
  inline bool has_lower() const;
  inline void clear_lower();
  static const int kLowerFieldNumber = 1;
  inline ::google::protobuf::uint64 lower() const;
  inline void set_lower(::google::protobuf::uint64 value);

  // required uint64 upper = 2;
  inline bool has_upper() const;
  inline void clear_upper();
  static const int kUpperFieldNumber = 2;
  inline ::google::protobuf::uint64 upper() const;
  inline void set_upper(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TSP.UUIDInternal)
 private:
  inline void set_has_lower();
  inline void clear_has_lower();
  inline void set_has_upper();
  inline void clear_has_upper();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 lower_;
  ::google::protobuf::uint64 upper_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_TSPArchiveMessages_2eproto();
  friend void protobuf_AssignDesc_TSPArchiveMessages_2eproto();
  friend void protobuf_ShutdownFile_TSPArchiveMessages_2eproto();

  void InitAsDefaultInstance();
  static UUIDInternal* default_instance_;
};
// -------------------------------------------------------------------

class ObjectUUIDMapEntry : public ::google::protobuf::Message {
 public:
  ObjectUUIDMapEntry();
  virtual ~ObjectUUIDMapEntry();

  ObjectUUIDMapEntry(const ObjectUUIDMapEntry& from);

  inline ObjectUUIDMapEntry& operator=(const ObjectUUIDMapEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjectUUIDMapEntry& default_instance();

  void Swap(ObjectUUIDMapEntry* other);

  // implements Message ----------------------------------------------

  ObjectUUIDMapEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ObjectUUIDMapEntry& from);
  void MergeFrom(const ObjectUUIDMapEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 identifier = 1;
  inline bool has_identifier() const;
  inline void clear_identifier();
  static const int kIdentifierFieldNumber = 1;
  inline ::google::protobuf::uint64 identifier() const;
  inline void set_identifier(::google::protobuf::uint64 value);

  // required .TSP.UUIDInternal uuid = 2;
  inline bool has_uuid() const;
  inline void clear_uuid();
  static const int kUuidFieldNumber = 2;
  inline const ::TSP::UUIDInternal& uuid() const;
  inline ::TSP::UUIDInternal* mutable_uuid();
  inline ::TSP::UUIDInternal* release_uuid();
  inline void set_allocated_uuid(::TSP::UUIDInternal* uuid);

  // @@protoc_insertion_point(class_scope:TSP.ObjectUUIDMapEntry)
 private:
  inline void set_has_identifier();
  inline void clear_has_identifier();
  inline void set_has_uuid();
  inline void clear_has_uuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 identifier_;
  ::TSP::UUIDInternal* uuid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_TSPArchiveMessages_2eproto();
  friend void protobuf_AssignDesc_TSPArchiveMessages_2eproto();
  friend void protobuf_ShutdownFile_TSPArchiveMessages_2eproto();

  void InitAsDefaultInstance();
  static ObjectUUIDMapEntry* default_instance_;
};
// -------------------------------------------------------------------

class PackageMetadata : public ::google::protobuf::Message {
 public:
  PackageMetadata();
  virtual ~PackageMetadata();

  PackageMetadata(const PackageMetadata& from);

  inline PackageMetadata& operator=(const PackageMetadata& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PackageMetadata& default_instance();

  void Swap(PackageMetadata* other);

  // implements Message ----------------------------------------------

  PackageMetadata* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PackageMetadata& from);
  void MergeFrom(const PackageMetadata& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 last_object_identifier = 1;
  inline bool has_last_object_identifier() const;
  inline void clear_last_object_identifier();
  static const int kLastObjectIdentifierFieldNumber = 1;
  inline ::google::protobuf::uint64 last_object_identifier() const;
  inline void set_last_object_identifier(::google::protobuf::uint64 value);

  // optional .TSP.DocumentRevision revision = 2;
  inline bool has_revision() const;
  inline void clear_revision();
  static const int kRevisionFieldNumber = 2;
  inline const ::TSP::DocumentRevision& revision() const;
  inline ::TSP::DocumentRevision* mutable_revision();
  inline ::TSP::DocumentRevision* release_revision();
  inline void set_allocated_revision(::TSP::DocumentRevision* revision);

  // repeated .TSP.ComponentInfo components = 3;
  inline int components_size() const;
  inline void clear_components();
  static const int kComponentsFieldNumber = 3;
  inline const ::TSP::ComponentInfo& components(int index) const;
  inline ::TSP::ComponentInfo* mutable_components(int index);
  inline ::TSP::ComponentInfo* add_components();
  inline const ::google::protobuf::RepeatedPtrField< ::TSP::ComponentInfo >&
      components() const;
  inline ::google::protobuf::RepeatedPtrField< ::TSP::ComponentInfo >*
      mutable_components();

  // repeated .TSP.DataInfo datas = 4;
  inline int datas_size() const;
  inline void clear_datas();
  static const int kDatasFieldNumber = 4;
  inline const ::TSP::DataInfo& datas(int index) const;
  inline ::TSP::DataInfo* mutable_datas(int index);
  inline ::TSP::DataInfo* add_datas();
  inline const ::google::protobuf::RepeatedPtrField< ::TSP::DataInfo >&
      datas() const;
  inline ::google::protobuf::RepeatedPtrField< ::TSP::DataInfo >*
      mutable_datas();

  // repeated uint32 read_version = 5 [packed = true];
  inline int read_version_size() const;
  inline void clear_read_version();
  static const int kReadVersionFieldNumber = 5;
  inline ::google::protobuf::uint32 read_version(int index) const;
  inline void set_read_version(int index, ::google::protobuf::uint32 value);
  inline void add_read_version(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      read_version() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_read_version();

  // repeated uint32 write_version = 6 [packed = true];
  inline int write_version_size() const;
  inline void clear_write_version();
  static const int kWriteVersionFieldNumber = 6;
  inline ::google::protobuf::uint32 write_version(int index) const;
  inline void set_write_version(int index, ::google::protobuf::uint32 value);
  inline void add_write_version(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      write_version() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_write_version();

  // repeated uint32 file_format_version = 7 [packed = true];
  inline int file_format_version_size() const;
  inline void clear_file_format_version();
  static const int kFileFormatVersionFieldNumber = 7;
  inline ::google::protobuf::uint32 file_format_version(int index) const;
  inline void set_file_format_version(int index, ::google::protobuf::uint32 value);
  inline void add_file_format_version(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      file_format_version() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_file_format_version();

  // optional uint64 save_token = 8 [default = 0];
  inline bool has_save_token() const;
  inline void clear_save_token();
  static const int kSaveTokenFieldNumber = 8;
  inline ::google::protobuf::uint64 save_token() const;
  inline void set_save_token(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TSP.PackageMetadata)
 private:
  inline void set_has_last_object_identifier();
  inline void clear_has_last_object_identifier();
  inline void set_has_revision();
  inline void clear_has_revision();
  inline void set_has_save_token();
  inline void clear_has_save_token();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 last_object_identifier_;
  ::TSP::DocumentRevision* revision_;
  ::google::protobuf::RepeatedPtrField< ::TSP::ComponentInfo > components_;
  ::google::protobuf::RepeatedPtrField< ::TSP::DataInfo > datas_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > read_version_;
  mutable int _read_version_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > write_version_;
  mutable int _write_version_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > file_format_version_;
  mutable int _file_format_version_cached_byte_size_;
  ::google::protobuf::uint64 save_token_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_TSPArchiveMessages_2eproto();
  friend void protobuf_AssignDesc_TSPArchiveMessages_2eproto();
  friend void protobuf_ShutdownFile_TSPArchiveMessages_2eproto();

  void InitAsDefaultInstance();
  static PackageMetadata* default_instance_;
};
// -------------------------------------------------------------------

class DocumentRevision : public ::google::protobuf::Message {
 public:
  DocumentRevision();
  virtual ~DocumentRevision();

  DocumentRevision(const DocumentRevision& from);

  inline DocumentRevision& operator=(const DocumentRevision& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DocumentRevision& default_instance();

  void Swap(DocumentRevision* other);

  // implements Message ----------------------------------------------

  DocumentRevision* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DocumentRevision& from);
  void MergeFrom(const DocumentRevision& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 sequence = 1 [default = 0];
  inline bool has_sequence() const;
  inline void clear_sequence();
  static const int kSequenceFieldNumber = 1;
  inline ::google::protobuf::uint64 sequence() const;
  inline void set_sequence(::google::protobuf::uint64 value);

  // optional string identifier = 2;
  inline bool has_identifier() const;
  inline void clear_identifier();
  static const int kIdentifierFieldNumber = 2;
  inline const ::std::string& identifier() const;
  inline void set_identifier(const ::std::string& value);
  inline void set_identifier(const char* value);
  inline void set_identifier(const char* value, size_t size);
  inline ::std::string* mutable_identifier();
  inline ::std::string* release_identifier();
  inline void set_allocated_identifier(::std::string* identifier);

  // @@protoc_insertion_point(class_scope:TSP.DocumentRevision)
 private:
  inline void set_has_sequence();
  inline void clear_has_sequence();
  inline void set_has_identifier();
  inline void clear_has_identifier();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 sequence_;
  ::std::string* identifier_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_TSPArchiveMessages_2eproto();
  friend void protobuf_AssignDesc_TSPArchiveMessages_2eproto();
  friend void protobuf_ShutdownFile_TSPArchiveMessages_2eproto();

  void InitAsDefaultInstance();
  static DocumentRevision* default_instance_;
};
// -------------------------------------------------------------------

class PasteboardMetadata : public ::google::protobuf::Message {
 public:
  PasteboardMetadata();
  virtual ~PasteboardMetadata();

  PasteboardMetadata(const PasteboardMetadata& from);

  inline PasteboardMetadata& operator=(const PasteboardMetadata& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PasteboardMetadata& default_instance();

  void Swap(PasteboardMetadata* other);

  // implements Message ----------------------------------------------

  PasteboardMetadata* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PasteboardMetadata& from);
  void MergeFrom(const PasteboardMetadata& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 version = 1 [packed = true];
  inline int version_size() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 1;
  inline ::google::protobuf::uint32 version(int index) const;
  inline void set_version(int index, ::google::protobuf::uint32 value);
  inline void add_version(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      version() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_version();

  // required string app_name = 2;
  inline bool has_app_name() const;
  inline void clear_app_name();
  static const int kAppNameFieldNumber = 2;
  inline const ::std::string& app_name() const;
  inline void set_app_name(const ::std::string& value);
  inline void set_app_name(const char* value);
  inline void set_app_name(const char* value, size_t size);
  inline ::std::string* mutable_app_name();
  inline ::std::string* release_app_name();
  inline void set_allocated_app_name(::std::string* app_name);

  // repeated .TSP.DataInfo datas = 3;
  inline int datas_size() const;
  inline void clear_datas();
  static const int kDatasFieldNumber = 3;
  inline const ::TSP::DataInfo& datas(int index) const;
  inline ::TSP::DataInfo* mutable_datas(int index);
  inline ::TSP::DataInfo* add_datas();
  inline const ::google::protobuf::RepeatedPtrField< ::TSP::DataInfo >&
      datas() const;
  inline ::google::protobuf::RepeatedPtrField< ::TSP::DataInfo >*
      mutable_datas();

  // optional string source_document_uuid = 4;
  inline bool has_source_document_uuid() const;
  inline void clear_source_document_uuid();
  static const int kSourceDocumentUuidFieldNumber = 4;
  inline const ::std::string& source_document_uuid() const;
  inline void set_source_document_uuid(const ::std::string& value);
  inline void set_source_document_uuid(const char* value);
  inline void set_source_document_uuid(const char* value, size_t size);
  inline ::std::string* mutable_source_document_uuid();
  inline ::std::string* release_source_document_uuid();
  inline void set_allocated_source_document_uuid(::std::string* source_document_uuid);

  // @@protoc_insertion_point(class_scope:TSP.PasteboardMetadata)
 private:
  inline void set_has_app_name();
  inline void clear_has_app_name();
  inline void set_has_source_document_uuid();
  inline void clear_has_source_document_uuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > version_;
  mutable int _version_cached_byte_size_;
  ::std::string* app_name_;
  ::google::protobuf::RepeatedPtrField< ::TSP::DataInfo > datas_;
  ::std::string* source_document_uuid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_TSPArchiveMessages_2eproto();
  friend void protobuf_AssignDesc_TSPArchiveMessages_2eproto();
  friend void protobuf_ShutdownFile_TSPArchiveMessages_2eproto();

  void InitAsDefaultInstance();
  static PasteboardMetadata* default_instance_;
};
// -------------------------------------------------------------------

class DataInfo : public ::google::protobuf::Message {
 public:
  DataInfo();
  virtual ~DataInfo();

  DataInfo(const DataInfo& from);

  inline DataInfo& operator=(const DataInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DataInfo& default_instance();

  void Swap(DataInfo* other);

  // implements Message ----------------------------------------------

  DataInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DataInfo& from);
  void MergeFrom(const DataInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 identifier = 1;
  inline bool has_identifier() const;
  inline void clear_identifier();
  static const int kIdentifierFieldNumber = 1;
  inline ::google::protobuf::uint64 identifier() const;
  inline void set_identifier(::google::protobuf::uint64 value);

  // required bytes digest = 2;
  inline bool has_digest() const;
  inline void clear_digest();
  static const int kDigestFieldNumber = 2;
  inline const ::std::string& digest() const;
  inline void set_digest(const ::std::string& value);
  inline void set_digest(const char* value);
  inline void set_digest(const void* value, size_t size);
  inline ::std::string* mutable_digest();
  inline ::std::string* release_digest();
  inline void set_allocated_digest(::std::string* digest);

  // required string preferred_file_name = 3;
  inline bool has_preferred_file_name() const;
  inline void clear_preferred_file_name();
  static const int kPreferredFileNameFieldNumber = 3;
  inline const ::std::string& preferred_file_name() const;
  inline void set_preferred_file_name(const ::std::string& value);
  inline void set_preferred_file_name(const char* value);
  inline void set_preferred_file_name(const char* value, size_t size);
  inline ::std::string* mutable_preferred_file_name();
  inline ::std::string* release_preferred_file_name();
  inline void set_allocated_preferred_file_name(::std::string* preferred_file_name);

  // optional string file_name = 4;
  inline bool has_file_name() const;
  inline void clear_file_name();
  static const int kFileNameFieldNumber = 4;
  inline const ::std::string& file_name() const;
  inline void set_file_name(const ::std::string& value);
  inline void set_file_name(const char* value);
  inline void set_file_name(const char* value, size_t size);
  inline ::std::string* mutable_file_name();
  inline ::std::string* release_file_name();
  inline void set_allocated_file_name(::std::string* file_name);

  // optional string document_resource_locator = 5;
  inline bool has_document_resource_locator() const;
  inline void clear_document_resource_locator();
  static const int kDocumentResourceLocatorFieldNumber = 5;
  inline const ::std::string& document_resource_locator() const;
  inline void set_document_resource_locator(const ::std::string& value);
  inline void set_document_resource_locator(const char* value);
  inline void set_document_resource_locator(const char* value, size_t size);
  inline ::std::string* mutable_document_resource_locator();
  inline ::std::string* release_document_resource_locator();
  inline void set_allocated_document_resource_locator(::std::string* document_resource_locator);

  // optional bytes source_bookmark_data = 6;
  inline bool has_source_bookmark_data() const;
  inline void clear_source_bookmark_data();
  static const int kSourceBookmarkDataFieldNumber = 6;
  inline const ::std::string& source_bookmark_data() const;
  inline void set_source_bookmark_data(const ::std::string& value);
  inline void set_source_bookmark_data(const char* value);
  inline void set_source_bookmark_data(const void* value, size_t size);
  inline ::std::string* mutable_source_bookmark_data();
  inline ::std::string* release_source_bookmark_data();
  inline void set_allocated_source_bookmark_data(::std::string* source_bookmark_data);

  // optional string pasteboard_external_file_path = 99;
  inline bool has_pasteboard_external_file_path() const;
  inline void clear_pasteboard_external_file_path();
  static const int kPasteboardExternalFilePathFieldNumber = 99;
  inline const ::std::string& pasteboard_external_file_path() const;
  inline void set_pasteboard_external_file_path(const ::std::string& value);
  inline void set_pasteboard_external_file_path(const char* value);
  inline void set_pasteboard_external_file_path(const char* value, size_t size);
  inline ::std::string* mutable_pasteboard_external_file_path();
  inline ::std::string* release_pasteboard_external_file_path();
  inline void set_allocated_pasteboard_external_file_path(::std::string* pasteboard_external_file_path);

  // @@protoc_insertion_point(class_scope:TSP.DataInfo)
 private:
  inline void set_has_identifier();
  inline void clear_has_identifier();
  inline void set_has_digest();
  inline void clear_has_digest();
  inline void set_has_preferred_file_name();
  inline void clear_has_preferred_file_name();
  inline void set_has_file_name();
  inline void clear_has_file_name();
  inline void set_has_document_resource_locator();
  inline void clear_has_document_resource_locator();
  inline void set_has_source_bookmark_data();
  inline void clear_has_source_bookmark_data();
  inline void set_has_pasteboard_external_file_path();
  inline void clear_has_pasteboard_external_file_path();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 identifier_;
  ::std::string* digest_;
  ::std::string* preferred_file_name_;
  ::std::string* file_name_;
  ::std::string* document_resource_locator_;
  ::std::string* source_bookmark_data_;
  ::std::string* pasteboard_external_file_path_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_TSPArchiveMessages_2eproto();
  friend void protobuf_AssignDesc_TSPArchiveMessages_2eproto();
  friend void protobuf_ShutdownFile_TSPArchiveMessages_2eproto();

  void InitAsDefaultInstance();
  static DataInfo* default_instance_;
};
// -------------------------------------------------------------------

class ViewStateMetadata : public ::google::protobuf::Message {
 public:
  ViewStateMetadata();
  virtual ~ViewStateMetadata();

  ViewStateMetadata(const ViewStateMetadata& from);

  inline ViewStateMetadata& operator=(const ViewStateMetadata& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ViewStateMetadata& default_instance();

  void Swap(ViewStateMetadata* other);

  // implements Message ----------------------------------------------

  ViewStateMetadata* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ViewStateMetadata& from);
  void MergeFrom(const ViewStateMetadata& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 version = 1 [packed = true];
  inline int version_size() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 1;
  inline ::google::protobuf::uint32 version(int index) const;
  inline void set_version(int index, ::google::protobuf::uint32 value);
  inline void add_version(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      version() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_version();

  // required string document_version_uuid = 2;
  inline bool has_document_version_uuid() const;
  inline void clear_document_version_uuid();
  static const int kDocumentVersionUuidFieldNumber = 2;
  inline const ::std::string& document_version_uuid() const;
  inline void set_document_version_uuid(const ::std::string& value);
  inline void set_document_version_uuid(const char* value);
  inline void set_document_version_uuid(const char* value, size_t size);
  inline ::std::string* mutable_document_version_uuid();
  inline ::std::string* release_document_version_uuid();
  inline void set_allocated_document_version_uuid(::std::string* document_version_uuid);

  // required .TSP.ComponentInfo component = 3;
  inline bool has_component() const;
  inline void clear_component();
  static const int kComponentFieldNumber = 3;
  inline const ::TSP::ComponentInfo& component() const;
  inline ::TSP::ComponentInfo* mutable_component();
  inline ::TSP::ComponentInfo* release_component();
  inline void set_allocated_component(::TSP::ComponentInfo* component);

  // @@protoc_insertion_point(class_scope:TSP.ViewStateMetadata)
 private:
  inline void set_has_document_version_uuid();
  inline void clear_has_document_version_uuid();
  inline void set_has_component();
  inline void clear_has_component();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > version_;
  mutable int _version_cached_byte_size_;
  ::std::string* document_version_uuid_;
  ::TSP::ComponentInfo* component_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_TSPArchiveMessages_2eproto();
  friend void protobuf_AssignDesc_TSPArchiveMessages_2eproto();
  friend void protobuf_ShutdownFile_TSPArchiveMessages_2eproto();

  void InitAsDefaultInstance();
  static ViewStateMetadata* default_instance_;
};
// ===================================================================


// ===================================================================

// ArchiveInfo

// optional uint64 identifier = 1;
inline bool ArchiveInfo::has_identifier() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ArchiveInfo::set_has_identifier() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ArchiveInfo::clear_has_identifier() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ArchiveInfo::clear_identifier() {
  identifier_ = GOOGLE_ULONGLONG(0);
  clear_has_identifier();
}
inline ::google::protobuf::uint64 ArchiveInfo::identifier() const {
  return identifier_;
}
inline void ArchiveInfo::set_identifier(::google::protobuf::uint64 value) {
  set_has_identifier();
  identifier_ = value;
}

// repeated .TSP.MessageInfo message_infos = 2;
inline int ArchiveInfo::message_infos_size() const {
  return message_infos_.size();
}
inline void ArchiveInfo::clear_message_infos() {
  message_infos_.Clear();
}
inline const ::TSP::MessageInfo& ArchiveInfo::message_infos(int index) const {
  return message_infos_.Get(index);
}
inline ::TSP::MessageInfo* ArchiveInfo::mutable_message_infos(int index) {
  return message_infos_.Mutable(index);
}
inline ::TSP::MessageInfo* ArchiveInfo::add_message_infos() {
  return message_infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TSP::MessageInfo >&
ArchiveInfo::message_infos() const {
  return message_infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::TSP::MessageInfo >*
ArchiveInfo::mutable_message_infos() {
  return &message_infos_;
}

// -------------------------------------------------------------------

// MessageInfo

// required uint32 type = 1;
inline bool MessageInfo::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MessageInfo::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MessageInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MessageInfo::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 MessageInfo::type() const {
  return type_;
}
inline void MessageInfo::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// repeated uint32 version = 2 [packed = true];
inline int MessageInfo::version_size() const {
  return version_.size();
}
inline void MessageInfo::clear_version() {
  version_.Clear();
}
inline ::google::protobuf::uint32 MessageInfo::version(int index) const {
  return version_.Get(index);
}
inline void MessageInfo::set_version(int index, ::google::protobuf::uint32 value) {
  version_.Set(index, value);
}
inline void MessageInfo::add_version(::google::protobuf::uint32 value) {
  version_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MessageInfo::version() const {
  return version_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MessageInfo::mutable_version() {
  return &version_;
}

// required uint32 length = 3;
inline bool MessageInfo::has_length() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MessageInfo::set_has_length() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MessageInfo::clear_has_length() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MessageInfo::clear_length() {
  length_ = 0u;
  clear_has_length();
}
inline ::google::protobuf::uint32 MessageInfo::length() const {
  return length_;
}
inline void MessageInfo::set_length(::google::protobuf::uint32 value) {
  set_has_length();
  length_ = value;
}

// repeated .TSP.FieldInfo field_infos = 4;
inline int MessageInfo::field_infos_size() const {
  return field_infos_.size();
}
inline void MessageInfo::clear_field_infos() {
  field_infos_.Clear();
}
inline const ::TSP::FieldInfo& MessageInfo::field_infos(int index) const {
  return field_infos_.Get(index);
}
inline ::TSP::FieldInfo* MessageInfo::mutable_field_infos(int index) {
  return field_infos_.Mutable(index);
}
inline ::TSP::FieldInfo* MessageInfo::add_field_infos() {
  return field_infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TSP::FieldInfo >&
MessageInfo::field_infos() const {
  return field_infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::TSP::FieldInfo >*
MessageInfo::mutable_field_infos() {
  return &field_infos_;
}

// repeated uint64 object_references = 5 [packed = true];
inline int MessageInfo::object_references_size() const {
  return object_references_.size();
}
inline void MessageInfo::clear_object_references() {
  object_references_.Clear();
}
inline ::google::protobuf::uint64 MessageInfo::object_references(int index) const {
  return object_references_.Get(index);
}
inline void MessageInfo::set_object_references(int index, ::google::protobuf::uint64 value) {
  object_references_.Set(index, value);
}
inline void MessageInfo::add_object_references(::google::protobuf::uint64 value) {
  object_references_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
MessageInfo::object_references() const {
  return object_references_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
MessageInfo::mutable_object_references() {
  return &object_references_;
}

// repeated uint64 data_references = 6 [packed = true];
inline int MessageInfo::data_references_size() const {
  return data_references_.size();
}
inline void MessageInfo::clear_data_references() {
  data_references_.Clear();
}
inline ::google::protobuf::uint64 MessageInfo::data_references(int index) const {
  return data_references_.Get(index);
}
inline void MessageInfo::set_data_references(int index, ::google::protobuf::uint64 value) {
  data_references_.Set(index, value);
}
inline void MessageInfo::add_data_references(::google::protobuf::uint64 value) {
  data_references_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
MessageInfo::data_references() const {
  return data_references_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
MessageInfo::mutable_data_references() {
  return &data_references_;
}

// -------------------------------------------------------------------

// FieldInfo

// required .TSP.FieldPath path = 1;
inline bool FieldInfo::has_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FieldInfo::set_has_path() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FieldInfo::clear_has_path() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FieldInfo::clear_path() {
  if (path_ != NULL) path_->::TSP::FieldPath::Clear();
  clear_has_path();
}
inline const ::TSP::FieldPath& FieldInfo::path() const {
  return path_ != NULL ? *path_ : *default_instance_->path_;
}
inline ::TSP::FieldPath* FieldInfo::mutable_path() {
  set_has_path();
  if (path_ == NULL) path_ = new ::TSP::FieldPath;
  return path_;
}
inline ::TSP::FieldPath* FieldInfo::release_path() {
  clear_has_path();
  ::TSP::FieldPath* temp = path_;
  path_ = NULL;
  return temp;
}
inline void FieldInfo::set_allocated_path(::TSP::FieldPath* path) {
  delete path_;
  path_ = path;
  if (path) {
    set_has_path();
  } else {
    clear_has_path();
  }
}

// optional .TSP.FieldInfo.Type type = 2 [default = Value];
inline bool FieldInfo::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FieldInfo::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FieldInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FieldInfo::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::TSP::FieldInfo_Type FieldInfo::type() const {
  return static_cast< ::TSP::FieldInfo_Type >(type_);
}
inline void FieldInfo::set_type(::TSP::FieldInfo_Type value) {
  assert(::TSP::FieldInfo_Type_IsValid(value));
  set_has_type();
  type_ = value;
}

// optional .TSP.FieldInfo.Rule rule = 3 [default = IgnoreAndDrop];
inline bool FieldInfo::has_rule() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FieldInfo::set_has_rule() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FieldInfo::clear_has_rule() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FieldInfo::clear_rule() {
  rule_ = 0;
  clear_has_rule();
}
inline ::TSP::FieldInfo_Rule FieldInfo::rule() const {
  return static_cast< ::TSP::FieldInfo_Rule >(rule_);
}
inline void FieldInfo::set_rule(::TSP::FieldInfo_Rule value) {
  assert(::TSP::FieldInfo_Rule_IsValid(value));
  set_has_rule();
  rule_ = value;
}

// repeated uint64 object_references = 4 [packed = true];
inline int FieldInfo::object_references_size() const {
  return object_references_.size();
}
inline void FieldInfo::clear_object_references() {
  object_references_.Clear();
}
inline ::google::protobuf::uint64 FieldInfo::object_references(int index) const {
  return object_references_.Get(index);
}
inline void FieldInfo::set_object_references(int index, ::google::protobuf::uint64 value) {
  object_references_.Set(index, value);
}
inline void FieldInfo::add_object_references(::google::protobuf::uint64 value) {
  object_references_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
FieldInfo::object_references() const {
  return object_references_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
FieldInfo::mutable_object_references() {
  return &object_references_;
}

// repeated uint64 data_references = 5 [packed = true];
inline int FieldInfo::data_references_size() const {
  return data_references_.size();
}
inline void FieldInfo::clear_data_references() {
  data_references_.Clear();
}
inline ::google::protobuf::uint64 FieldInfo::data_references(int index) const {
  return data_references_.Get(index);
}
inline void FieldInfo::set_data_references(int index, ::google::protobuf::uint64 value) {
  data_references_.Set(index, value);
}
inline void FieldInfo::add_data_references(::google::protobuf::uint64 value) {
  data_references_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
FieldInfo::data_references() const {
  return data_references_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
FieldInfo::mutable_data_references() {
  return &data_references_;
}

// -------------------------------------------------------------------

// FieldPath

// repeated uint32 path = 1 [packed = true];
inline int FieldPath::path_size() const {
  return path_.size();
}
inline void FieldPath::clear_path() {
  path_.Clear();
}
inline ::google::protobuf::uint32 FieldPath::path(int index) const {
  return path_.Get(index);
}
inline void FieldPath::set_path(int index, ::google::protobuf::uint32 value) {
  path_.Set(index, value);
}
inline void FieldPath::add_path(::google::protobuf::uint32 value) {
  path_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
FieldPath::path() const {
  return path_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
FieldPath::mutable_path() {
  return &path_;
}

// -------------------------------------------------------------------

// ComponentInfo

// required uint64 identifier = 1;
inline bool ComponentInfo::has_identifier() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ComponentInfo::set_has_identifier() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ComponentInfo::clear_has_identifier() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ComponentInfo::clear_identifier() {
  identifier_ = GOOGLE_ULONGLONG(0);
  clear_has_identifier();
}
inline ::google::protobuf::uint64 ComponentInfo::identifier() const {
  return identifier_;
}
inline void ComponentInfo::set_identifier(::google::protobuf::uint64 value) {
  set_has_identifier();
  identifier_ = value;
}

// required string preferred_locator = 2;
inline bool ComponentInfo::has_preferred_locator() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ComponentInfo::set_has_preferred_locator() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ComponentInfo::clear_has_preferred_locator() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ComponentInfo::clear_preferred_locator() {
  if (preferred_locator_ != &::google::protobuf::internal::kEmptyString) {
    preferred_locator_->clear();
  }
  clear_has_preferred_locator();
}
inline const ::std::string& ComponentInfo::preferred_locator() const {
  return *preferred_locator_;
}
inline void ComponentInfo::set_preferred_locator(const ::std::string& value) {
  set_has_preferred_locator();
  if (preferred_locator_ == &::google::protobuf::internal::kEmptyString) {
    preferred_locator_ = new ::std::string;
  }
  preferred_locator_->assign(value);
}
inline void ComponentInfo::set_preferred_locator(const char* value) {
  set_has_preferred_locator();
  if (preferred_locator_ == &::google::protobuf::internal::kEmptyString) {
    preferred_locator_ = new ::std::string;
  }
  preferred_locator_->assign(value);
}
inline void ComponentInfo::set_preferred_locator(const char* value, size_t size) {
  set_has_preferred_locator();
  if (preferred_locator_ == &::google::protobuf::internal::kEmptyString) {
    preferred_locator_ = new ::std::string;
  }
  preferred_locator_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ComponentInfo::mutable_preferred_locator() {
  set_has_preferred_locator();
  if (preferred_locator_ == &::google::protobuf::internal::kEmptyString) {
    preferred_locator_ = new ::std::string;
  }
  return preferred_locator_;
}
inline ::std::string* ComponentInfo::release_preferred_locator() {
  clear_has_preferred_locator();
  if (preferred_locator_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = preferred_locator_;
    preferred_locator_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ComponentInfo::set_allocated_preferred_locator(::std::string* preferred_locator) {
  if (preferred_locator_ != &::google::protobuf::internal::kEmptyString) {
    delete preferred_locator_;
  }
  if (preferred_locator) {
    set_has_preferred_locator();
    preferred_locator_ = preferred_locator;
  } else {
    clear_has_preferred_locator();
    preferred_locator_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string locator = 3;
inline bool ComponentInfo::has_locator() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ComponentInfo::set_has_locator() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ComponentInfo::clear_has_locator() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ComponentInfo::clear_locator() {
  if (locator_ != &::google::protobuf::internal::kEmptyString) {
    locator_->clear();
  }
  clear_has_locator();
}
inline const ::std::string& ComponentInfo::locator() const {
  return *locator_;
}
inline void ComponentInfo::set_locator(const ::std::string& value) {
  set_has_locator();
  if (locator_ == &::google::protobuf::internal::kEmptyString) {
    locator_ = new ::std::string;
  }
  locator_->assign(value);
}
inline void ComponentInfo::set_locator(const char* value) {
  set_has_locator();
  if (locator_ == &::google::protobuf::internal::kEmptyString) {
    locator_ = new ::std::string;
  }
  locator_->assign(value);
}
inline void ComponentInfo::set_locator(const char* value, size_t size) {
  set_has_locator();
  if (locator_ == &::google::protobuf::internal::kEmptyString) {
    locator_ = new ::std::string;
  }
  locator_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ComponentInfo::mutable_locator() {
  set_has_locator();
  if (locator_ == &::google::protobuf::internal::kEmptyString) {
    locator_ = new ::std::string;
  }
  return locator_;
}
inline ::std::string* ComponentInfo::release_locator() {
  clear_has_locator();
  if (locator_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = locator_;
    locator_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ComponentInfo::set_allocated_locator(::std::string* locator) {
  if (locator_ != &::google::protobuf::internal::kEmptyString) {
    delete locator_;
  }
  if (locator) {
    set_has_locator();
    locator_ = locator;
  } else {
    clear_has_locator();
    locator_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated uint32 read_version = 4 [packed = true];
inline int ComponentInfo::read_version_size() const {
  return read_version_.size();
}
inline void ComponentInfo::clear_read_version() {
  read_version_.Clear();
}
inline ::google::protobuf::uint32 ComponentInfo::read_version(int index) const {
  return read_version_.Get(index);
}
inline void ComponentInfo::set_read_version(int index, ::google::protobuf::uint32 value) {
  read_version_.Set(index, value);
}
inline void ComponentInfo::add_read_version(::google::protobuf::uint32 value) {
  read_version_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ComponentInfo::read_version() const {
  return read_version_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ComponentInfo::mutable_read_version() {
  return &read_version_;
}

// repeated uint32 write_version = 5 [packed = true];
inline int ComponentInfo::write_version_size() const {
  return write_version_.size();
}
inline void ComponentInfo::clear_write_version() {
  write_version_.Clear();
}
inline ::google::protobuf::uint32 ComponentInfo::write_version(int index) const {
  return write_version_.Get(index);
}
inline void ComponentInfo::set_write_version(int index, ::google::protobuf::uint32 value) {
  write_version_.Set(index, value);
}
inline void ComponentInfo::add_write_version(::google::protobuf::uint32 value) {
  write_version_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ComponentInfo::write_version() const {
  return write_version_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ComponentInfo::mutable_write_version() {
  return &write_version_;
}

// repeated .TSP.ComponentExternalReference external_references = 6;
inline int ComponentInfo::external_references_size() const {
  return external_references_.size();
}
inline void ComponentInfo::clear_external_references() {
  external_references_.Clear();
}
inline const ::TSP::ComponentExternalReference& ComponentInfo::external_references(int index) const {
  return external_references_.Get(index);
}
inline ::TSP::ComponentExternalReference* ComponentInfo::mutable_external_references(int index) {
  return external_references_.Mutable(index);
}
inline ::TSP::ComponentExternalReference* ComponentInfo::add_external_references() {
  return external_references_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TSP::ComponentExternalReference >&
ComponentInfo::external_references() const {
  return external_references_;
}
inline ::google::protobuf::RepeatedPtrField< ::TSP::ComponentExternalReference >*
ComponentInfo::mutable_external_references() {
  return &external_references_;
}

// repeated .TSP.ComponentDataReference data_references = 7;
inline int ComponentInfo::data_references_size() const {
  return data_references_.size();
}
inline void ComponentInfo::clear_data_references() {
  data_references_.Clear();
}
inline const ::TSP::ComponentDataReference& ComponentInfo::data_references(int index) const {
  return data_references_.Get(index);
}
inline ::TSP::ComponentDataReference* ComponentInfo::mutable_data_references(int index) {
  return data_references_.Mutable(index);
}
inline ::TSP::ComponentDataReference* ComponentInfo::add_data_references() {
  return data_references_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TSP::ComponentDataReference >&
ComponentInfo::data_references() const {
  return data_references_;
}
inline ::google::protobuf::RepeatedPtrField< ::TSP::ComponentDataReference >*
ComponentInfo::mutable_data_references() {
  return &data_references_;
}

// repeated .TSP.ObjectUUIDMapEntry object_uuid_map_entries = 11;
inline int ComponentInfo::object_uuid_map_entries_size() const {
  return object_uuid_map_entries_.size();
}
inline void ComponentInfo::clear_object_uuid_map_entries() {
  object_uuid_map_entries_.Clear();
}
inline const ::TSP::ObjectUUIDMapEntry& ComponentInfo::object_uuid_map_entries(int index) const {
  return object_uuid_map_entries_.Get(index);
}
inline ::TSP::ObjectUUIDMapEntry* ComponentInfo::mutable_object_uuid_map_entries(int index) {
  return object_uuid_map_entries_.Mutable(index);
}
inline ::TSP::ObjectUUIDMapEntry* ComponentInfo::add_object_uuid_map_entries() {
  return object_uuid_map_entries_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TSP::ObjectUUIDMapEntry >&
ComponentInfo::object_uuid_map_entries() const {
  return object_uuid_map_entries_;
}
inline ::google::protobuf::RepeatedPtrField< ::TSP::ObjectUUIDMapEntry >*
ComponentInfo::mutable_object_uuid_map_entries() {
  return &object_uuid_map_entries_;
}

// optional bool is_stored_outside_object_archive = 10 [default = false];
inline bool ComponentInfo::has_is_stored_outside_object_archive() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ComponentInfo::set_has_is_stored_outside_object_archive() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ComponentInfo::clear_has_is_stored_outside_object_archive() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ComponentInfo::clear_is_stored_outside_object_archive() {
  is_stored_outside_object_archive_ = false;
  clear_has_is_stored_outside_object_archive();
}
inline bool ComponentInfo::is_stored_outside_object_archive() const {
  return is_stored_outside_object_archive_;
}
inline void ComponentInfo::set_is_stored_outside_object_archive(bool value) {
  set_has_is_stored_outside_object_archive();
  is_stored_outside_object_archive_ = value;
}

// optional uint64 save_token = 12 [default = 0];
inline bool ComponentInfo::has_save_token() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ComponentInfo::set_has_save_token() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ComponentInfo::clear_has_save_token() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ComponentInfo::clear_save_token() {
  save_token_ = GOOGLE_ULONGLONG(0);
  clear_has_save_token();
}
inline ::google::protobuf::uint64 ComponentInfo::save_token() const {
  return save_token_;
}
inline void ComponentInfo::set_save_token(::google::protobuf::uint64 value) {
  set_has_save_token();
  save_token_ = value;
}

// -------------------------------------------------------------------

// ComponentExternalReference

// required uint64 component_identifier = 1;
inline bool ComponentExternalReference::has_component_identifier() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ComponentExternalReference::set_has_component_identifier() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ComponentExternalReference::clear_has_component_identifier() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ComponentExternalReference::clear_component_identifier() {
  component_identifier_ = GOOGLE_ULONGLONG(0);
  clear_has_component_identifier();
}
inline ::google::protobuf::uint64 ComponentExternalReference::component_identifier() const {
  return component_identifier_;
}
inline void ComponentExternalReference::set_component_identifier(::google::protobuf::uint64 value) {
  set_has_component_identifier();
  component_identifier_ = value;
}

// optional uint64 object_identifier = 2;
inline bool ComponentExternalReference::has_object_identifier() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ComponentExternalReference::set_has_object_identifier() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ComponentExternalReference::clear_has_object_identifier() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ComponentExternalReference::clear_object_identifier() {
  object_identifier_ = GOOGLE_ULONGLONG(0);
  clear_has_object_identifier();
}
inline ::google::protobuf::uint64 ComponentExternalReference::object_identifier() const {
  return object_identifier_;
}
inline void ComponentExternalReference::set_object_identifier(::google::protobuf::uint64 value) {
  set_has_object_identifier();
  object_identifier_ = value;
}

// optional bool is_weak = 3;
inline bool ComponentExternalReference::has_is_weak() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ComponentExternalReference::set_has_is_weak() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ComponentExternalReference::clear_has_is_weak() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ComponentExternalReference::clear_is_weak() {
  is_weak_ = false;
  clear_has_is_weak();
}
inline bool ComponentExternalReference::is_weak() const {
  return is_weak_;
}
inline void ComponentExternalReference::set_is_weak(bool value) {
  set_has_is_weak();
  is_weak_ = value;
}

// -------------------------------------------------------------------

// ComponentDataReference

// required uint64 data_identifier = 1;
inline bool ComponentDataReference::has_data_identifier() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ComponentDataReference::set_has_data_identifier() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ComponentDataReference::clear_has_data_identifier() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ComponentDataReference::clear_data_identifier() {
  data_identifier_ = GOOGLE_ULONGLONG(0);
  clear_has_data_identifier();
}
inline ::google::protobuf::uint64 ComponentDataReference::data_identifier() const {
  return data_identifier_;
}
inline void ComponentDataReference::set_data_identifier(::google::protobuf::uint64 value) {
  set_has_data_identifier();
  data_identifier_ = value;
}

// -------------------------------------------------------------------

// UUIDInternal

// required uint64 lower = 1;
inline bool UUIDInternal::has_lower() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UUIDInternal::set_has_lower() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UUIDInternal::clear_has_lower() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UUIDInternal::clear_lower() {
  lower_ = GOOGLE_ULONGLONG(0);
  clear_has_lower();
}
inline ::google::protobuf::uint64 UUIDInternal::lower() const {
  return lower_;
}
inline void UUIDInternal::set_lower(::google::protobuf::uint64 value) {
  set_has_lower();
  lower_ = value;
}

// required uint64 upper = 2;
inline bool UUIDInternal::has_upper() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UUIDInternal::set_has_upper() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UUIDInternal::clear_has_upper() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UUIDInternal::clear_upper() {
  upper_ = GOOGLE_ULONGLONG(0);
  clear_has_upper();
}
inline ::google::protobuf::uint64 UUIDInternal::upper() const {
  return upper_;
}
inline void UUIDInternal::set_upper(::google::protobuf::uint64 value) {
  set_has_upper();
  upper_ = value;
}

// -------------------------------------------------------------------

// ObjectUUIDMapEntry

// required uint64 identifier = 1;
inline bool ObjectUUIDMapEntry::has_identifier() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ObjectUUIDMapEntry::set_has_identifier() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ObjectUUIDMapEntry::clear_has_identifier() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ObjectUUIDMapEntry::clear_identifier() {
  identifier_ = GOOGLE_ULONGLONG(0);
  clear_has_identifier();
}
inline ::google::protobuf::uint64 ObjectUUIDMapEntry::identifier() const {
  return identifier_;
}
inline void ObjectUUIDMapEntry::set_identifier(::google::protobuf::uint64 value) {
  set_has_identifier();
  identifier_ = value;
}

// required .TSP.UUIDInternal uuid = 2;
inline bool ObjectUUIDMapEntry::has_uuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ObjectUUIDMapEntry::set_has_uuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ObjectUUIDMapEntry::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ObjectUUIDMapEntry::clear_uuid() {
  if (uuid_ != NULL) uuid_->::TSP::UUIDInternal::Clear();
  clear_has_uuid();
}
inline const ::TSP::UUIDInternal& ObjectUUIDMapEntry::uuid() const {
  return uuid_ != NULL ? *uuid_ : *default_instance_->uuid_;
}
inline ::TSP::UUIDInternal* ObjectUUIDMapEntry::mutable_uuid() {
  set_has_uuid();
  if (uuid_ == NULL) uuid_ = new ::TSP::UUIDInternal;
  return uuid_;
}
inline ::TSP::UUIDInternal* ObjectUUIDMapEntry::release_uuid() {
  clear_has_uuid();
  ::TSP::UUIDInternal* temp = uuid_;
  uuid_ = NULL;
  return temp;
}
inline void ObjectUUIDMapEntry::set_allocated_uuid(::TSP::UUIDInternal* uuid) {
  delete uuid_;
  uuid_ = uuid;
  if (uuid) {
    set_has_uuid();
  } else {
    clear_has_uuid();
  }
}

// -------------------------------------------------------------------

// PackageMetadata

// required uint64 last_object_identifier = 1;
inline bool PackageMetadata::has_last_object_identifier() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PackageMetadata::set_has_last_object_identifier() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PackageMetadata::clear_has_last_object_identifier() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PackageMetadata::clear_last_object_identifier() {
  last_object_identifier_ = GOOGLE_ULONGLONG(0);
  clear_has_last_object_identifier();
}
inline ::google::protobuf::uint64 PackageMetadata::last_object_identifier() const {
  return last_object_identifier_;
}
inline void PackageMetadata::set_last_object_identifier(::google::protobuf::uint64 value) {
  set_has_last_object_identifier();
  last_object_identifier_ = value;
}

// optional .TSP.DocumentRevision revision = 2;
inline bool PackageMetadata::has_revision() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PackageMetadata::set_has_revision() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PackageMetadata::clear_has_revision() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PackageMetadata::clear_revision() {
  if (revision_ != NULL) revision_->::TSP::DocumentRevision::Clear();
  clear_has_revision();
}
inline const ::TSP::DocumentRevision& PackageMetadata::revision() const {
  return revision_ != NULL ? *revision_ : *default_instance_->revision_;
}
inline ::TSP::DocumentRevision* PackageMetadata::mutable_revision() {
  set_has_revision();
  if (revision_ == NULL) revision_ = new ::TSP::DocumentRevision;
  return revision_;
}
inline ::TSP::DocumentRevision* PackageMetadata::release_revision() {
  clear_has_revision();
  ::TSP::DocumentRevision* temp = revision_;
  revision_ = NULL;
  return temp;
}
inline void PackageMetadata::set_allocated_revision(::TSP::DocumentRevision* revision) {
  delete revision_;
  revision_ = revision;
  if (revision) {
    set_has_revision();
  } else {
    clear_has_revision();
  }
}

// repeated .TSP.ComponentInfo components = 3;
inline int PackageMetadata::components_size() const {
  return components_.size();
}
inline void PackageMetadata::clear_components() {
  components_.Clear();
}
inline const ::TSP::ComponentInfo& PackageMetadata::components(int index) const {
  return components_.Get(index);
}
inline ::TSP::ComponentInfo* PackageMetadata::mutable_components(int index) {
  return components_.Mutable(index);
}
inline ::TSP::ComponentInfo* PackageMetadata::add_components() {
  return components_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TSP::ComponentInfo >&
PackageMetadata::components() const {
  return components_;
}
inline ::google::protobuf::RepeatedPtrField< ::TSP::ComponentInfo >*
PackageMetadata::mutable_components() {
  return &components_;
}

// repeated .TSP.DataInfo datas = 4;
inline int PackageMetadata::datas_size() const {
  return datas_.size();
}
inline void PackageMetadata::clear_datas() {
  datas_.Clear();
}
inline const ::TSP::DataInfo& PackageMetadata::datas(int index) const {
  return datas_.Get(index);
}
inline ::TSP::DataInfo* PackageMetadata::mutable_datas(int index) {
  return datas_.Mutable(index);
}
inline ::TSP::DataInfo* PackageMetadata::add_datas() {
  return datas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TSP::DataInfo >&
PackageMetadata::datas() const {
  return datas_;
}
inline ::google::protobuf::RepeatedPtrField< ::TSP::DataInfo >*
PackageMetadata::mutable_datas() {
  return &datas_;
}

// repeated uint32 read_version = 5 [packed = true];
inline int PackageMetadata::read_version_size() const {
  return read_version_.size();
}
inline void PackageMetadata::clear_read_version() {
  read_version_.Clear();
}
inline ::google::protobuf::uint32 PackageMetadata::read_version(int index) const {
  return read_version_.Get(index);
}
inline void PackageMetadata::set_read_version(int index, ::google::protobuf::uint32 value) {
  read_version_.Set(index, value);
}
inline void PackageMetadata::add_read_version(::google::protobuf::uint32 value) {
  read_version_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PackageMetadata::read_version() const {
  return read_version_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PackageMetadata::mutable_read_version() {
  return &read_version_;
}

// repeated uint32 write_version = 6 [packed = true];
inline int PackageMetadata::write_version_size() const {
  return write_version_.size();
}
inline void PackageMetadata::clear_write_version() {
  write_version_.Clear();
}
inline ::google::protobuf::uint32 PackageMetadata::write_version(int index) const {
  return write_version_.Get(index);
}
inline void PackageMetadata::set_write_version(int index, ::google::protobuf::uint32 value) {
  write_version_.Set(index, value);
}
inline void PackageMetadata::add_write_version(::google::protobuf::uint32 value) {
  write_version_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PackageMetadata::write_version() const {
  return write_version_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PackageMetadata::mutable_write_version() {
  return &write_version_;
}

// repeated uint32 file_format_version = 7 [packed = true];
inline int PackageMetadata::file_format_version_size() const {
  return file_format_version_.size();
}
inline void PackageMetadata::clear_file_format_version() {
  file_format_version_.Clear();
}
inline ::google::protobuf::uint32 PackageMetadata::file_format_version(int index) const {
  return file_format_version_.Get(index);
}
inline void PackageMetadata::set_file_format_version(int index, ::google::protobuf::uint32 value) {
  file_format_version_.Set(index, value);
}
inline void PackageMetadata::add_file_format_version(::google::protobuf::uint32 value) {
  file_format_version_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PackageMetadata::file_format_version() const {
  return file_format_version_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PackageMetadata::mutable_file_format_version() {
  return &file_format_version_;
}

// optional uint64 save_token = 8 [default = 0];
inline bool PackageMetadata::has_save_token() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PackageMetadata::set_has_save_token() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PackageMetadata::clear_has_save_token() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PackageMetadata::clear_save_token() {
  save_token_ = GOOGLE_ULONGLONG(0);
  clear_has_save_token();
}
inline ::google::protobuf::uint64 PackageMetadata::save_token() const {
  return save_token_;
}
inline void PackageMetadata::set_save_token(::google::protobuf::uint64 value) {
  set_has_save_token();
  save_token_ = value;
}

// -------------------------------------------------------------------

// DocumentRevision

// optional uint64 sequence = 1 [default = 0];
inline bool DocumentRevision::has_sequence() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DocumentRevision::set_has_sequence() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DocumentRevision::clear_has_sequence() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DocumentRevision::clear_sequence() {
  sequence_ = GOOGLE_ULONGLONG(0);
  clear_has_sequence();
}
inline ::google::protobuf::uint64 DocumentRevision::sequence() const {
  return sequence_;
}
inline void DocumentRevision::set_sequence(::google::protobuf::uint64 value) {
  set_has_sequence();
  sequence_ = value;
}

// optional string identifier = 2;
inline bool DocumentRevision::has_identifier() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DocumentRevision::set_has_identifier() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DocumentRevision::clear_has_identifier() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DocumentRevision::clear_identifier() {
  if (identifier_ != &::google::protobuf::internal::kEmptyString) {
    identifier_->clear();
  }
  clear_has_identifier();
}
inline const ::std::string& DocumentRevision::identifier() const {
  return *identifier_;
}
inline void DocumentRevision::set_identifier(const ::std::string& value) {
  set_has_identifier();
  if (identifier_ == &::google::protobuf::internal::kEmptyString) {
    identifier_ = new ::std::string;
  }
  identifier_->assign(value);
}
inline void DocumentRevision::set_identifier(const char* value) {
  set_has_identifier();
  if (identifier_ == &::google::protobuf::internal::kEmptyString) {
    identifier_ = new ::std::string;
  }
  identifier_->assign(value);
}
inline void DocumentRevision::set_identifier(const char* value, size_t size) {
  set_has_identifier();
  if (identifier_ == &::google::protobuf::internal::kEmptyString) {
    identifier_ = new ::std::string;
  }
  identifier_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DocumentRevision::mutable_identifier() {
  set_has_identifier();
  if (identifier_ == &::google::protobuf::internal::kEmptyString) {
    identifier_ = new ::std::string;
  }
  return identifier_;
}
inline ::std::string* DocumentRevision::release_identifier() {
  clear_has_identifier();
  if (identifier_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = identifier_;
    identifier_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DocumentRevision::set_allocated_identifier(::std::string* identifier) {
  if (identifier_ != &::google::protobuf::internal::kEmptyString) {
    delete identifier_;
  }
  if (identifier) {
    set_has_identifier();
    identifier_ = identifier;
  } else {
    clear_has_identifier();
    identifier_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// PasteboardMetadata

// repeated uint32 version = 1 [packed = true];
inline int PasteboardMetadata::version_size() const {
  return version_.size();
}
inline void PasteboardMetadata::clear_version() {
  version_.Clear();
}
inline ::google::protobuf::uint32 PasteboardMetadata::version(int index) const {
  return version_.Get(index);
}
inline void PasteboardMetadata::set_version(int index, ::google::protobuf::uint32 value) {
  version_.Set(index, value);
}
inline void PasteboardMetadata::add_version(::google::protobuf::uint32 value) {
  version_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PasteboardMetadata::version() const {
  return version_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PasteboardMetadata::mutable_version() {
  return &version_;
}

// required string app_name = 2;
inline bool PasteboardMetadata::has_app_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PasteboardMetadata::set_has_app_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PasteboardMetadata::clear_has_app_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PasteboardMetadata::clear_app_name() {
  if (app_name_ != &::google::protobuf::internal::kEmptyString) {
    app_name_->clear();
  }
  clear_has_app_name();
}
inline const ::std::string& PasteboardMetadata::app_name() const {
  return *app_name_;
}
inline void PasteboardMetadata::set_app_name(const ::std::string& value) {
  set_has_app_name();
  if (app_name_ == &::google::protobuf::internal::kEmptyString) {
    app_name_ = new ::std::string;
  }
  app_name_->assign(value);
}
inline void PasteboardMetadata::set_app_name(const char* value) {
  set_has_app_name();
  if (app_name_ == &::google::protobuf::internal::kEmptyString) {
    app_name_ = new ::std::string;
  }
  app_name_->assign(value);
}
inline void PasteboardMetadata::set_app_name(const char* value, size_t size) {
  set_has_app_name();
  if (app_name_ == &::google::protobuf::internal::kEmptyString) {
    app_name_ = new ::std::string;
  }
  app_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PasteboardMetadata::mutable_app_name() {
  set_has_app_name();
  if (app_name_ == &::google::protobuf::internal::kEmptyString) {
    app_name_ = new ::std::string;
  }
  return app_name_;
}
inline ::std::string* PasteboardMetadata::release_app_name() {
  clear_has_app_name();
  if (app_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = app_name_;
    app_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PasteboardMetadata::set_allocated_app_name(::std::string* app_name) {
  if (app_name_ != &::google::protobuf::internal::kEmptyString) {
    delete app_name_;
  }
  if (app_name) {
    set_has_app_name();
    app_name_ = app_name;
  } else {
    clear_has_app_name();
    app_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .TSP.DataInfo datas = 3;
inline int PasteboardMetadata::datas_size() const {
  return datas_.size();
}
inline void PasteboardMetadata::clear_datas() {
  datas_.Clear();
}
inline const ::TSP::DataInfo& PasteboardMetadata::datas(int index) const {
  return datas_.Get(index);
}
inline ::TSP::DataInfo* PasteboardMetadata::mutable_datas(int index) {
  return datas_.Mutable(index);
}
inline ::TSP::DataInfo* PasteboardMetadata::add_datas() {
  return datas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TSP::DataInfo >&
PasteboardMetadata::datas() const {
  return datas_;
}
inline ::google::protobuf::RepeatedPtrField< ::TSP::DataInfo >*
PasteboardMetadata::mutable_datas() {
  return &datas_;
}

// optional string source_document_uuid = 4;
inline bool PasteboardMetadata::has_source_document_uuid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PasteboardMetadata::set_has_source_document_uuid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PasteboardMetadata::clear_has_source_document_uuid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PasteboardMetadata::clear_source_document_uuid() {
  if (source_document_uuid_ != &::google::protobuf::internal::kEmptyString) {
    source_document_uuid_->clear();
  }
  clear_has_source_document_uuid();
}
inline const ::std::string& PasteboardMetadata::source_document_uuid() const {
  return *source_document_uuid_;
}
inline void PasteboardMetadata::set_source_document_uuid(const ::std::string& value) {
  set_has_source_document_uuid();
  if (source_document_uuid_ == &::google::protobuf::internal::kEmptyString) {
    source_document_uuid_ = new ::std::string;
  }
  source_document_uuid_->assign(value);
}
inline void PasteboardMetadata::set_source_document_uuid(const char* value) {
  set_has_source_document_uuid();
  if (source_document_uuid_ == &::google::protobuf::internal::kEmptyString) {
    source_document_uuid_ = new ::std::string;
  }
  source_document_uuid_->assign(value);
}
inline void PasteboardMetadata::set_source_document_uuid(const char* value, size_t size) {
  set_has_source_document_uuid();
  if (source_document_uuid_ == &::google::protobuf::internal::kEmptyString) {
    source_document_uuid_ = new ::std::string;
  }
  source_document_uuid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PasteboardMetadata::mutable_source_document_uuid() {
  set_has_source_document_uuid();
  if (source_document_uuid_ == &::google::protobuf::internal::kEmptyString) {
    source_document_uuid_ = new ::std::string;
  }
  return source_document_uuid_;
}
inline ::std::string* PasteboardMetadata::release_source_document_uuid() {
  clear_has_source_document_uuid();
  if (source_document_uuid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = source_document_uuid_;
    source_document_uuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PasteboardMetadata::set_allocated_source_document_uuid(::std::string* source_document_uuid) {
  if (source_document_uuid_ != &::google::protobuf::internal::kEmptyString) {
    delete source_document_uuid_;
  }
  if (source_document_uuid) {
    set_has_source_document_uuid();
    source_document_uuid_ = source_document_uuid;
  } else {
    clear_has_source_document_uuid();
    source_document_uuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// DataInfo

// required uint64 identifier = 1;
inline bool DataInfo::has_identifier() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DataInfo::set_has_identifier() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DataInfo::clear_has_identifier() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DataInfo::clear_identifier() {
  identifier_ = GOOGLE_ULONGLONG(0);
  clear_has_identifier();
}
inline ::google::protobuf::uint64 DataInfo::identifier() const {
  return identifier_;
}
inline void DataInfo::set_identifier(::google::protobuf::uint64 value) {
  set_has_identifier();
  identifier_ = value;
}

// required bytes digest = 2;
inline bool DataInfo::has_digest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DataInfo::set_has_digest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DataInfo::clear_has_digest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DataInfo::clear_digest() {
  if (digest_ != &::google::protobuf::internal::kEmptyString) {
    digest_->clear();
  }
  clear_has_digest();
}
inline const ::std::string& DataInfo::digest() const {
  return *digest_;
}
inline void DataInfo::set_digest(const ::std::string& value) {
  set_has_digest();
  if (digest_ == &::google::protobuf::internal::kEmptyString) {
    digest_ = new ::std::string;
  }
  digest_->assign(value);
}
inline void DataInfo::set_digest(const char* value) {
  set_has_digest();
  if (digest_ == &::google::protobuf::internal::kEmptyString) {
    digest_ = new ::std::string;
  }
  digest_->assign(value);
}
inline void DataInfo::set_digest(const void* value, size_t size) {
  set_has_digest();
  if (digest_ == &::google::protobuf::internal::kEmptyString) {
    digest_ = new ::std::string;
  }
  digest_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DataInfo::mutable_digest() {
  set_has_digest();
  if (digest_ == &::google::protobuf::internal::kEmptyString) {
    digest_ = new ::std::string;
  }
  return digest_;
}
inline ::std::string* DataInfo::release_digest() {
  clear_has_digest();
  if (digest_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = digest_;
    digest_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DataInfo::set_allocated_digest(::std::string* digest) {
  if (digest_ != &::google::protobuf::internal::kEmptyString) {
    delete digest_;
  }
  if (digest) {
    set_has_digest();
    digest_ = digest;
  } else {
    clear_has_digest();
    digest_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string preferred_file_name = 3;
inline bool DataInfo::has_preferred_file_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DataInfo::set_has_preferred_file_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DataInfo::clear_has_preferred_file_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DataInfo::clear_preferred_file_name() {
  if (preferred_file_name_ != &::google::protobuf::internal::kEmptyString) {
    preferred_file_name_->clear();
  }
  clear_has_preferred_file_name();
}
inline const ::std::string& DataInfo::preferred_file_name() const {
  return *preferred_file_name_;
}
inline void DataInfo::set_preferred_file_name(const ::std::string& value) {
  set_has_preferred_file_name();
  if (preferred_file_name_ == &::google::protobuf::internal::kEmptyString) {
    preferred_file_name_ = new ::std::string;
  }
  preferred_file_name_->assign(value);
}
inline void DataInfo::set_preferred_file_name(const char* value) {
  set_has_preferred_file_name();
  if (preferred_file_name_ == &::google::protobuf::internal::kEmptyString) {
    preferred_file_name_ = new ::std::string;
  }
  preferred_file_name_->assign(value);
}
inline void DataInfo::set_preferred_file_name(const char* value, size_t size) {
  set_has_preferred_file_name();
  if (preferred_file_name_ == &::google::protobuf::internal::kEmptyString) {
    preferred_file_name_ = new ::std::string;
  }
  preferred_file_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DataInfo::mutable_preferred_file_name() {
  set_has_preferred_file_name();
  if (preferred_file_name_ == &::google::protobuf::internal::kEmptyString) {
    preferred_file_name_ = new ::std::string;
  }
  return preferred_file_name_;
}
inline ::std::string* DataInfo::release_preferred_file_name() {
  clear_has_preferred_file_name();
  if (preferred_file_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = preferred_file_name_;
    preferred_file_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DataInfo::set_allocated_preferred_file_name(::std::string* preferred_file_name) {
  if (preferred_file_name_ != &::google::protobuf::internal::kEmptyString) {
    delete preferred_file_name_;
  }
  if (preferred_file_name) {
    set_has_preferred_file_name();
    preferred_file_name_ = preferred_file_name;
  } else {
    clear_has_preferred_file_name();
    preferred_file_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string file_name = 4;
inline bool DataInfo::has_file_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DataInfo::set_has_file_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DataInfo::clear_has_file_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DataInfo::clear_file_name() {
  if (file_name_ != &::google::protobuf::internal::kEmptyString) {
    file_name_->clear();
  }
  clear_has_file_name();
}
inline const ::std::string& DataInfo::file_name() const {
  return *file_name_;
}
inline void DataInfo::set_file_name(const ::std::string& value) {
  set_has_file_name();
  if (file_name_ == &::google::protobuf::internal::kEmptyString) {
    file_name_ = new ::std::string;
  }
  file_name_->assign(value);
}
inline void DataInfo::set_file_name(const char* value) {
  set_has_file_name();
  if (file_name_ == &::google::protobuf::internal::kEmptyString) {
    file_name_ = new ::std::string;
  }
  file_name_->assign(value);
}
inline void DataInfo::set_file_name(const char* value, size_t size) {
  set_has_file_name();
  if (file_name_ == &::google::protobuf::internal::kEmptyString) {
    file_name_ = new ::std::string;
  }
  file_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DataInfo::mutable_file_name() {
  set_has_file_name();
  if (file_name_ == &::google::protobuf::internal::kEmptyString) {
    file_name_ = new ::std::string;
  }
  return file_name_;
}
inline ::std::string* DataInfo::release_file_name() {
  clear_has_file_name();
  if (file_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = file_name_;
    file_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DataInfo::set_allocated_file_name(::std::string* file_name) {
  if (file_name_ != &::google::protobuf::internal::kEmptyString) {
    delete file_name_;
  }
  if (file_name) {
    set_has_file_name();
    file_name_ = file_name;
  } else {
    clear_has_file_name();
    file_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string document_resource_locator = 5;
inline bool DataInfo::has_document_resource_locator() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DataInfo::set_has_document_resource_locator() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DataInfo::clear_has_document_resource_locator() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DataInfo::clear_document_resource_locator() {
  if (document_resource_locator_ != &::google::protobuf::internal::kEmptyString) {
    document_resource_locator_->clear();
  }
  clear_has_document_resource_locator();
}
inline const ::std::string& DataInfo::document_resource_locator() const {
  return *document_resource_locator_;
}
inline void DataInfo::set_document_resource_locator(const ::std::string& value) {
  set_has_document_resource_locator();
  if (document_resource_locator_ == &::google::protobuf::internal::kEmptyString) {
    document_resource_locator_ = new ::std::string;
  }
  document_resource_locator_->assign(value);
}
inline void DataInfo::set_document_resource_locator(const char* value) {
  set_has_document_resource_locator();
  if (document_resource_locator_ == &::google::protobuf::internal::kEmptyString) {
    document_resource_locator_ = new ::std::string;
  }
  document_resource_locator_->assign(value);
}
inline void DataInfo::set_document_resource_locator(const char* value, size_t size) {
  set_has_document_resource_locator();
  if (document_resource_locator_ == &::google::protobuf::internal::kEmptyString) {
    document_resource_locator_ = new ::std::string;
  }
  document_resource_locator_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DataInfo::mutable_document_resource_locator() {
  set_has_document_resource_locator();
  if (document_resource_locator_ == &::google::protobuf::internal::kEmptyString) {
    document_resource_locator_ = new ::std::string;
  }
  return document_resource_locator_;
}
inline ::std::string* DataInfo::release_document_resource_locator() {
  clear_has_document_resource_locator();
  if (document_resource_locator_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = document_resource_locator_;
    document_resource_locator_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DataInfo::set_allocated_document_resource_locator(::std::string* document_resource_locator) {
  if (document_resource_locator_ != &::google::protobuf::internal::kEmptyString) {
    delete document_resource_locator_;
  }
  if (document_resource_locator) {
    set_has_document_resource_locator();
    document_resource_locator_ = document_resource_locator;
  } else {
    clear_has_document_resource_locator();
    document_resource_locator_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes source_bookmark_data = 6;
inline bool DataInfo::has_source_bookmark_data() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DataInfo::set_has_source_bookmark_data() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DataInfo::clear_has_source_bookmark_data() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DataInfo::clear_source_bookmark_data() {
  if (source_bookmark_data_ != &::google::protobuf::internal::kEmptyString) {
    source_bookmark_data_->clear();
  }
  clear_has_source_bookmark_data();
}
inline const ::std::string& DataInfo::source_bookmark_data() const {
  return *source_bookmark_data_;
}
inline void DataInfo::set_source_bookmark_data(const ::std::string& value) {
  set_has_source_bookmark_data();
  if (source_bookmark_data_ == &::google::protobuf::internal::kEmptyString) {
    source_bookmark_data_ = new ::std::string;
  }
  source_bookmark_data_->assign(value);
}
inline void DataInfo::set_source_bookmark_data(const char* value) {
  set_has_source_bookmark_data();
  if (source_bookmark_data_ == &::google::protobuf::internal::kEmptyString) {
    source_bookmark_data_ = new ::std::string;
  }
  source_bookmark_data_->assign(value);
}
inline void DataInfo::set_source_bookmark_data(const void* value, size_t size) {
  set_has_source_bookmark_data();
  if (source_bookmark_data_ == &::google::protobuf::internal::kEmptyString) {
    source_bookmark_data_ = new ::std::string;
  }
  source_bookmark_data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DataInfo::mutable_source_bookmark_data() {
  set_has_source_bookmark_data();
  if (source_bookmark_data_ == &::google::protobuf::internal::kEmptyString) {
    source_bookmark_data_ = new ::std::string;
  }
  return source_bookmark_data_;
}
inline ::std::string* DataInfo::release_source_bookmark_data() {
  clear_has_source_bookmark_data();
  if (source_bookmark_data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = source_bookmark_data_;
    source_bookmark_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DataInfo::set_allocated_source_bookmark_data(::std::string* source_bookmark_data) {
  if (source_bookmark_data_ != &::google::protobuf::internal::kEmptyString) {
    delete source_bookmark_data_;
  }
  if (source_bookmark_data) {
    set_has_source_bookmark_data();
    source_bookmark_data_ = source_bookmark_data;
  } else {
    clear_has_source_bookmark_data();
    source_bookmark_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string pasteboard_external_file_path = 99;
inline bool DataInfo::has_pasteboard_external_file_path() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DataInfo::set_has_pasteboard_external_file_path() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DataInfo::clear_has_pasteboard_external_file_path() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DataInfo::clear_pasteboard_external_file_path() {
  if (pasteboard_external_file_path_ != &::google::protobuf::internal::kEmptyString) {
    pasteboard_external_file_path_->clear();
  }
  clear_has_pasteboard_external_file_path();
}
inline const ::std::string& DataInfo::pasteboard_external_file_path() const {
  return *pasteboard_external_file_path_;
}
inline void DataInfo::set_pasteboard_external_file_path(const ::std::string& value) {
  set_has_pasteboard_external_file_path();
  if (pasteboard_external_file_path_ == &::google::protobuf::internal::kEmptyString) {
    pasteboard_external_file_path_ = new ::std::string;
  }
  pasteboard_external_file_path_->assign(value);
}
inline void DataInfo::set_pasteboard_external_file_path(const char* value) {
  set_has_pasteboard_external_file_path();
  if (pasteboard_external_file_path_ == &::google::protobuf::internal::kEmptyString) {
    pasteboard_external_file_path_ = new ::std::string;
  }
  pasteboard_external_file_path_->assign(value);
}
inline void DataInfo::set_pasteboard_external_file_path(const char* value, size_t size) {
  set_has_pasteboard_external_file_path();
  if (pasteboard_external_file_path_ == &::google::protobuf::internal::kEmptyString) {
    pasteboard_external_file_path_ = new ::std::string;
  }
  pasteboard_external_file_path_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DataInfo::mutable_pasteboard_external_file_path() {
  set_has_pasteboard_external_file_path();
  if (pasteboard_external_file_path_ == &::google::protobuf::internal::kEmptyString) {
    pasteboard_external_file_path_ = new ::std::string;
  }
  return pasteboard_external_file_path_;
}
inline ::std::string* DataInfo::release_pasteboard_external_file_path() {
  clear_has_pasteboard_external_file_path();
  if (pasteboard_external_file_path_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = pasteboard_external_file_path_;
    pasteboard_external_file_path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DataInfo::set_allocated_pasteboard_external_file_path(::std::string* pasteboard_external_file_path) {
  if (pasteboard_external_file_path_ != &::google::protobuf::internal::kEmptyString) {
    delete pasteboard_external_file_path_;
  }
  if (pasteboard_external_file_path) {
    set_has_pasteboard_external_file_path();
    pasteboard_external_file_path_ = pasteboard_external_file_path;
  } else {
    clear_has_pasteboard_external_file_path();
    pasteboard_external_file_path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ViewStateMetadata

// repeated uint32 version = 1 [packed = true];
inline int ViewStateMetadata::version_size() const {
  return version_.size();
}
inline void ViewStateMetadata::clear_version() {
  version_.Clear();
}
inline ::google::protobuf::uint32 ViewStateMetadata::version(int index) const {
  return version_.Get(index);
}
inline void ViewStateMetadata::set_version(int index, ::google::protobuf::uint32 value) {
  version_.Set(index, value);
}
inline void ViewStateMetadata::add_version(::google::protobuf::uint32 value) {
  version_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ViewStateMetadata::version() const {
  return version_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ViewStateMetadata::mutable_version() {
  return &version_;
}

// required string document_version_uuid = 2;
inline bool ViewStateMetadata::has_document_version_uuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ViewStateMetadata::set_has_document_version_uuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ViewStateMetadata::clear_has_document_version_uuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ViewStateMetadata::clear_document_version_uuid() {
  if (document_version_uuid_ != &::google::protobuf::internal::kEmptyString) {
    document_version_uuid_->clear();
  }
  clear_has_document_version_uuid();
}
inline const ::std::string& ViewStateMetadata::document_version_uuid() const {
  return *document_version_uuid_;
}
inline void ViewStateMetadata::set_document_version_uuid(const ::std::string& value) {
  set_has_document_version_uuid();
  if (document_version_uuid_ == &::google::protobuf::internal::kEmptyString) {
    document_version_uuid_ = new ::std::string;
  }
  document_version_uuid_->assign(value);
}
inline void ViewStateMetadata::set_document_version_uuid(const char* value) {
  set_has_document_version_uuid();
  if (document_version_uuid_ == &::google::protobuf::internal::kEmptyString) {
    document_version_uuid_ = new ::std::string;
  }
  document_version_uuid_->assign(value);
}
inline void ViewStateMetadata::set_document_version_uuid(const char* value, size_t size) {
  set_has_document_version_uuid();
  if (document_version_uuid_ == &::google::protobuf::internal::kEmptyString) {
    document_version_uuid_ = new ::std::string;
  }
  document_version_uuid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ViewStateMetadata::mutable_document_version_uuid() {
  set_has_document_version_uuid();
  if (document_version_uuid_ == &::google::protobuf::internal::kEmptyString) {
    document_version_uuid_ = new ::std::string;
  }
  return document_version_uuid_;
}
inline ::std::string* ViewStateMetadata::release_document_version_uuid() {
  clear_has_document_version_uuid();
  if (document_version_uuid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = document_version_uuid_;
    document_version_uuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ViewStateMetadata::set_allocated_document_version_uuid(::std::string* document_version_uuid) {
  if (document_version_uuid_ != &::google::protobuf::internal::kEmptyString) {
    delete document_version_uuid_;
  }
  if (document_version_uuid) {
    set_has_document_version_uuid();
    document_version_uuid_ = document_version_uuid;
  } else {
    clear_has_document_version_uuid();
    document_version_uuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required .TSP.ComponentInfo component = 3;
inline bool ViewStateMetadata::has_component() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ViewStateMetadata::set_has_component() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ViewStateMetadata::clear_has_component() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ViewStateMetadata::clear_component() {
  if (component_ != NULL) component_->::TSP::ComponentInfo::Clear();
  clear_has_component();
}
inline const ::TSP::ComponentInfo& ViewStateMetadata::component() const {
  return component_ != NULL ? *component_ : *default_instance_->component_;
}
inline ::TSP::ComponentInfo* ViewStateMetadata::mutable_component() {
  set_has_component();
  if (component_ == NULL) component_ = new ::TSP::ComponentInfo;
  return component_;
}
inline ::TSP::ComponentInfo* ViewStateMetadata::release_component() {
  clear_has_component();
  ::TSP::ComponentInfo* temp = component_;
  component_ = NULL;
  return temp;
}
inline void ViewStateMetadata::set_allocated_component(::TSP::ComponentInfo* component) {
  delete component_;
  component_ = component;
  if (component) {
    set_has_component();
  } else {
    clear_has_component();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace TSP

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TSP::FieldInfo_Type>() {
  return ::TSP::FieldInfo_Type_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TSP::FieldInfo_Rule>() {
  return ::TSP::FieldInfo_Rule_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_TSPArchiveMessages_2eproto__INCLUDED
