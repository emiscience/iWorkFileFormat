// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TSPArchiveMessages.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "TSPArchiveMessages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace TSP {

namespace {

const ::google::protobuf::Descriptor* ArchiveInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ArchiveInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessageInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* FieldInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FieldInfo_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* FieldInfo_Type_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* FieldInfo_Rule_descriptor_ = NULL;
const ::google::protobuf::Descriptor* FieldPath_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FieldPath_reflection_ = NULL;
const ::google::protobuf::Descriptor* ComponentInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ComponentInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* ComponentExternalReference_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ComponentExternalReference_reflection_ = NULL;
const ::google::protobuf::Descriptor* ComponentDataReference_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ComponentDataReference_reflection_ = NULL;
const ::google::protobuf::Descriptor* UUIDInternal_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UUIDInternal_reflection_ = NULL;
const ::google::protobuf::Descriptor* ObjectUUIDMapEntry_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ObjectUUIDMapEntry_reflection_ = NULL;
const ::google::protobuf::Descriptor* PackageMetadata_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PackageMetadata_reflection_ = NULL;
const ::google::protobuf::Descriptor* DocumentRevision_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DocumentRevision_reflection_ = NULL;
const ::google::protobuf::Descriptor* PasteboardMetadata_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PasteboardMetadata_reflection_ = NULL;
const ::google::protobuf::Descriptor* DataInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DataInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* ViewStateMetadata_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ViewStateMetadata_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_TSPArchiveMessages_2eproto() {
  protobuf_AddDesc_TSPArchiveMessages_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "TSPArchiveMessages.proto");
  GOOGLE_CHECK(file != NULL);
  ArchiveInfo_descriptor_ = file->message_type(0);
  static const int ArchiveInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArchiveInfo, identifier_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArchiveInfo, message_infos_),
  };
  ArchiveInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ArchiveInfo_descriptor_,
      ArchiveInfo::default_instance_,
      ArchiveInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArchiveInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArchiveInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ArchiveInfo));
  MessageInfo_descriptor_ = file->message_type(1);
  static const int MessageInfo_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageInfo, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageInfo, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageInfo, length_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageInfo, field_infos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageInfo, object_references_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageInfo, data_references_),
  };
  MessageInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MessageInfo_descriptor_,
      MessageInfo::default_instance_,
      MessageInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MessageInfo));
  FieldInfo_descriptor_ = file->message_type(2);
  static const int FieldInfo_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FieldInfo, path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FieldInfo, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FieldInfo, rule_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FieldInfo, object_references_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FieldInfo, data_references_),
  };
  FieldInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FieldInfo_descriptor_,
      FieldInfo::default_instance_,
      FieldInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FieldInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FieldInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FieldInfo));
  FieldInfo_Type_descriptor_ = FieldInfo_descriptor_->enum_type(0);
  FieldInfo_Rule_descriptor_ = FieldInfo_descriptor_->enum_type(1);
  FieldPath_descriptor_ = file->message_type(3);
  static const int FieldPath_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FieldPath, path_),
  };
  FieldPath_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FieldPath_descriptor_,
      FieldPath::default_instance_,
      FieldPath_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FieldPath, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FieldPath, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FieldPath));
  ComponentInfo_descriptor_ = file->message_type(4);
  static const int ComponentInfo_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentInfo, identifier_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentInfo, preferred_locator_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentInfo, locator_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentInfo, read_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentInfo, write_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentInfo, external_references_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentInfo, data_references_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentInfo, object_uuid_map_entries_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentInfo, is_stored_outside_object_archive_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentInfo, save_token_),
  };
  ComponentInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ComponentInfo_descriptor_,
      ComponentInfo::default_instance_,
      ComponentInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ComponentInfo));
  ComponentExternalReference_descriptor_ = file->message_type(5);
  static const int ComponentExternalReference_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentExternalReference, component_identifier_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentExternalReference, object_identifier_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentExternalReference, is_weak_),
  };
  ComponentExternalReference_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ComponentExternalReference_descriptor_,
      ComponentExternalReference::default_instance_,
      ComponentExternalReference_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentExternalReference, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentExternalReference, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ComponentExternalReference));
  ComponentDataReference_descriptor_ = file->message_type(6);
  static const int ComponentDataReference_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentDataReference, data_identifier_),
  };
  ComponentDataReference_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ComponentDataReference_descriptor_,
      ComponentDataReference::default_instance_,
      ComponentDataReference_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentDataReference, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentDataReference, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ComponentDataReference));
  UUIDInternal_descriptor_ = file->message_type(7);
  static const int UUIDInternal_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UUIDInternal, lower_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UUIDInternal, upper_),
  };
  UUIDInternal_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UUIDInternal_descriptor_,
      UUIDInternal::default_instance_,
      UUIDInternal_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UUIDInternal, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UUIDInternal, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UUIDInternal));
  ObjectUUIDMapEntry_descriptor_ = file->message_type(8);
  static const int ObjectUUIDMapEntry_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectUUIDMapEntry, identifier_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectUUIDMapEntry, uuid_),
  };
  ObjectUUIDMapEntry_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ObjectUUIDMapEntry_descriptor_,
      ObjectUUIDMapEntry::default_instance_,
      ObjectUUIDMapEntry_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectUUIDMapEntry, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectUUIDMapEntry, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ObjectUUIDMapEntry));
  PackageMetadata_descriptor_ = file->message_type(9);
  static const int PackageMetadata_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackageMetadata, last_object_identifier_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackageMetadata, revision_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackageMetadata, components_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackageMetadata, datas_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackageMetadata, read_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackageMetadata, write_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackageMetadata, file_format_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackageMetadata, save_token_),
  };
  PackageMetadata_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PackageMetadata_descriptor_,
      PackageMetadata::default_instance_,
      PackageMetadata_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackageMetadata, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackageMetadata, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PackageMetadata));
  DocumentRevision_descriptor_ = file->message_type(10);
  static const int DocumentRevision_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DocumentRevision, sequence_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DocumentRevision, identifier_),
  };
  DocumentRevision_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DocumentRevision_descriptor_,
      DocumentRevision::default_instance_,
      DocumentRevision_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DocumentRevision, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DocumentRevision, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DocumentRevision));
  PasteboardMetadata_descriptor_ = file->message_type(11);
  static const int PasteboardMetadata_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PasteboardMetadata, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PasteboardMetadata, app_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PasteboardMetadata, datas_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PasteboardMetadata, source_document_uuid_),
  };
  PasteboardMetadata_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PasteboardMetadata_descriptor_,
      PasteboardMetadata::default_instance_,
      PasteboardMetadata_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PasteboardMetadata, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PasteboardMetadata, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PasteboardMetadata));
  DataInfo_descriptor_ = file->message_type(12);
  static const int DataInfo_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataInfo, identifier_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataInfo, digest_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataInfo, preferred_file_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataInfo, file_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataInfo, document_resource_locator_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataInfo, source_bookmark_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataInfo, pasteboard_external_file_path_),
  };
  DataInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DataInfo_descriptor_,
      DataInfo::default_instance_,
      DataInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DataInfo));
  ViewStateMetadata_descriptor_ = file->message_type(13);
  static const int ViewStateMetadata_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewStateMetadata, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewStateMetadata, document_version_uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewStateMetadata, component_),
  };
  ViewStateMetadata_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ViewStateMetadata_descriptor_,
      ViewStateMetadata::default_instance_,
      ViewStateMetadata_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewStateMetadata, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewStateMetadata, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ViewStateMetadata));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_TSPArchiveMessages_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ArchiveInfo_descriptor_, &ArchiveInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MessageInfo_descriptor_, &MessageInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FieldInfo_descriptor_, &FieldInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FieldPath_descriptor_, &FieldPath::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ComponentInfo_descriptor_, &ComponentInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ComponentExternalReference_descriptor_, &ComponentExternalReference::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ComponentDataReference_descriptor_, &ComponentDataReference::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UUIDInternal_descriptor_, &UUIDInternal::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ObjectUUIDMapEntry_descriptor_, &ObjectUUIDMapEntry::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PackageMetadata_descriptor_, &PackageMetadata::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DocumentRevision_descriptor_, &DocumentRevision::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PasteboardMetadata_descriptor_, &PasteboardMetadata::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DataInfo_descriptor_, &DataInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ViewStateMetadata_descriptor_, &ViewStateMetadata::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_TSPArchiveMessages_2eproto() {
  delete ArchiveInfo::default_instance_;
  delete ArchiveInfo_reflection_;
  delete MessageInfo::default_instance_;
  delete MessageInfo_reflection_;
  delete FieldInfo::default_instance_;
  delete FieldInfo_reflection_;
  delete FieldPath::default_instance_;
  delete FieldPath_reflection_;
  delete ComponentInfo::default_instance_;
  delete ComponentInfo_reflection_;
  delete ComponentExternalReference::default_instance_;
  delete ComponentExternalReference_reflection_;
  delete ComponentDataReference::default_instance_;
  delete ComponentDataReference_reflection_;
  delete UUIDInternal::default_instance_;
  delete UUIDInternal_reflection_;
  delete ObjectUUIDMapEntry::default_instance_;
  delete ObjectUUIDMapEntry_reflection_;
  delete PackageMetadata::default_instance_;
  delete PackageMetadata_reflection_;
  delete DocumentRevision::default_instance_;
  delete DocumentRevision_reflection_;
  delete PasteboardMetadata::default_instance_;
  delete PasteboardMetadata_reflection_;
  delete DataInfo::default_instance_;
  delete DataInfo_reflection_;
  delete ViewStateMetadata::default_instance_;
  delete ViewStateMetadata_reflection_;
}

void protobuf_AddDesc_TSPArchiveMessages_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\030TSPArchiveMessages.proto\022\003TSP\"J\n\013Archi"
    "veInfo\022\022\n\nidentifier\030\001 \001(\004\022\'\n\rmessage_in"
    "fos\030\002 \003(\0132\020.TSP.MessageInfo\"\241\001\n\013MessageI"
    "nfo\022\014\n\004type\030\001 \002(\r\022\023\n\007version\030\002 \003(\rB\002\020\001\022\016"
    "\n\006length\030\003 \002(\r\022#\n\013field_infos\030\004 \003(\0132\016.TS"
    "P.FieldInfo\022\035\n\021object_references\030\005 \003(\004B\002"
    "\020\001\022\033\n\017data_references\030\006 \003(\004B\002\020\001\"\352\002\n\tFiel"
    "dInfo\022\034\n\004path\030\001 \002(\0132\016.TSP.FieldPath\022(\n\004t"
    "ype\030\002 \001(\0162\023.TSP.FieldInfo.Type:\005Value\0220\n"
    "\004rule\030\003 \001(\0162\023.TSP.FieldInfo.Rule:\rIgnore"
    "AndDrop\022\035\n\021object_references\030\004 \003(\004B\002\020\001\022\033"
    "\n\017data_references\030\005 \003(\004B\002\020\001\"F\n\004Type\022\t\n\005V"
    "alue\020\000\022\023\n\017ObjectReference\020\001\022\021\n\rDataRefer"
    "ence\020\002\022\013\n\007Message\020\003\"_\n\004Rule\022\021\n\rIgnoreAnd"
    "Drop\020\000\022\025\n\021IgnoreAndPreserve\020\001\022\022\n\016MustUnd"
    "erstand\020\002\022\031\n\014NotSupported\020\377\377\377\377\377\377\377\377\377\001\"\035\n\t"
    "FieldPath\022\020\n\004path\030\001 \003(\rB\002\020\001\"\372\002\n\rComponen"
    "tInfo\022\022\n\nidentifier\030\001 \002(\004\022\031\n\021preferred_l"
    "ocator\030\002 \002(\t\022\017\n\007locator\030\003 \001(\t\022\030\n\014read_ve"
    "rsion\030\004 \003(\rB\002\020\001\022\031\n\rwrite_version\030\005 \003(\rB\002"
    "\020\001\022<\n\023external_references\030\006 \003(\0132\037.TSP.Co"
    "mponentExternalReference\0224\n\017data_referen"
    "ces\030\007 \003(\0132\033.TSP.ComponentDataReference\0228"
    "\n\027object_uuid_map_entries\030\013 \003(\0132\027.TSP.Ob"
    "jectUUIDMapEntry\022/\n is_stored_outside_ob"
    "ject_archive\030\n \001(\010:\005false\022\025\n\nsave_token\030"
    "\014 \001(\004:\0010\"f\n\032ComponentExternalReference\022\034"
    "\n\024component_identifier\030\001 \002(\004\022\031\n\021object_i"
    "dentifier\030\002 \001(\004\022\017\n\007is_weak\030\003 \001(\010\"1\n\026Comp"
    "onentDataReference\022\027\n\017data_identifier\030\001 "
    "\002(\004\",\n\014UUIDInternal\022\r\n\005lower\030\001 \002(\004\022\r\n\005up"
    "per\030\002 \002(\004\"I\n\022ObjectUUIDMapEntry\022\022\n\nident"
    "ifier\030\001 \002(\004\022\037\n\004uuid\030\002 \002(\0132\021.TSP.UUIDInte"
    "rnal\"\215\002\n\017PackageMetadata\022\036\n\026last_object_"
    "identifier\030\001 \002(\004\022\'\n\010revision\030\002 \001(\0132\025.TSP"
    ".DocumentRevision\022&\n\ncomponents\030\003 \003(\0132\022."
    "TSP.ComponentInfo\022\034\n\005datas\030\004 \003(\0132\r.TSP.D"
    "ataInfo\022\030\n\014read_version\030\005 \003(\rB\002\020\001\022\031\n\rwri"
    "te_version\030\006 \003(\rB\002\020\001\022\037\n\023file_format_vers"
    "ion\030\007 \003(\rB\002\020\001\022\025\n\nsave_token\030\010 \001(\004:\0010\";\n\020"
    "DocumentRevision\022\023\n\010sequence\030\001 \001(\004:\0010\022\022\n"
    "\nidentifier\030\002 \001(\t\"w\n\022PasteboardMetadata\022"
    "\023\n\007version\030\001 \003(\rB\002\020\001\022\020\n\010app_name\030\002 \002(\t\022\034"
    "\n\005datas\030\003 \003(\0132\r.TSP.DataInfo\022\034\n\024source_d"
    "ocument_uuid\030\004 \001(\t\"\306\001\n\010DataInfo\022\022\n\nident"
    "ifier\030\001 \002(\004\022\016\n\006digest\030\002 \002(\014\022\033\n\023preferred"
    "_file_name\030\003 \002(\t\022\021\n\tfile_name\030\004 \001(\t\022!\n\031d"
    "ocument_resource_locator\030\005 \001(\t\022\034\n\024source"
    "_bookmark_data\030\006 \001(\014\022%\n\035pasteboard_exter"
    "nal_file_path\030c \001(\t\"n\n\021ViewStateMetadata"
    "\022\023\n\007version\030\001 \003(\rB\002\020\001\022\035\n\025document_versio"
    "n_uuid\030\002 \002(\t\022%\n\tcomponent\030\003 \002(\0132\022.TSP.Co"
    "mponentInfo", 2091);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "TSPArchiveMessages.proto", &protobuf_RegisterTypes);
  ArchiveInfo::default_instance_ = new ArchiveInfo();
  MessageInfo::default_instance_ = new MessageInfo();
  FieldInfo::default_instance_ = new FieldInfo();
  FieldPath::default_instance_ = new FieldPath();
  ComponentInfo::default_instance_ = new ComponentInfo();
  ComponentExternalReference::default_instance_ = new ComponentExternalReference();
  ComponentDataReference::default_instance_ = new ComponentDataReference();
  UUIDInternal::default_instance_ = new UUIDInternal();
  ObjectUUIDMapEntry::default_instance_ = new ObjectUUIDMapEntry();
  PackageMetadata::default_instance_ = new PackageMetadata();
  DocumentRevision::default_instance_ = new DocumentRevision();
  PasteboardMetadata::default_instance_ = new PasteboardMetadata();
  DataInfo::default_instance_ = new DataInfo();
  ViewStateMetadata::default_instance_ = new ViewStateMetadata();
  ArchiveInfo::default_instance_->InitAsDefaultInstance();
  MessageInfo::default_instance_->InitAsDefaultInstance();
  FieldInfo::default_instance_->InitAsDefaultInstance();
  FieldPath::default_instance_->InitAsDefaultInstance();
  ComponentInfo::default_instance_->InitAsDefaultInstance();
  ComponentExternalReference::default_instance_->InitAsDefaultInstance();
  ComponentDataReference::default_instance_->InitAsDefaultInstance();
  UUIDInternal::default_instance_->InitAsDefaultInstance();
  ObjectUUIDMapEntry::default_instance_->InitAsDefaultInstance();
  PackageMetadata::default_instance_->InitAsDefaultInstance();
  DocumentRevision::default_instance_->InitAsDefaultInstance();
  PasteboardMetadata::default_instance_->InitAsDefaultInstance();
  DataInfo::default_instance_->InitAsDefaultInstance();
  ViewStateMetadata::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_TSPArchiveMessages_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_TSPArchiveMessages_2eproto {
  StaticDescriptorInitializer_TSPArchiveMessages_2eproto() {
    protobuf_AddDesc_TSPArchiveMessages_2eproto();
  }
} static_descriptor_initializer_TSPArchiveMessages_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int ArchiveInfo::kIdentifierFieldNumber;
const int ArchiveInfo::kMessageInfosFieldNumber;
#endif  // !_MSC_VER

ArchiveInfo::ArchiveInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ArchiveInfo::InitAsDefaultInstance() {
}

ArchiveInfo::ArchiveInfo(const ArchiveInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ArchiveInfo::SharedCtor() {
  _cached_size_ = 0;
  identifier_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ArchiveInfo::~ArchiveInfo() {
  SharedDtor();
}

void ArchiveInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ArchiveInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ArchiveInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ArchiveInfo_descriptor_;
}

const ArchiveInfo& ArchiveInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_TSPArchiveMessages_2eproto();
  return *default_instance_;
}

ArchiveInfo* ArchiveInfo::default_instance_ = NULL;

ArchiveInfo* ArchiveInfo::New() const {
  return new ArchiveInfo;
}

void ArchiveInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    identifier_ = GOOGLE_ULONGLONG(0);
  }
  message_infos_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ArchiveInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 identifier = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &identifier_)));
          set_has_identifier();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_message_infos;
        break;
      }

      // repeated .TSP.MessageInfo message_infos = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_message_infos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_message_infos()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_message_infos;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ArchiveInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint64 identifier = 1;
  if (has_identifier()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->identifier(), output);
  }

  // repeated .TSP.MessageInfo message_infos = 2;
  for (int i = 0; i < this->message_infos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->message_infos(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ArchiveInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint64 identifier = 1;
  if (has_identifier()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->identifier(), target);
  }

  // repeated .TSP.MessageInfo message_infos = 2;
  for (int i = 0; i < this->message_infos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->message_infos(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ArchiveInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 identifier = 1;
    if (has_identifier()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->identifier());
    }

  }
  // repeated .TSP.MessageInfo message_infos = 2;
  total_size += 1 * this->message_infos_size();
  for (int i = 0; i < this->message_infos_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->message_infos(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ArchiveInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ArchiveInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ArchiveInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ArchiveInfo::MergeFrom(const ArchiveInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  message_infos_.MergeFrom(from.message_infos_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_identifier()) {
      set_identifier(from.identifier());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ArchiveInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArchiveInfo::CopyFrom(const ArchiveInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArchiveInfo::IsInitialized() const {

  for (int i = 0; i < message_infos_size(); i++) {
    if (!this->message_infos(i).IsInitialized()) return false;
  }
  return true;
}

void ArchiveInfo::Swap(ArchiveInfo* other) {
  if (other != this) {
    std::swap(identifier_, other->identifier_);
    message_infos_.Swap(&other->message_infos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ArchiveInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ArchiveInfo_descriptor_;
  metadata.reflection = ArchiveInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MessageInfo::kTypeFieldNumber;
const int MessageInfo::kVersionFieldNumber;
const int MessageInfo::kLengthFieldNumber;
const int MessageInfo::kFieldInfosFieldNumber;
const int MessageInfo::kObjectReferencesFieldNumber;
const int MessageInfo::kDataReferencesFieldNumber;
#endif  // !_MSC_VER

MessageInfo::MessageInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MessageInfo::InitAsDefaultInstance() {
}

MessageInfo::MessageInfo(const MessageInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MessageInfo::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0u;
  length_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MessageInfo::~MessageInfo() {
  SharedDtor();
}

void MessageInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MessageInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageInfo_descriptor_;
}

const MessageInfo& MessageInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_TSPArchiveMessages_2eproto();
  return *default_instance_;
}

MessageInfo* MessageInfo::default_instance_ = NULL;

MessageInfo* MessageInfo::New() const {
  return new MessageInfo;
}

void MessageInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0u;
    length_ = 0u;
  }
  version_.Clear();
  field_infos_.Clear();
  object_references_.Clear();
  data_references_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MessageInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_version;
        break;
      }

      // repeated uint32 version = 2 [packed = true];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_version())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18, input, this->mutable_version())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_length;
        break;
      }

      // required uint32 length = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_length:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &length_)));
          set_has_length();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_field_infos;
        break;
      }

      // repeated .TSP.FieldInfo field_infos = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_field_infos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_field_infos()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_field_infos;
        if (input->ExpectTag(42)) goto parse_object_references;
        break;
      }

      // repeated uint64 object_references = 5 [packed = true];
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_object_references:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_object_references())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 42, input, this->mutable_object_references())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_data_references;
        break;
      }

      // repeated uint64 data_references = 6 [packed = true];
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data_references:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_data_references())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 50, input, this->mutable_data_references())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MessageInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // repeated uint32 version = 2 [packed = true];
  if (this->version_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_version_cached_byte_size_);
  }
  for (int i = 0; i < this->version_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->version(i), output);
  }

  // required uint32 length = 3;
  if (has_length()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->length(), output);
  }

  // repeated .TSP.FieldInfo field_infos = 4;
  for (int i = 0; i < this->field_infos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->field_infos(i), output);
  }

  // repeated uint64 object_references = 5 [packed = true];
  if (this->object_references_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_object_references_cached_byte_size_);
  }
  for (int i = 0; i < this->object_references_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->object_references(i), output);
  }

  // repeated uint64 data_references = 6 [packed = true];
  if (this->data_references_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_data_references_cached_byte_size_);
  }
  for (int i = 0; i < this->data_references_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->data_references(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MessageInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // repeated uint32 version = 2 [packed = true];
  if (this->version_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _version_cached_byte_size_, target);
  }
  for (int i = 0; i < this->version_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->version(i), target);
  }

  // required uint32 length = 3;
  if (has_length()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->length(), target);
  }

  // repeated .TSP.FieldInfo field_infos = 4;
  for (int i = 0; i < this->field_infos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->field_infos(i), target);
  }

  // repeated uint64 object_references = 5 [packed = true];
  if (this->object_references_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _object_references_cached_byte_size_, target);
  }
  for (int i = 0; i < this->object_references_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->object_references(i), target);
  }

  // repeated uint64 data_references = 6 [packed = true];
  if (this->data_references_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _data_references_cached_byte_size_, target);
  }
  for (int i = 0; i < this->data_references_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->data_references(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MessageInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

    // required uint32 length = 3;
    if (has_length()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->length());
    }

  }
  // repeated uint32 version = 2 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->version_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->version(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _version_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .TSP.FieldInfo field_infos = 4;
  total_size += 1 * this->field_infos_size();
  for (int i = 0; i < this->field_infos_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->field_infos(i));
  }

  // repeated uint64 object_references = 5 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->object_references_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->object_references(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _object_references_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 data_references = 6 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->data_references_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->data_references(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _data_references_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MessageInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MessageInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MessageInfo::MergeFrom(const MessageInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  version_.MergeFrom(from.version_);
  field_infos_.MergeFrom(from.field_infos_);
  object_references_.MergeFrom(from.object_references_);
  data_references_.MergeFrom(from.data_references_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_length()) {
      set_length(from.length());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MessageInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageInfo::CopyFrom(const MessageInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;

  for (int i = 0; i < field_infos_size(); i++) {
    if (!this->field_infos(i).IsInitialized()) return false;
  }
  return true;
}

void MessageInfo::Swap(MessageInfo* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    version_.Swap(&other->version_);
    std::swap(length_, other->length_);
    field_infos_.Swap(&other->field_infos_);
    object_references_.Swap(&other->object_references_);
    data_references_.Swap(&other->data_references_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MessageInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageInfo_descriptor_;
  metadata.reflection = MessageInfo_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* FieldInfo_Type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FieldInfo_Type_descriptor_;
}
bool FieldInfo_Type_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const FieldInfo_Type FieldInfo::Value;
const FieldInfo_Type FieldInfo::ObjectReference;
const FieldInfo_Type FieldInfo::DataReference;
const FieldInfo_Type FieldInfo::Message;
const FieldInfo_Type FieldInfo::Type_MIN;
const FieldInfo_Type FieldInfo::Type_MAX;
const int FieldInfo::Type_ARRAYSIZE;
#endif  // _MSC_VER
const ::google::protobuf::EnumDescriptor* FieldInfo_Rule_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FieldInfo_Rule_descriptor_;
}
bool FieldInfo_Rule_IsValid(int value) {
  switch(value) {
    case -1:
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const FieldInfo_Rule FieldInfo::IgnoreAndDrop;
const FieldInfo_Rule FieldInfo::IgnoreAndPreserve;
const FieldInfo_Rule FieldInfo::MustUnderstand;
const FieldInfo_Rule FieldInfo::NotSupported;
const FieldInfo_Rule FieldInfo::Rule_MIN;
const FieldInfo_Rule FieldInfo::Rule_MAX;
const int FieldInfo::Rule_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int FieldInfo::kPathFieldNumber;
const int FieldInfo::kTypeFieldNumber;
const int FieldInfo::kRuleFieldNumber;
const int FieldInfo::kObjectReferencesFieldNumber;
const int FieldInfo::kDataReferencesFieldNumber;
#endif  // !_MSC_VER

FieldInfo::FieldInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FieldInfo::InitAsDefaultInstance() {
  path_ = const_cast< ::TSP::FieldPath*>(&::TSP::FieldPath::default_instance());
}

FieldInfo::FieldInfo(const FieldInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FieldInfo::SharedCtor() {
  _cached_size_ = 0;
  path_ = NULL;
  type_ = 0;
  rule_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FieldInfo::~FieldInfo() {
  SharedDtor();
}

void FieldInfo::SharedDtor() {
  if (this != default_instance_) {
    delete path_;
  }
}

void FieldInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FieldInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FieldInfo_descriptor_;
}

const FieldInfo& FieldInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_TSPArchiveMessages_2eproto();
  return *default_instance_;
}

FieldInfo* FieldInfo::default_instance_ = NULL;

FieldInfo* FieldInfo::New() const {
  return new FieldInfo;
}

void FieldInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_path()) {
      if (path_ != NULL) path_->::TSP::FieldPath::Clear();
    }
    type_ = 0;
    rule_ = 0;
  }
  object_references_.Clear();
  data_references_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FieldInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .TSP.FieldPath path = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_path()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // optional .TSP.FieldInfo.Type type = 2 [default = Value];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::TSP::FieldInfo_Type_IsValid(value)) {
            set_type(static_cast< ::TSP::FieldInfo_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_rule;
        break;
      }

      // optional .TSP.FieldInfo.Rule rule = 3 [default = IgnoreAndDrop];
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rule:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::TSP::FieldInfo_Rule_IsValid(value)) {
            set_rule(static_cast< ::TSP::FieldInfo_Rule >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_object_references;
        break;
      }

      // repeated uint64 object_references = 4 [packed = true];
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_object_references:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_object_references())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 34, input, this->mutable_object_references())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_data_references;
        break;
      }

      // repeated uint64 data_references = 5 [packed = true];
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data_references:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_data_references())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 42, input, this->mutable_data_references())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FieldInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .TSP.FieldPath path = 1;
  if (has_path()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->path(), output);
  }

  // optional .TSP.FieldInfo.Type type = 2 [default = Value];
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // optional .TSP.FieldInfo.Rule rule = 3 [default = IgnoreAndDrop];
  if (has_rule()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->rule(), output);
  }

  // repeated uint64 object_references = 4 [packed = true];
  if (this->object_references_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_object_references_cached_byte_size_);
  }
  for (int i = 0; i < this->object_references_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->object_references(i), output);
  }

  // repeated uint64 data_references = 5 [packed = true];
  if (this->data_references_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_data_references_cached_byte_size_);
  }
  for (int i = 0; i < this->data_references_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->data_references(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FieldInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .TSP.FieldPath path = 1;
  if (has_path()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->path(), target);
  }

  // optional .TSP.FieldInfo.Type type = 2 [default = Value];
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // optional .TSP.FieldInfo.Rule rule = 3 [default = IgnoreAndDrop];
  if (has_rule()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->rule(), target);
  }

  // repeated uint64 object_references = 4 [packed = true];
  if (this->object_references_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _object_references_cached_byte_size_, target);
  }
  for (int i = 0; i < this->object_references_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->object_references(i), target);
  }

  // repeated uint64 data_references = 5 [packed = true];
  if (this->data_references_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _data_references_cached_byte_size_, target);
  }
  for (int i = 0; i < this->data_references_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->data_references(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FieldInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .TSP.FieldPath path = 1;
    if (has_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->path());
    }

    // optional .TSP.FieldInfo.Type type = 2 [default = Value];
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional .TSP.FieldInfo.Rule rule = 3 [default = IgnoreAndDrop];
    if (has_rule()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->rule());
    }

  }
  // repeated uint64 object_references = 4 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->object_references_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->object_references(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _object_references_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 data_references = 5 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->data_references_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->data_references(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _data_references_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FieldInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FieldInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FieldInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FieldInfo::MergeFrom(const FieldInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  object_references_.MergeFrom(from.object_references_);
  data_references_.MergeFrom(from.data_references_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_path()) {
      mutable_path()->::TSP::FieldPath::MergeFrom(from.path());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_rule()) {
      set_rule(from.rule());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FieldInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FieldInfo::CopyFrom(const FieldInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FieldInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void FieldInfo::Swap(FieldInfo* other) {
  if (other != this) {
    std::swap(path_, other->path_);
    std::swap(type_, other->type_);
    std::swap(rule_, other->rule_);
    object_references_.Swap(&other->object_references_);
    data_references_.Swap(&other->data_references_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FieldInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FieldInfo_descriptor_;
  metadata.reflection = FieldInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FieldPath::kPathFieldNumber;
#endif  // !_MSC_VER

FieldPath::FieldPath()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FieldPath::InitAsDefaultInstance() {
}

FieldPath::FieldPath(const FieldPath& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FieldPath::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FieldPath::~FieldPath() {
  SharedDtor();
}

void FieldPath::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FieldPath::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FieldPath::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FieldPath_descriptor_;
}

const FieldPath& FieldPath::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_TSPArchiveMessages_2eproto();
  return *default_instance_;
}

FieldPath* FieldPath::default_instance_ = NULL;

FieldPath* FieldPath::New() const {
  return new FieldPath;
}

void FieldPath::Clear() {
  path_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FieldPath::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 path = 1 [packed = true];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_path())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10, input, this->mutable_path())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FieldPath::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated uint32 path = 1 [packed = true];
  if (this->path_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_path_cached_byte_size_);
  }
  for (int i = 0; i < this->path_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->path(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FieldPath::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated uint32 path = 1 [packed = true];
  if (this->path_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _path_cached_byte_size_, target);
  }
  for (int i = 0; i < this->path_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->path(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FieldPath::ByteSize() const {
  int total_size = 0;

  // repeated uint32 path = 1 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->path_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->path(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _path_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FieldPath::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FieldPath* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FieldPath*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FieldPath::MergeFrom(const FieldPath& from) {
  GOOGLE_CHECK_NE(&from, this);
  path_.MergeFrom(from.path_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FieldPath::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FieldPath::CopyFrom(const FieldPath& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FieldPath::IsInitialized() const {

  return true;
}

void FieldPath::Swap(FieldPath* other) {
  if (other != this) {
    path_.Swap(&other->path_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FieldPath::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FieldPath_descriptor_;
  metadata.reflection = FieldPath_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ComponentInfo::kIdentifierFieldNumber;
const int ComponentInfo::kPreferredLocatorFieldNumber;
const int ComponentInfo::kLocatorFieldNumber;
const int ComponentInfo::kReadVersionFieldNumber;
const int ComponentInfo::kWriteVersionFieldNumber;
const int ComponentInfo::kExternalReferencesFieldNumber;
const int ComponentInfo::kDataReferencesFieldNumber;
const int ComponentInfo::kObjectUuidMapEntriesFieldNumber;
const int ComponentInfo::kIsStoredOutsideObjectArchiveFieldNumber;
const int ComponentInfo::kSaveTokenFieldNumber;
#endif  // !_MSC_VER

ComponentInfo::ComponentInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ComponentInfo::InitAsDefaultInstance() {
}

ComponentInfo::ComponentInfo(const ComponentInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ComponentInfo::SharedCtor() {
  _cached_size_ = 0;
  identifier_ = GOOGLE_ULONGLONG(0);
  preferred_locator_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  locator_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  is_stored_outside_object_archive_ = false;
  save_token_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ComponentInfo::~ComponentInfo() {
  SharedDtor();
}

void ComponentInfo::SharedDtor() {
  if (preferred_locator_ != &::google::protobuf::internal::kEmptyString) {
    delete preferred_locator_;
  }
  if (locator_ != &::google::protobuf::internal::kEmptyString) {
    delete locator_;
  }
  if (this != default_instance_) {
  }
}

void ComponentInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ComponentInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ComponentInfo_descriptor_;
}

const ComponentInfo& ComponentInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_TSPArchiveMessages_2eproto();
  return *default_instance_;
}

ComponentInfo* ComponentInfo::default_instance_ = NULL;

ComponentInfo* ComponentInfo::New() const {
  return new ComponentInfo;
}

void ComponentInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    identifier_ = GOOGLE_ULONGLONG(0);
    if (has_preferred_locator()) {
      if (preferred_locator_ != &::google::protobuf::internal::kEmptyString) {
        preferred_locator_->clear();
      }
    }
    if (has_locator()) {
      if (locator_ != &::google::protobuf::internal::kEmptyString) {
        locator_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    is_stored_outside_object_archive_ = false;
    save_token_ = GOOGLE_ULONGLONG(0);
  }
  read_version_.Clear();
  write_version_.Clear();
  external_references_.Clear();
  data_references_.Clear();
  object_uuid_map_entries_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ComponentInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 identifier = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &identifier_)));
          set_has_identifier();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_preferred_locator;
        break;
      }

      // required string preferred_locator = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_preferred_locator:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_preferred_locator()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->preferred_locator().data(), this->preferred_locator().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_locator;
        break;
      }

      // optional string locator = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_locator:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_locator()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->locator().data(), this->locator().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_read_version;
        break;
      }

      // repeated uint32 read_version = 4 [packed = true];
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_read_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_read_version())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 34, input, this->mutable_read_version())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_write_version;
        break;
      }

      // repeated uint32 write_version = 5 [packed = true];
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_write_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_write_version())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 42, input, this->mutable_write_version())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_external_references;
        break;
      }

      // repeated .TSP.ComponentExternalReference external_references = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_external_references:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_external_references()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_external_references;
        if (input->ExpectTag(58)) goto parse_data_references;
        break;
      }

      // repeated .TSP.ComponentDataReference data_references = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data_references:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data_references()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_data_references;
        if (input->ExpectTag(80)) goto parse_is_stored_outside_object_archive;
        break;
      }

      // optional bool is_stored_outside_object_archive = 10 [default = false];
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_stored_outside_object_archive:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_stored_outside_object_archive_)));
          set_has_is_stored_outside_object_archive();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_object_uuid_map_entries;
        break;
      }

      // repeated .TSP.ObjectUUIDMapEntry object_uuid_map_entries = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_object_uuid_map_entries:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_object_uuid_map_entries()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_object_uuid_map_entries;
        if (input->ExpectTag(96)) goto parse_save_token;
        break;
      }

      // optional uint64 save_token = 12 [default = 0];
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_save_token:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &save_token_)));
          set_has_save_token();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ComponentInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint64 identifier = 1;
  if (has_identifier()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->identifier(), output);
  }

  // required string preferred_locator = 2;
  if (has_preferred_locator()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->preferred_locator().data(), this->preferred_locator().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->preferred_locator(), output);
  }

  // optional string locator = 3;
  if (has_locator()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->locator().data(), this->locator().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->locator(), output);
  }

  // repeated uint32 read_version = 4 [packed = true];
  if (this->read_version_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_read_version_cached_byte_size_);
  }
  for (int i = 0; i < this->read_version_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->read_version(i), output);
  }

  // repeated uint32 write_version = 5 [packed = true];
  if (this->write_version_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_write_version_cached_byte_size_);
  }
  for (int i = 0; i < this->write_version_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->write_version(i), output);
  }

  // repeated .TSP.ComponentExternalReference external_references = 6;
  for (int i = 0; i < this->external_references_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->external_references(i), output);
  }

  // repeated .TSP.ComponentDataReference data_references = 7;
  for (int i = 0; i < this->data_references_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->data_references(i), output);
  }

  // optional bool is_stored_outside_object_archive = 10 [default = false];
  if (has_is_stored_outside_object_archive()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->is_stored_outside_object_archive(), output);
  }

  // repeated .TSP.ObjectUUIDMapEntry object_uuid_map_entries = 11;
  for (int i = 0; i < this->object_uuid_map_entries_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->object_uuid_map_entries(i), output);
  }

  // optional uint64 save_token = 12 [default = 0];
  if (has_save_token()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(12, this->save_token(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ComponentInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint64 identifier = 1;
  if (has_identifier()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->identifier(), target);
  }

  // required string preferred_locator = 2;
  if (has_preferred_locator()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->preferred_locator().data(), this->preferred_locator().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->preferred_locator(), target);
  }

  // optional string locator = 3;
  if (has_locator()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->locator().data(), this->locator().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->locator(), target);
  }

  // repeated uint32 read_version = 4 [packed = true];
  if (this->read_version_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _read_version_cached_byte_size_, target);
  }
  for (int i = 0; i < this->read_version_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->read_version(i), target);
  }

  // repeated uint32 write_version = 5 [packed = true];
  if (this->write_version_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _write_version_cached_byte_size_, target);
  }
  for (int i = 0; i < this->write_version_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->write_version(i), target);
  }

  // repeated .TSP.ComponentExternalReference external_references = 6;
  for (int i = 0; i < this->external_references_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->external_references(i), target);
  }

  // repeated .TSP.ComponentDataReference data_references = 7;
  for (int i = 0; i < this->data_references_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->data_references(i), target);
  }

  // optional bool is_stored_outside_object_archive = 10 [default = false];
  if (has_is_stored_outside_object_archive()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->is_stored_outside_object_archive(), target);
  }

  // repeated .TSP.ObjectUUIDMapEntry object_uuid_map_entries = 11;
  for (int i = 0; i < this->object_uuid_map_entries_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->object_uuid_map_entries(i), target);
  }

  // optional uint64 save_token = 12 [default = 0];
  if (has_save_token()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(12, this->save_token(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ComponentInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint64 identifier = 1;
    if (has_identifier()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->identifier());
    }

    // required string preferred_locator = 2;
    if (has_preferred_locator()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->preferred_locator());
    }

    // optional string locator = 3;
    if (has_locator()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->locator());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional bool is_stored_outside_object_archive = 10 [default = false];
    if (has_is_stored_outside_object_archive()) {
      total_size += 1 + 1;
    }

    // optional uint64 save_token = 12 [default = 0];
    if (has_save_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->save_token());
    }

  }
  // repeated uint32 read_version = 4 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->read_version_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->read_version(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _read_version_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 write_version = 5 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->write_version_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->write_version(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _write_version_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .TSP.ComponentExternalReference external_references = 6;
  total_size += 1 * this->external_references_size();
  for (int i = 0; i < this->external_references_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->external_references(i));
  }

  // repeated .TSP.ComponentDataReference data_references = 7;
  total_size += 1 * this->data_references_size();
  for (int i = 0; i < this->data_references_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data_references(i));
  }

  // repeated .TSP.ObjectUUIDMapEntry object_uuid_map_entries = 11;
  total_size += 1 * this->object_uuid_map_entries_size();
  for (int i = 0; i < this->object_uuid_map_entries_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->object_uuid_map_entries(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ComponentInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ComponentInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ComponentInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ComponentInfo::MergeFrom(const ComponentInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  read_version_.MergeFrom(from.read_version_);
  write_version_.MergeFrom(from.write_version_);
  external_references_.MergeFrom(from.external_references_);
  data_references_.MergeFrom(from.data_references_);
  object_uuid_map_entries_.MergeFrom(from.object_uuid_map_entries_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_identifier()) {
      set_identifier(from.identifier());
    }
    if (from.has_preferred_locator()) {
      set_preferred_locator(from.preferred_locator());
    }
    if (from.has_locator()) {
      set_locator(from.locator());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_is_stored_outside_object_archive()) {
      set_is_stored_outside_object_archive(from.is_stored_outside_object_archive());
    }
    if (from.has_save_token()) {
      set_save_token(from.save_token());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ComponentInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComponentInfo::CopyFrom(const ComponentInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComponentInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  for (int i = 0; i < external_references_size(); i++) {
    if (!this->external_references(i).IsInitialized()) return false;
  }
  for (int i = 0; i < data_references_size(); i++) {
    if (!this->data_references(i).IsInitialized()) return false;
  }
  for (int i = 0; i < object_uuid_map_entries_size(); i++) {
    if (!this->object_uuid_map_entries(i).IsInitialized()) return false;
  }
  return true;
}

void ComponentInfo::Swap(ComponentInfo* other) {
  if (other != this) {
    std::swap(identifier_, other->identifier_);
    std::swap(preferred_locator_, other->preferred_locator_);
    std::swap(locator_, other->locator_);
    read_version_.Swap(&other->read_version_);
    write_version_.Swap(&other->write_version_);
    external_references_.Swap(&other->external_references_);
    data_references_.Swap(&other->data_references_);
    object_uuid_map_entries_.Swap(&other->object_uuid_map_entries_);
    std::swap(is_stored_outside_object_archive_, other->is_stored_outside_object_archive_);
    std::swap(save_token_, other->save_token_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ComponentInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ComponentInfo_descriptor_;
  metadata.reflection = ComponentInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ComponentExternalReference::kComponentIdentifierFieldNumber;
const int ComponentExternalReference::kObjectIdentifierFieldNumber;
const int ComponentExternalReference::kIsWeakFieldNumber;
#endif  // !_MSC_VER

ComponentExternalReference::ComponentExternalReference()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ComponentExternalReference::InitAsDefaultInstance() {
}

ComponentExternalReference::ComponentExternalReference(const ComponentExternalReference& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ComponentExternalReference::SharedCtor() {
  _cached_size_ = 0;
  component_identifier_ = GOOGLE_ULONGLONG(0);
  object_identifier_ = GOOGLE_ULONGLONG(0);
  is_weak_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ComponentExternalReference::~ComponentExternalReference() {
  SharedDtor();
}

void ComponentExternalReference::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ComponentExternalReference::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ComponentExternalReference::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ComponentExternalReference_descriptor_;
}

const ComponentExternalReference& ComponentExternalReference::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_TSPArchiveMessages_2eproto();
  return *default_instance_;
}

ComponentExternalReference* ComponentExternalReference::default_instance_ = NULL;

ComponentExternalReference* ComponentExternalReference::New() const {
  return new ComponentExternalReference;
}

void ComponentExternalReference::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    component_identifier_ = GOOGLE_ULONGLONG(0);
    object_identifier_ = GOOGLE_ULONGLONG(0);
    is_weak_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ComponentExternalReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 component_identifier = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &component_identifier_)));
          set_has_component_identifier();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_object_identifier;
        break;
      }

      // optional uint64 object_identifier = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_object_identifier:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &object_identifier_)));
          set_has_object_identifier();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_is_weak;
        break;
      }

      // optional bool is_weak = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_weak:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_weak_)));
          set_has_is_weak();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ComponentExternalReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint64 component_identifier = 1;
  if (has_component_identifier()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->component_identifier(), output);
  }

  // optional uint64 object_identifier = 2;
  if (has_object_identifier()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->object_identifier(), output);
  }

  // optional bool is_weak = 3;
  if (has_is_weak()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_weak(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ComponentExternalReference::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint64 component_identifier = 1;
  if (has_component_identifier()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->component_identifier(), target);
  }

  // optional uint64 object_identifier = 2;
  if (has_object_identifier()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->object_identifier(), target);
  }

  // optional bool is_weak = 3;
  if (has_is_weak()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_weak(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ComponentExternalReference::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint64 component_identifier = 1;
    if (has_component_identifier()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->component_identifier());
    }

    // optional uint64 object_identifier = 2;
    if (has_object_identifier()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->object_identifier());
    }

    // optional bool is_weak = 3;
    if (has_is_weak()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ComponentExternalReference::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ComponentExternalReference* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ComponentExternalReference*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ComponentExternalReference::MergeFrom(const ComponentExternalReference& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_component_identifier()) {
      set_component_identifier(from.component_identifier());
    }
    if (from.has_object_identifier()) {
      set_object_identifier(from.object_identifier());
    }
    if (from.has_is_weak()) {
      set_is_weak(from.is_weak());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ComponentExternalReference::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComponentExternalReference::CopyFrom(const ComponentExternalReference& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComponentExternalReference::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ComponentExternalReference::Swap(ComponentExternalReference* other) {
  if (other != this) {
    std::swap(component_identifier_, other->component_identifier_);
    std::swap(object_identifier_, other->object_identifier_);
    std::swap(is_weak_, other->is_weak_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ComponentExternalReference::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ComponentExternalReference_descriptor_;
  metadata.reflection = ComponentExternalReference_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ComponentDataReference::kDataIdentifierFieldNumber;
#endif  // !_MSC_VER

ComponentDataReference::ComponentDataReference()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ComponentDataReference::InitAsDefaultInstance() {
}

ComponentDataReference::ComponentDataReference(const ComponentDataReference& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ComponentDataReference::SharedCtor() {
  _cached_size_ = 0;
  data_identifier_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ComponentDataReference::~ComponentDataReference() {
  SharedDtor();
}

void ComponentDataReference::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ComponentDataReference::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ComponentDataReference::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ComponentDataReference_descriptor_;
}

const ComponentDataReference& ComponentDataReference::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_TSPArchiveMessages_2eproto();
  return *default_instance_;
}

ComponentDataReference* ComponentDataReference::default_instance_ = NULL;

ComponentDataReference* ComponentDataReference::New() const {
  return new ComponentDataReference;
}

void ComponentDataReference::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    data_identifier_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ComponentDataReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 data_identifier = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &data_identifier_)));
          set_has_data_identifier();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ComponentDataReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint64 data_identifier = 1;
  if (has_data_identifier()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->data_identifier(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ComponentDataReference::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint64 data_identifier = 1;
  if (has_data_identifier()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->data_identifier(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ComponentDataReference::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint64 data_identifier = 1;
    if (has_data_identifier()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->data_identifier());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ComponentDataReference::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ComponentDataReference* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ComponentDataReference*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ComponentDataReference::MergeFrom(const ComponentDataReference& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data_identifier()) {
      set_data_identifier(from.data_identifier());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ComponentDataReference::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComponentDataReference::CopyFrom(const ComponentDataReference& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComponentDataReference::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ComponentDataReference::Swap(ComponentDataReference* other) {
  if (other != this) {
    std::swap(data_identifier_, other->data_identifier_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ComponentDataReference::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ComponentDataReference_descriptor_;
  metadata.reflection = ComponentDataReference_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UUIDInternal::kLowerFieldNumber;
const int UUIDInternal::kUpperFieldNumber;
#endif  // !_MSC_VER

UUIDInternal::UUIDInternal()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void UUIDInternal::InitAsDefaultInstance() {
}

UUIDInternal::UUIDInternal(const UUIDInternal& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void UUIDInternal::SharedCtor() {
  _cached_size_ = 0;
  lower_ = GOOGLE_ULONGLONG(0);
  upper_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UUIDInternal::~UUIDInternal() {
  SharedDtor();
}

void UUIDInternal::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UUIDInternal::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UUIDInternal::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UUIDInternal_descriptor_;
}

const UUIDInternal& UUIDInternal::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_TSPArchiveMessages_2eproto();
  return *default_instance_;
}

UUIDInternal* UUIDInternal::default_instance_ = NULL;

UUIDInternal* UUIDInternal::New() const {
  return new UUIDInternal;
}

void UUIDInternal::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    lower_ = GOOGLE_ULONGLONG(0);
    upper_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UUIDInternal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 lower = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &lower_)));
          set_has_lower();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_upper;
        break;
      }

      // required uint64 upper = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_upper:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &upper_)));
          set_has_upper();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void UUIDInternal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint64 lower = 1;
  if (has_lower()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->lower(), output);
  }

  // required uint64 upper = 2;
  if (has_upper()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->upper(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* UUIDInternal::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint64 lower = 1;
  if (has_lower()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->lower(), target);
  }

  // required uint64 upper = 2;
  if (has_upper()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->upper(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int UUIDInternal::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint64 lower = 1;
    if (has_lower()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->lower());
    }

    // required uint64 upper = 2;
    if (has_upper()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->upper());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UUIDInternal::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UUIDInternal* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UUIDInternal*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UUIDInternal::MergeFrom(const UUIDInternal& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_lower()) {
      set_lower(from.lower());
    }
    if (from.has_upper()) {
      set_upper(from.upper());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UUIDInternal::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UUIDInternal::CopyFrom(const UUIDInternal& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UUIDInternal::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void UUIDInternal::Swap(UUIDInternal* other) {
  if (other != this) {
    std::swap(lower_, other->lower_);
    std::swap(upper_, other->upper_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UUIDInternal::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UUIDInternal_descriptor_;
  metadata.reflection = UUIDInternal_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ObjectUUIDMapEntry::kIdentifierFieldNumber;
const int ObjectUUIDMapEntry::kUuidFieldNumber;
#endif  // !_MSC_VER

ObjectUUIDMapEntry::ObjectUUIDMapEntry()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ObjectUUIDMapEntry::InitAsDefaultInstance() {
  uuid_ = const_cast< ::TSP::UUIDInternal*>(&::TSP::UUIDInternal::default_instance());
}

ObjectUUIDMapEntry::ObjectUUIDMapEntry(const ObjectUUIDMapEntry& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ObjectUUIDMapEntry::SharedCtor() {
  _cached_size_ = 0;
  identifier_ = GOOGLE_ULONGLONG(0);
  uuid_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ObjectUUIDMapEntry::~ObjectUUIDMapEntry() {
  SharedDtor();
}

void ObjectUUIDMapEntry::SharedDtor() {
  if (this != default_instance_) {
    delete uuid_;
  }
}

void ObjectUUIDMapEntry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectUUIDMapEntry::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ObjectUUIDMapEntry_descriptor_;
}

const ObjectUUIDMapEntry& ObjectUUIDMapEntry::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_TSPArchiveMessages_2eproto();
  return *default_instance_;
}

ObjectUUIDMapEntry* ObjectUUIDMapEntry::default_instance_ = NULL;

ObjectUUIDMapEntry* ObjectUUIDMapEntry::New() const {
  return new ObjectUUIDMapEntry;
}

void ObjectUUIDMapEntry::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    identifier_ = GOOGLE_ULONGLONG(0);
    if (has_uuid()) {
      if (uuid_ != NULL) uuid_->::TSP::UUIDInternal::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ObjectUUIDMapEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 identifier = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &identifier_)));
          set_has_identifier();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_uuid;
        break;
      }

      // required .TSP.UUIDInternal uuid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_uuid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_uuid()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ObjectUUIDMapEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint64 identifier = 1;
  if (has_identifier()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->identifier(), output);
  }

  // required .TSP.UUIDInternal uuid = 2;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->uuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ObjectUUIDMapEntry::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint64 identifier = 1;
  if (has_identifier()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->identifier(), target);
  }

  // required .TSP.UUIDInternal uuid = 2;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->uuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ObjectUUIDMapEntry::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint64 identifier = 1;
    if (has_identifier()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->identifier());
    }

    // required .TSP.UUIDInternal uuid = 2;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->uuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectUUIDMapEntry::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ObjectUUIDMapEntry* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ObjectUUIDMapEntry*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ObjectUUIDMapEntry::MergeFrom(const ObjectUUIDMapEntry& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_identifier()) {
      set_identifier(from.identifier());
    }
    if (from.has_uuid()) {
      mutable_uuid()->::TSP::UUIDInternal::MergeFrom(from.uuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ObjectUUIDMapEntry::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectUUIDMapEntry::CopyFrom(const ObjectUUIDMapEntry& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectUUIDMapEntry::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_uuid()) {
    if (!this->uuid().IsInitialized()) return false;
  }
  return true;
}

void ObjectUUIDMapEntry::Swap(ObjectUUIDMapEntry* other) {
  if (other != this) {
    std::swap(identifier_, other->identifier_);
    std::swap(uuid_, other->uuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ObjectUUIDMapEntry::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ObjectUUIDMapEntry_descriptor_;
  metadata.reflection = ObjectUUIDMapEntry_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PackageMetadata::kLastObjectIdentifierFieldNumber;
const int PackageMetadata::kRevisionFieldNumber;
const int PackageMetadata::kComponentsFieldNumber;
const int PackageMetadata::kDatasFieldNumber;
const int PackageMetadata::kReadVersionFieldNumber;
const int PackageMetadata::kWriteVersionFieldNumber;
const int PackageMetadata::kFileFormatVersionFieldNumber;
const int PackageMetadata::kSaveTokenFieldNumber;
#endif  // !_MSC_VER

PackageMetadata::PackageMetadata()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PackageMetadata::InitAsDefaultInstance() {
  revision_ = const_cast< ::TSP::DocumentRevision*>(&::TSP::DocumentRevision::default_instance());
}

PackageMetadata::PackageMetadata(const PackageMetadata& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PackageMetadata::SharedCtor() {
  _cached_size_ = 0;
  last_object_identifier_ = GOOGLE_ULONGLONG(0);
  revision_ = NULL;
  save_token_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PackageMetadata::~PackageMetadata() {
  SharedDtor();
}

void PackageMetadata::SharedDtor() {
  if (this != default_instance_) {
    delete revision_;
  }
}

void PackageMetadata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PackageMetadata::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PackageMetadata_descriptor_;
}

const PackageMetadata& PackageMetadata::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_TSPArchiveMessages_2eproto();
  return *default_instance_;
}

PackageMetadata* PackageMetadata::default_instance_ = NULL;

PackageMetadata* PackageMetadata::New() const {
  return new PackageMetadata;
}

void PackageMetadata::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    last_object_identifier_ = GOOGLE_ULONGLONG(0);
    if (has_revision()) {
      if (revision_ != NULL) revision_->::TSP::DocumentRevision::Clear();
    }
    save_token_ = GOOGLE_ULONGLONG(0);
  }
  components_.Clear();
  datas_.Clear();
  read_version_.Clear();
  write_version_.Clear();
  file_format_version_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PackageMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 last_object_identifier = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &last_object_identifier_)));
          set_has_last_object_identifier();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_revision;
        break;
      }

      // optional .TSP.DocumentRevision revision = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_revision:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_revision()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_components;
        break;
      }

      // repeated .TSP.ComponentInfo components = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_components:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_components()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_components;
        if (input->ExpectTag(34)) goto parse_datas;
        break;
      }

      // repeated .TSP.DataInfo datas = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_datas:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_datas()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_datas;
        if (input->ExpectTag(42)) goto parse_read_version;
        break;
      }

      // repeated uint32 read_version = 5 [packed = true];
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_read_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_read_version())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 42, input, this->mutable_read_version())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_write_version;
        break;
      }

      // repeated uint32 write_version = 6 [packed = true];
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_write_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_write_version())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 50, input, this->mutable_write_version())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_file_format_version;
        break;
      }

      // repeated uint32 file_format_version = 7 [packed = true];
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_file_format_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_file_format_version())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 58, input, this->mutable_file_format_version())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_save_token;
        break;
      }

      // optional uint64 save_token = 8 [default = 0];
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_save_token:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &save_token_)));
          set_has_save_token();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PackageMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint64 last_object_identifier = 1;
  if (has_last_object_identifier()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->last_object_identifier(), output);
  }

  // optional .TSP.DocumentRevision revision = 2;
  if (has_revision()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->revision(), output);
  }

  // repeated .TSP.ComponentInfo components = 3;
  for (int i = 0; i < this->components_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->components(i), output);
  }

  // repeated .TSP.DataInfo datas = 4;
  for (int i = 0; i < this->datas_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->datas(i), output);
  }

  // repeated uint32 read_version = 5 [packed = true];
  if (this->read_version_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_read_version_cached_byte_size_);
  }
  for (int i = 0; i < this->read_version_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->read_version(i), output);
  }

  // repeated uint32 write_version = 6 [packed = true];
  if (this->write_version_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_write_version_cached_byte_size_);
  }
  for (int i = 0; i < this->write_version_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->write_version(i), output);
  }

  // repeated uint32 file_format_version = 7 [packed = true];
  if (this->file_format_version_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_file_format_version_cached_byte_size_);
  }
  for (int i = 0; i < this->file_format_version_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->file_format_version(i), output);
  }

  // optional uint64 save_token = 8 [default = 0];
  if (has_save_token()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->save_token(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PackageMetadata::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint64 last_object_identifier = 1;
  if (has_last_object_identifier()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->last_object_identifier(), target);
  }

  // optional .TSP.DocumentRevision revision = 2;
  if (has_revision()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->revision(), target);
  }

  // repeated .TSP.ComponentInfo components = 3;
  for (int i = 0; i < this->components_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->components(i), target);
  }

  // repeated .TSP.DataInfo datas = 4;
  for (int i = 0; i < this->datas_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->datas(i), target);
  }

  // repeated uint32 read_version = 5 [packed = true];
  if (this->read_version_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _read_version_cached_byte_size_, target);
  }
  for (int i = 0; i < this->read_version_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->read_version(i), target);
  }

  // repeated uint32 write_version = 6 [packed = true];
  if (this->write_version_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _write_version_cached_byte_size_, target);
  }
  for (int i = 0; i < this->write_version_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->write_version(i), target);
  }

  // repeated uint32 file_format_version = 7 [packed = true];
  if (this->file_format_version_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _file_format_version_cached_byte_size_, target);
  }
  for (int i = 0; i < this->file_format_version_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->file_format_version(i), target);
  }

  // optional uint64 save_token = 8 [default = 0];
  if (has_save_token()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->save_token(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PackageMetadata::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint64 last_object_identifier = 1;
    if (has_last_object_identifier()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->last_object_identifier());
    }

    // optional .TSP.DocumentRevision revision = 2;
    if (has_revision()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->revision());
    }

    // optional uint64 save_token = 8 [default = 0];
    if (has_save_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->save_token());
    }

  }
  // repeated .TSP.ComponentInfo components = 3;
  total_size += 1 * this->components_size();
  for (int i = 0; i < this->components_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->components(i));
  }

  // repeated .TSP.DataInfo datas = 4;
  total_size += 1 * this->datas_size();
  for (int i = 0; i < this->datas_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->datas(i));
  }

  // repeated uint32 read_version = 5 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->read_version_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->read_version(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _read_version_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 write_version = 6 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->write_version_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->write_version(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _write_version_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 file_format_version = 7 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->file_format_version_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->file_format_version(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _file_format_version_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PackageMetadata::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PackageMetadata* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PackageMetadata*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PackageMetadata::MergeFrom(const PackageMetadata& from) {
  GOOGLE_CHECK_NE(&from, this);
  components_.MergeFrom(from.components_);
  datas_.MergeFrom(from.datas_);
  read_version_.MergeFrom(from.read_version_);
  write_version_.MergeFrom(from.write_version_);
  file_format_version_.MergeFrom(from.file_format_version_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_last_object_identifier()) {
      set_last_object_identifier(from.last_object_identifier());
    }
    if (from.has_revision()) {
      mutable_revision()->::TSP::DocumentRevision::MergeFrom(from.revision());
    }
    if (from.has_save_token()) {
      set_save_token(from.save_token());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PackageMetadata::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackageMetadata::CopyFrom(const PackageMetadata& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackageMetadata::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < components_size(); i++) {
    if (!this->components(i).IsInitialized()) return false;
  }
  for (int i = 0; i < datas_size(); i++) {
    if (!this->datas(i).IsInitialized()) return false;
  }
  return true;
}

void PackageMetadata::Swap(PackageMetadata* other) {
  if (other != this) {
    std::swap(last_object_identifier_, other->last_object_identifier_);
    std::swap(revision_, other->revision_);
    components_.Swap(&other->components_);
    datas_.Swap(&other->datas_);
    read_version_.Swap(&other->read_version_);
    write_version_.Swap(&other->write_version_);
    file_format_version_.Swap(&other->file_format_version_);
    std::swap(save_token_, other->save_token_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PackageMetadata::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PackageMetadata_descriptor_;
  metadata.reflection = PackageMetadata_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DocumentRevision::kSequenceFieldNumber;
const int DocumentRevision::kIdentifierFieldNumber;
#endif  // !_MSC_VER

DocumentRevision::DocumentRevision()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DocumentRevision::InitAsDefaultInstance() {
}

DocumentRevision::DocumentRevision(const DocumentRevision& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DocumentRevision::SharedCtor() {
  _cached_size_ = 0;
  sequence_ = GOOGLE_ULONGLONG(0);
  identifier_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DocumentRevision::~DocumentRevision() {
  SharedDtor();
}

void DocumentRevision::SharedDtor() {
  if (identifier_ != &::google::protobuf::internal::kEmptyString) {
    delete identifier_;
  }
  if (this != default_instance_) {
  }
}

void DocumentRevision::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DocumentRevision::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DocumentRevision_descriptor_;
}

const DocumentRevision& DocumentRevision::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_TSPArchiveMessages_2eproto();
  return *default_instance_;
}

DocumentRevision* DocumentRevision::default_instance_ = NULL;

DocumentRevision* DocumentRevision::New() const {
  return new DocumentRevision;
}

void DocumentRevision::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    sequence_ = GOOGLE_ULONGLONG(0);
    if (has_identifier()) {
      if (identifier_ != &::google::protobuf::internal::kEmptyString) {
        identifier_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DocumentRevision::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 sequence = 1 [default = 0];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sequence_)));
          set_has_sequence();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_identifier;
        break;
      }

      // optional string identifier = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_identifier:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_identifier()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->identifier().data(), this->identifier().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DocumentRevision::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint64 sequence = 1 [default = 0];
  if (has_sequence()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->sequence(), output);
  }

  // optional string identifier = 2;
  if (has_identifier()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->identifier().data(), this->identifier().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->identifier(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DocumentRevision::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint64 sequence = 1 [default = 0];
  if (has_sequence()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->sequence(), target);
  }

  // optional string identifier = 2;
  if (has_identifier()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->identifier().data(), this->identifier().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->identifier(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DocumentRevision::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 sequence = 1 [default = 0];
    if (has_sequence()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->sequence());
    }

    // optional string identifier = 2;
    if (has_identifier()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->identifier());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DocumentRevision::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DocumentRevision* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DocumentRevision*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DocumentRevision::MergeFrom(const DocumentRevision& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sequence()) {
      set_sequence(from.sequence());
    }
    if (from.has_identifier()) {
      set_identifier(from.identifier());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DocumentRevision::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DocumentRevision::CopyFrom(const DocumentRevision& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DocumentRevision::IsInitialized() const {

  return true;
}

void DocumentRevision::Swap(DocumentRevision* other) {
  if (other != this) {
    std::swap(sequence_, other->sequence_);
    std::swap(identifier_, other->identifier_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DocumentRevision::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DocumentRevision_descriptor_;
  metadata.reflection = DocumentRevision_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PasteboardMetadata::kVersionFieldNumber;
const int PasteboardMetadata::kAppNameFieldNumber;
const int PasteboardMetadata::kDatasFieldNumber;
const int PasteboardMetadata::kSourceDocumentUuidFieldNumber;
#endif  // !_MSC_VER

PasteboardMetadata::PasteboardMetadata()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PasteboardMetadata::InitAsDefaultInstance() {
}

PasteboardMetadata::PasteboardMetadata(const PasteboardMetadata& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PasteboardMetadata::SharedCtor() {
  _cached_size_ = 0;
  app_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  source_document_uuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PasteboardMetadata::~PasteboardMetadata() {
  SharedDtor();
}

void PasteboardMetadata::SharedDtor() {
  if (app_name_ != &::google::protobuf::internal::kEmptyString) {
    delete app_name_;
  }
  if (source_document_uuid_ != &::google::protobuf::internal::kEmptyString) {
    delete source_document_uuid_;
  }
  if (this != default_instance_) {
  }
}

void PasteboardMetadata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PasteboardMetadata::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PasteboardMetadata_descriptor_;
}

const PasteboardMetadata& PasteboardMetadata::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_TSPArchiveMessages_2eproto();
  return *default_instance_;
}

PasteboardMetadata* PasteboardMetadata::default_instance_ = NULL;

PasteboardMetadata* PasteboardMetadata::New() const {
  return new PasteboardMetadata;
}

void PasteboardMetadata::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_app_name()) {
      if (app_name_ != &::google::protobuf::internal::kEmptyString) {
        app_name_->clear();
      }
    }
    if (has_source_document_uuid()) {
      if (source_document_uuid_ != &::google::protobuf::internal::kEmptyString) {
        source_document_uuid_->clear();
      }
    }
  }
  version_.Clear();
  datas_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PasteboardMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 version = 1 [packed = true];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_version())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10, input, this->mutable_version())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_app_name;
        break;
      }

      // required string app_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_app_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_app_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->app_name().data(), this->app_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_datas;
        break;
      }

      // repeated .TSP.DataInfo datas = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_datas:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_datas()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_datas;
        if (input->ExpectTag(34)) goto parse_source_document_uuid;
        break;
      }

      // optional string source_document_uuid = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_source_document_uuid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source_document_uuid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->source_document_uuid().data(), this->source_document_uuid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PasteboardMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated uint32 version = 1 [packed = true];
  if (this->version_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_version_cached_byte_size_);
  }
  for (int i = 0; i < this->version_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->version(i), output);
  }

  // required string app_name = 2;
  if (has_app_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->app_name().data(), this->app_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->app_name(), output);
  }

  // repeated .TSP.DataInfo datas = 3;
  for (int i = 0; i < this->datas_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->datas(i), output);
  }

  // optional string source_document_uuid = 4;
  if (has_source_document_uuid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->source_document_uuid().data(), this->source_document_uuid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->source_document_uuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PasteboardMetadata::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated uint32 version = 1 [packed = true];
  if (this->version_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _version_cached_byte_size_, target);
  }
  for (int i = 0; i < this->version_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->version(i), target);
  }

  // required string app_name = 2;
  if (has_app_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->app_name().data(), this->app_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->app_name(), target);
  }

  // repeated .TSP.DataInfo datas = 3;
  for (int i = 0; i < this->datas_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->datas(i), target);
  }

  // optional string source_document_uuid = 4;
  if (has_source_document_uuid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->source_document_uuid().data(), this->source_document_uuid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->source_document_uuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PasteboardMetadata::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required string app_name = 2;
    if (has_app_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->app_name());
    }

    // optional string source_document_uuid = 4;
    if (has_source_document_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->source_document_uuid());
    }

  }
  // repeated uint32 version = 1 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->version_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->version(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _version_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .TSP.DataInfo datas = 3;
  total_size += 1 * this->datas_size();
  for (int i = 0; i < this->datas_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->datas(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PasteboardMetadata::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PasteboardMetadata* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PasteboardMetadata*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PasteboardMetadata::MergeFrom(const PasteboardMetadata& from) {
  GOOGLE_CHECK_NE(&from, this);
  version_.MergeFrom(from.version_);
  datas_.MergeFrom(from.datas_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_app_name()) {
      set_app_name(from.app_name());
    }
    if (from.has_source_document_uuid()) {
      set_source_document_uuid(from.source_document_uuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PasteboardMetadata::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PasteboardMetadata::CopyFrom(const PasteboardMetadata& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PasteboardMetadata::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;

  for (int i = 0; i < datas_size(); i++) {
    if (!this->datas(i).IsInitialized()) return false;
  }
  return true;
}

void PasteboardMetadata::Swap(PasteboardMetadata* other) {
  if (other != this) {
    version_.Swap(&other->version_);
    std::swap(app_name_, other->app_name_);
    datas_.Swap(&other->datas_);
    std::swap(source_document_uuid_, other->source_document_uuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PasteboardMetadata::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PasteboardMetadata_descriptor_;
  metadata.reflection = PasteboardMetadata_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DataInfo::kIdentifierFieldNumber;
const int DataInfo::kDigestFieldNumber;
const int DataInfo::kPreferredFileNameFieldNumber;
const int DataInfo::kFileNameFieldNumber;
const int DataInfo::kDocumentResourceLocatorFieldNumber;
const int DataInfo::kSourceBookmarkDataFieldNumber;
const int DataInfo::kPasteboardExternalFilePathFieldNumber;
#endif  // !_MSC_VER

DataInfo::DataInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DataInfo::InitAsDefaultInstance() {
}

DataInfo::DataInfo(const DataInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DataInfo::SharedCtor() {
  _cached_size_ = 0;
  identifier_ = GOOGLE_ULONGLONG(0);
  digest_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  preferred_file_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  file_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  document_resource_locator_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  source_bookmark_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  pasteboard_external_file_path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DataInfo::~DataInfo() {
  SharedDtor();
}

void DataInfo::SharedDtor() {
  if (digest_ != &::google::protobuf::internal::kEmptyString) {
    delete digest_;
  }
  if (preferred_file_name_ != &::google::protobuf::internal::kEmptyString) {
    delete preferred_file_name_;
  }
  if (file_name_ != &::google::protobuf::internal::kEmptyString) {
    delete file_name_;
  }
  if (document_resource_locator_ != &::google::protobuf::internal::kEmptyString) {
    delete document_resource_locator_;
  }
  if (source_bookmark_data_ != &::google::protobuf::internal::kEmptyString) {
    delete source_bookmark_data_;
  }
  if (pasteboard_external_file_path_ != &::google::protobuf::internal::kEmptyString) {
    delete pasteboard_external_file_path_;
  }
  if (this != default_instance_) {
  }
}

void DataInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DataInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DataInfo_descriptor_;
}

const DataInfo& DataInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_TSPArchiveMessages_2eproto();
  return *default_instance_;
}

DataInfo* DataInfo::default_instance_ = NULL;

DataInfo* DataInfo::New() const {
  return new DataInfo;
}

void DataInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    identifier_ = GOOGLE_ULONGLONG(0);
    if (has_digest()) {
      if (digest_ != &::google::protobuf::internal::kEmptyString) {
        digest_->clear();
      }
    }
    if (has_preferred_file_name()) {
      if (preferred_file_name_ != &::google::protobuf::internal::kEmptyString) {
        preferred_file_name_->clear();
      }
    }
    if (has_file_name()) {
      if (file_name_ != &::google::protobuf::internal::kEmptyString) {
        file_name_->clear();
      }
    }
    if (has_document_resource_locator()) {
      if (document_resource_locator_ != &::google::protobuf::internal::kEmptyString) {
        document_resource_locator_->clear();
      }
    }
    if (has_source_bookmark_data()) {
      if (source_bookmark_data_ != &::google::protobuf::internal::kEmptyString) {
        source_bookmark_data_->clear();
      }
    }
    if (has_pasteboard_external_file_path()) {
      if (pasteboard_external_file_path_ != &::google::protobuf::internal::kEmptyString) {
        pasteboard_external_file_path_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DataInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 identifier = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &identifier_)));
          set_has_identifier();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_digest;
        break;
      }

      // required bytes digest = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_digest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_digest()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_preferred_file_name;
        break;
      }

      // required string preferred_file_name = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_preferred_file_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_preferred_file_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->preferred_file_name().data(), this->preferred_file_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_file_name;
        break;
      }

      // optional string file_name = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_file_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->file_name().data(), this->file_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_document_resource_locator;
        break;
      }

      // optional string document_resource_locator = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_document_resource_locator:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_document_resource_locator()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->document_resource_locator().data(), this->document_resource_locator().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_source_bookmark_data;
        break;
      }

      // optional bytes source_bookmark_data = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_source_bookmark_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_source_bookmark_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(794)) goto parse_pasteboard_external_file_path;
        break;
      }

      // optional string pasteboard_external_file_path = 99;
      case 99: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_pasteboard_external_file_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pasteboard_external_file_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->pasteboard_external_file_path().data(), this->pasteboard_external_file_path().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DataInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint64 identifier = 1;
  if (has_identifier()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->identifier(), output);
  }

  // required bytes digest = 2;
  if (has_digest()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->digest(), output);
  }

  // required string preferred_file_name = 3;
  if (has_preferred_file_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->preferred_file_name().data(), this->preferred_file_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->preferred_file_name(), output);
  }

  // optional string file_name = 4;
  if (has_file_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->file_name().data(), this->file_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->file_name(), output);
  }

  // optional string document_resource_locator = 5;
  if (has_document_resource_locator()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->document_resource_locator().data(), this->document_resource_locator().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->document_resource_locator(), output);
  }

  // optional bytes source_bookmark_data = 6;
  if (has_source_bookmark_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      6, this->source_bookmark_data(), output);
  }

  // optional string pasteboard_external_file_path = 99;
  if (has_pasteboard_external_file_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->pasteboard_external_file_path().data(), this->pasteboard_external_file_path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      99, this->pasteboard_external_file_path(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DataInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint64 identifier = 1;
  if (has_identifier()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->identifier(), target);
  }

  // required bytes digest = 2;
  if (has_digest()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->digest(), target);
  }

  // required string preferred_file_name = 3;
  if (has_preferred_file_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->preferred_file_name().data(), this->preferred_file_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->preferred_file_name(), target);
  }

  // optional string file_name = 4;
  if (has_file_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->file_name().data(), this->file_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->file_name(), target);
  }

  // optional string document_resource_locator = 5;
  if (has_document_resource_locator()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->document_resource_locator().data(), this->document_resource_locator().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->document_resource_locator(), target);
  }

  // optional bytes source_bookmark_data = 6;
  if (has_source_bookmark_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->source_bookmark_data(), target);
  }

  // optional string pasteboard_external_file_path = 99;
  if (has_pasteboard_external_file_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->pasteboard_external_file_path().data(), this->pasteboard_external_file_path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        99, this->pasteboard_external_file_path(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DataInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint64 identifier = 1;
    if (has_identifier()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->identifier());
    }

    // required bytes digest = 2;
    if (has_digest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->digest());
    }

    // required string preferred_file_name = 3;
    if (has_preferred_file_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->preferred_file_name());
    }

    // optional string file_name = 4;
    if (has_file_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->file_name());
    }

    // optional string document_resource_locator = 5;
    if (has_document_resource_locator()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->document_resource_locator());
    }

    // optional bytes source_bookmark_data = 6;
    if (has_source_bookmark_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->source_bookmark_data());
    }

    // optional string pasteboard_external_file_path = 99;
    if (has_pasteboard_external_file_path()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pasteboard_external_file_path());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DataInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DataInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DataInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DataInfo::MergeFrom(const DataInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_identifier()) {
      set_identifier(from.identifier());
    }
    if (from.has_digest()) {
      set_digest(from.digest());
    }
    if (from.has_preferred_file_name()) {
      set_preferred_file_name(from.preferred_file_name());
    }
    if (from.has_file_name()) {
      set_file_name(from.file_name());
    }
    if (from.has_document_resource_locator()) {
      set_document_resource_locator(from.document_resource_locator());
    }
    if (from.has_source_bookmark_data()) {
      set_source_bookmark_data(from.source_bookmark_data());
    }
    if (from.has_pasteboard_external_file_path()) {
      set_pasteboard_external_file_path(from.pasteboard_external_file_path());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DataInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataInfo::CopyFrom(const DataInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void DataInfo::Swap(DataInfo* other) {
  if (other != this) {
    std::swap(identifier_, other->identifier_);
    std::swap(digest_, other->digest_);
    std::swap(preferred_file_name_, other->preferred_file_name_);
    std::swap(file_name_, other->file_name_);
    std::swap(document_resource_locator_, other->document_resource_locator_);
    std::swap(source_bookmark_data_, other->source_bookmark_data_);
    std::swap(pasteboard_external_file_path_, other->pasteboard_external_file_path_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DataInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DataInfo_descriptor_;
  metadata.reflection = DataInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ViewStateMetadata::kVersionFieldNumber;
const int ViewStateMetadata::kDocumentVersionUuidFieldNumber;
const int ViewStateMetadata::kComponentFieldNumber;
#endif  // !_MSC_VER

ViewStateMetadata::ViewStateMetadata()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ViewStateMetadata::InitAsDefaultInstance() {
  component_ = const_cast< ::TSP::ComponentInfo*>(&::TSP::ComponentInfo::default_instance());
}

ViewStateMetadata::ViewStateMetadata(const ViewStateMetadata& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ViewStateMetadata::SharedCtor() {
  _cached_size_ = 0;
  document_version_uuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  component_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ViewStateMetadata::~ViewStateMetadata() {
  SharedDtor();
}

void ViewStateMetadata::SharedDtor() {
  if (document_version_uuid_ != &::google::protobuf::internal::kEmptyString) {
    delete document_version_uuid_;
  }
  if (this != default_instance_) {
    delete component_;
  }
}

void ViewStateMetadata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ViewStateMetadata::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ViewStateMetadata_descriptor_;
}

const ViewStateMetadata& ViewStateMetadata::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_TSPArchiveMessages_2eproto();
  return *default_instance_;
}

ViewStateMetadata* ViewStateMetadata::default_instance_ = NULL;

ViewStateMetadata* ViewStateMetadata::New() const {
  return new ViewStateMetadata;
}

void ViewStateMetadata::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_document_version_uuid()) {
      if (document_version_uuid_ != &::google::protobuf::internal::kEmptyString) {
        document_version_uuid_->clear();
      }
    }
    if (has_component()) {
      if (component_ != NULL) component_->::TSP::ComponentInfo::Clear();
    }
  }
  version_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ViewStateMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 version = 1 [packed = true];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_version())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10, input, this->mutable_version())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_document_version_uuid;
        break;
      }

      // required string document_version_uuid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_document_version_uuid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_document_version_uuid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->document_version_uuid().data(), this->document_version_uuid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_component;
        break;
      }

      // required .TSP.ComponentInfo component = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_component:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_component()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ViewStateMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated uint32 version = 1 [packed = true];
  if (this->version_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_version_cached_byte_size_);
  }
  for (int i = 0; i < this->version_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->version(i), output);
  }

  // required string document_version_uuid = 2;
  if (has_document_version_uuid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->document_version_uuid().data(), this->document_version_uuid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->document_version_uuid(), output);
  }

  // required .TSP.ComponentInfo component = 3;
  if (has_component()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->component(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ViewStateMetadata::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated uint32 version = 1 [packed = true];
  if (this->version_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _version_cached_byte_size_, target);
  }
  for (int i = 0; i < this->version_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->version(i), target);
  }

  // required string document_version_uuid = 2;
  if (has_document_version_uuid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->document_version_uuid().data(), this->document_version_uuid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->document_version_uuid(), target);
  }

  // required .TSP.ComponentInfo component = 3;
  if (has_component()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->component(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ViewStateMetadata::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required string document_version_uuid = 2;
    if (has_document_version_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->document_version_uuid());
    }

    // required .TSP.ComponentInfo component = 3;
    if (has_component()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->component());
    }

  }
  // repeated uint32 version = 1 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->version_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->version(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _version_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ViewStateMetadata::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ViewStateMetadata* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ViewStateMetadata*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ViewStateMetadata::MergeFrom(const ViewStateMetadata& from) {
  GOOGLE_CHECK_NE(&from, this);
  version_.MergeFrom(from.version_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_document_version_uuid()) {
      set_document_version_uuid(from.document_version_uuid());
    }
    if (from.has_component()) {
      mutable_component()->::TSP::ComponentInfo::MergeFrom(from.component());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ViewStateMetadata::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewStateMetadata::CopyFrom(const ViewStateMetadata& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewStateMetadata::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;

  if (has_component()) {
    if (!this->component().IsInitialized()) return false;
  }
  return true;
}

void ViewStateMetadata::Swap(ViewStateMetadata* other) {
  if (other != this) {
    version_.Swap(&other->version_);
    std::swap(document_version_uuid_, other->document_version_uuid_);
    std::swap(component_, other->component_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ViewStateMetadata::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ViewStateMetadata_descriptor_;
  metadata.reflection = ViewStateMetadata_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace TSP

// @@protoc_insertion_point(global_scope)
