// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TSPMessages.proto

#ifndef PROTOBUF_TSPMessages_2eproto__INCLUDED
#define PROTOBUF_TSPMessages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace TSP {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_TSPMessages_2eproto();
void protobuf_AssignDesc_TSPMessages_2eproto();
void protobuf_ShutdownFile_TSPMessages_2eproto();

class Reference;
class DataReference;
class Point;
class Size;
class Range;
class Date;
class IndexSet;
class Color;
class Path;
class Path_Element;
class ReferenceDictionary;
class ReferenceDictionary_Entry;
class UUID;
class UUIDPath;
class PasteboardObject;
class ObjectContainer;

enum Color_ColorModel {
  Color_ColorModel_rgb = 1,
  Color_ColorModel_cmyk = 2,
  Color_ColorModel_white = 3
};
bool Color_ColorModel_IsValid(int value);
const Color_ColorModel Color_ColorModel_ColorModel_MIN = Color_ColorModel_rgb;
const Color_ColorModel Color_ColorModel_ColorModel_MAX = Color_ColorModel_white;
const int Color_ColorModel_ColorModel_ARRAYSIZE = Color_ColorModel_ColorModel_MAX + 1;

const ::google::protobuf::EnumDescriptor* Color_ColorModel_descriptor();
inline const ::std::string& Color_ColorModel_Name(Color_ColorModel value) {
  return ::google::protobuf::internal::NameOfEnum(
    Color_ColorModel_descriptor(), value);
}
inline bool Color_ColorModel_Parse(
    const ::std::string& name, Color_ColorModel* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Color_ColorModel>(
    Color_ColorModel_descriptor(), name, value);
}
enum Path_ElementType {
  Path_ElementType_moveTo = 1,
  Path_ElementType_lineTo = 2,
  Path_ElementType_quadCurveTo = 3,
  Path_ElementType_curveTo = 4,
  Path_ElementType_closeSubpath = 5
};
bool Path_ElementType_IsValid(int value);
const Path_ElementType Path_ElementType_ElementType_MIN = Path_ElementType_moveTo;
const Path_ElementType Path_ElementType_ElementType_MAX = Path_ElementType_closeSubpath;
const int Path_ElementType_ElementType_ARRAYSIZE = Path_ElementType_ElementType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Path_ElementType_descriptor();
inline const ::std::string& Path_ElementType_Name(Path_ElementType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Path_ElementType_descriptor(), value);
}
inline bool Path_ElementType_Parse(
    const ::std::string& name, Path_ElementType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Path_ElementType>(
    Path_ElementType_descriptor(), name, value);
}
// ===================================================================

class Reference : public ::google::protobuf::Message {
 public:
  Reference();
  virtual ~Reference();

  Reference(const Reference& from);

  inline Reference& operator=(const Reference& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Reference& default_instance();

  void Swap(Reference* other);

  // implements Message ----------------------------------------------

  Reference* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Reference& from);
  void MergeFrom(const Reference& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 identifier = 1;
  inline bool has_identifier() const;
  inline void clear_identifier();
  static const int kIdentifierFieldNumber = 1;
  inline ::google::protobuf::uint64 identifier() const;
  inline void set_identifier(::google::protobuf::uint64 value);

  // optional int32 deprecated_type = 2;
  inline bool has_deprecated_type() const;
  inline void clear_deprecated_type();
  static const int kDeprecatedTypeFieldNumber = 2;
  inline ::google::protobuf::int32 deprecated_type() const;
  inline void set_deprecated_type(::google::protobuf::int32 value);

  // optional bool deprecated_is_external = 3;
  inline bool has_deprecated_is_external() const;
  inline void clear_deprecated_is_external();
  static const int kDeprecatedIsExternalFieldNumber = 3;
  inline bool deprecated_is_external() const;
  inline void set_deprecated_is_external(bool value);

  // @@protoc_insertion_point(class_scope:TSP.Reference)
 private:
  inline void set_has_identifier();
  inline void clear_has_identifier();
  inline void set_has_deprecated_type();
  inline void clear_has_deprecated_type();
  inline void set_has_deprecated_is_external();
  inline void clear_has_deprecated_is_external();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 identifier_;
  ::google::protobuf::int32 deprecated_type_;
  bool deprecated_is_external_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_TSPMessages_2eproto();
  friend void protobuf_AssignDesc_TSPMessages_2eproto();
  friend void protobuf_ShutdownFile_TSPMessages_2eproto();

  void InitAsDefaultInstance();
  static Reference* default_instance_;
};
// -------------------------------------------------------------------

class DataReference : public ::google::protobuf::Message {
 public:
  DataReference();
  virtual ~DataReference();

  DataReference(const DataReference& from);

  inline DataReference& operator=(const DataReference& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DataReference& default_instance();

  void Swap(DataReference* other);

  // implements Message ----------------------------------------------

  DataReference* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DataReference& from);
  void MergeFrom(const DataReference& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 identifier = 1;
  inline bool has_identifier() const;
  inline void clear_identifier();
  static const int kIdentifierFieldNumber = 1;
  inline ::google::protobuf::uint64 identifier() const;
  inline void set_identifier(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TSP.DataReference)
 private:
  inline void set_has_identifier();
  inline void clear_has_identifier();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 identifier_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_TSPMessages_2eproto();
  friend void protobuf_AssignDesc_TSPMessages_2eproto();
  friend void protobuf_ShutdownFile_TSPMessages_2eproto();

  void InitAsDefaultInstance();
  static DataReference* default_instance_;
};
// -------------------------------------------------------------------

class Point : public ::google::protobuf::Message {
 public:
  Point();
  virtual ~Point();

  Point(const Point& from);

  inline Point& operator=(const Point& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Point& default_instance();

  void Swap(Point* other);

  // implements Message ----------------------------------------------

  Point* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Point& from);
  void MergeFrom(const Point& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline float x() const;
  inline void set_x(float value);

  // required float y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline float y() const;
  inline void set_y(float value);

  // @@protoc_insertion_point(class_scope:TSP.Point)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  float x_;
  float y_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_TSPMessages_2eproto();
  friend void protobuf_AssignDesc_TSPMessages_2eproto();
  friend void protobuf_ShutdownFile_TSPMessages_2eproto();

  void InitAsDefaultInstance();
  static Point* default_instance_;
};
// -------------------------------------------------------------------

class Size : public ::google::protobuf::Message {
 public:
  Size();
  virtual ~Size();

  Size(const Size& from);

  inline Size& operator=(const Size& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Size& default_instance();

  void Swap(Size* other);

  // implements Message ----------------------------------------------

  Size* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Size& from);
  void MergeFrom(const Size& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float width = 1;
  inline bool has_width() const;
  inline void clear_width();
  static const int kWidthFieldNumber = 1;
  inline float width() const;
  inline void set_width(float value);

  // required float height = 2;
  inline bool has_height() const;
  inline void clear_height();
  static const int kHeightFieldNumber = 2;
  inline float height() const;
  inline void set_height(float value);

  // @@protoc_insertion_point(class_scope:TSP.Size)
 private:
  inline void set_has_width();
  inline void clear_has_width();
  inline void set_has_height();
  inline void clear_has_height();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  float width_;
  float height_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_TSPMessages_2eproto();
  friend void protobuf_AssignDesc_TSPMessages_2eproto();
  friend void protobuf_ShutdownFile_TSPMessages_2eproto();

  void InitAsDefaultInstance();
  static Size* default_instance_;
};
// -------------------------------------------------------------------

class Range : public ::google::protobuf::Message {
 public:
  Range();
  virtual ~Range();

  Range(const Range& from);

  inline Range& operator=(const Range& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Range& default_instance();

  void Swap(Range* other);

  // implements Message ----------------------------------------------

  Range* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Range& from);
  void MergeFrom(const Range& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 location = 1;
  inline bool has_location() const;
  inline void clear_location();
  static const int kLocationFieldNumber = 1;
  inline ::google::protobuf::uint32 location() const;
  inline void set_location(::google::protobuf::uint32 value);

  // required uint32 length = 2;
  inline bool has_length() const;
  inline void clear_length();
  static const int kLengthFieldNumber = 2;
  inline ::google::protobuf::uint32 length() const;
  inline void set_length(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TSP.Range)
 private:
  inline void set_has_location();
  inline void clear_has_location();
  inline void set_has_length();
  inline void clear_has_length();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 location_;
  ::google::protobuf::uint32 length_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_TSPMessages_2eproto();
  friend void protobuf_AssignDesc_TSPMessages_2eproto();
  friend void protobuf_ShutdownFile_TSPMessages_2eproto();

  void InitAsDefaultInstance();
  static Range* default_instance_;
};
// -------------------------------------------------------------------

class Date : public ::google::protobuf::Message {
 public:
  Date();
  virtual ~Date();

  Date(const Date& from);

  inline Date& operator=(const Date& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Date& default_instance();

  void Swap(Date* other);

  // implements Message ----------------------------------------------

  Date* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Date& from);
  void MergeFrom(const Date& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double seconds = 1;
  inline bool has_seconds() const;
  inline void clear_seconds();
  static const int kSecondsFieldNumber = 1;
  inline double seconds() const;
  inline void set_seconds(double value);

  // @@protoc_insertion_point(class_scope:TSP.Date)
 private:
  inline void set_has_seconds();
  inline void clear_has_seconds();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  double seconds_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_TSPMessages_2eproto();
  friend void protobuf_AssignDesc_TSPMessages_2eproto();
  friend void protobuf_ShutdownFile_TSPMessages_2eproto();

  void InitAsDefaultInstance();
  static Date* default_instance_;
};
// -------------------------------------------------------------------

class IndexSet : public ::google::protobuf::Message {
 public:
  IndexSet();
  virtual ~IndexSet();

  IndexSet(const IndexSet& from);

  inline IndexSet& operator=(const IndexSet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndexSet& default_instance();

  void Swap(IndexSet* other);

  // implements Message ----------------------------------------------

  IndexSet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndexSet& from);
  void MergeFrom(const IndexSet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TSP.Range ranges = 1;
  inline int ranges_size() const;
  inline void clear_ranges();
  static const int kRangesFieldNumber = 1;
  inline const ::TSP::Range& ranges(int index) const;
  inline ::TSP::Range* mutable_ranges(int index);
  inline ::TSP::Range* add_ranges();
  inline const ::google::protobuf::RepeatedPtrField< ::TSP::Range >&
      ranges() const;
  inline ::google::protobuf::RepeatedPtrField< ::TSP::Range >*
      mutable_ranges();

  // @@protoc_insertion_point(class_scope:TSP.IndexSet)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::TSP::Range > ranges_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_TSPMessages_2eproto();
  friend void protobuf_AssignDesc_TSPMessages_2eproto();
  friend void protobuf_ShutdownFile_TSPMessages_2eproto();

  void InitAsDefaultInstance();
  static IndexSet* default_instance_;
};
// -------------------------------------------------------------------

class Color : public ::google::protobuf::Message {
 public:
  Color();
  virtual ~Color();

  Color(const Color& from);

  inline Color& operator=(const Color& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Color& default_instance();

  void Swap(Color* other);

  // implements Message ----------------------------------------------

  Color* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Color& from);
  void MergeFrom(const Color& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Color_ColorModel ColorModel;
  static const ColorModel rgb = Color_ColorModel_rgb;
  static const ColorModel cmyk = Color_ColorModel_cmyk;
  static const ColorModel white = Color_ColorModel_white;
  static inline bool ColorModel_IsValid(int value) {
    return Color_ColorModel_IsValid(value);
  }
  static const ColorModel ColorModel_MIN =
    Color_ColorModel_ColorModel_MIN;
  static const ColorModel ColorModel_MAX =
    Color_ColorModel_ColorModel_MAX;
  static const int ColorModel_ARRAYSIZE =
    Color_ColorModel_ColorModel_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ColorModel_descriptor() {
    return Color_ColorModel_descriptor();
  }
  static inline const ::std::string& ColorModel_Name(ColorModel value) {
    return Color_ColorModel_Name(value);
  }
  static inline bool ColorModel_Parse(const ::std::string& name,
      ColorModel* value) {
    return Color_ColorModel_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .TSP.Color.ColorModel model = 1;
  inline bool has_model() const;
  inline void clear_model();
  static const int kModelFieldNumber = 1;
  inline ::TSP::Color_ColorModel model() const;
  inline void set_model(::TSP::Color_ColorModel value);

  // optional float r = 3;
  inline bool has_r() const;
  inline void clear_r();
  static const int kRFieldNumber = 3;
  inline float r() const;
  inline void set_r(float value);

  // optional float g = 4;
  inline bool has_g() const;
  inline void clear_g();
  static const int kGFieldNumber = 4;
  inline float g() const;
  inline void set_g(float value);

  // optional float b = 5;
  inline bool has_b() const;
  inline void clear_b();
  static const int kBFieldNumber = 5;
  inline float b() const;
  inline void set_b(float value);

  // optional float a = 6 [default = 1];
  inline bool has_a() const;
  inline void clear_a();
  static const int kAFieldNumber = 6;
  inline float a() const;
  inline void set_a(float value);

  // optional float c = 7;
  inline bool has_c() const;
  inline void clear_c();
  static const int kCFieldNumber = 7;
  inline float c() const;
  inline void set_c(float value);

  // optional float m = 8;
  inline bool has_m() const;
  inline void clear_m();
  static const int kMFieldNumber = 8;
  inline float m() const;
  inline void set_m(float value);

  // optional float y = 9;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 9;
  inline float y() const;
  inline void set_y(float value);

  // optional float k = 10;
  inline bool has_k() const;
  inline void clear_k();
  static const int kKFieldNumber = 10;
  inline float k() const;
  inline void set_k(float value);

  // optional float w = 11;
  inline bool has_w() const;
  inline void clear_w();
  static const int kWFieldNumber = 11;
  inline float w() const;
  inline void set_w(float value);

  // @@protoc_insertion_point(class_scope:TSP.Color)
 private:
  inline void set_has_model();
  inline void clear_has_model();
  inline void set_has_r();
  inline void clear_has_r();
  inline void set_has_g();
  inline void clear_has_g();
  inline void set_has_b();
  inline void clear_has_b();
  inline void set_has_a();
  inline void clear_has_a();
  inline void set_has_c();
  inline void clear_has_c();
  inline void set_has_m();
  inline void clear_has_m();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_k();
  inline void clear_has_k();
  inline void set_has_w();
  inline void clear_has_w();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int model_;
  float r_;
  float g_;
  float b_;
  float a_;
  float c_;
  float m_;
  float y_;
  float k_;
  float w_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_TSPMessages_2eproto();
  friend void protobuf_AssignDesc_TSPMessages_2eproto();
  friend void protobuf_ShutdownFile_TSPMessages_2eproto();

  void InitAsDefaultInstance();
  static Color* default_instance_;
};
// -------------------------------------------------------------------

class Path_Element : public ::google::protobuf::Message {
 public:
  Path_Element();
  virtual ~Path_Element();

  Path_Element(const Path_Element& from);

  inline Path_Element& operator=(const Path_Element& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Path_Element& default_instance();

  void Swap(Path_Element* other);

  // implements Message ----------------------------------------------

  Path_Element* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Path_Element& from);
  void MergeFrom(const Path_Element& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .TSP.Path.ElementType type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::TSP::Path_ElementType type() const;
  inline void set_type(::TSP::Path_ElementType value);

  // repeated .TSP.Point points = 2;
  inline int points_size() const;
  inline void clear_points();
  static const int kPointsFieldNumber = 2;
  inline const ::TSP::Point& points(int index) const;
  inline ::TSP::Point* mutable_points(int index);
  inline ::TSP::Point* add_points();
  inline const ::google::protobuf::RepeatedPtrField< ::TSP::Point >&
      points() const;
  inline ::google::protobuf::RepeatedPtrField< ::TSP::Point >*
      mutable_points();

  // @@protoc_insertion_point(class_scope:TSP.Path.Element)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::TSP::Point > points_;
  int type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_TSPMessages_2eproto();
  friend void protobuf_AssignDesc_TSPMessages_2eproto();
  friend void protobuf_ShutdownFile_TSPMessages_2eproto();

  void InitAsDefaultInstance();
  static Path_Element* default_instance_;
};
// -------------------------------------------------------------------

class Path : public ::google::protobuf::Message {
 public:
  Path();
  virtual ~Path();

  Path(const Path& from);

  inline Path& operator=(const Path& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Path& default_instance();

  void Swap(Path* other);

  // implements Message ----------------------------------------------

  Path* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Path& from);
  void MergeFrom(const Path& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Path_Element Element;

  typedef Path_ElementType ElementType;
  static const ElementType moveTo = Path_ElementType_moveTo;
  static const ElementType lineTo = Path_ElementType_lineTo;
  static const ElementType quadCurveTo = Path_ElementType_quadCurveTo;
  static const ElementType curveTo = Path_ElementType_curveTo;
  static const ElementType closeSubpath = Path_ElementType_closeSubpath;
  static inline bool ElementType_IsValid(int value) {
    return Path_ElementType_IsValid(value);
  }
  static const ElementType ElementType_MIN =
    Path_ElementType_ElementType_MIN;
  static const ElementType ElementType_MAX =
    Path_ElementType_ElementType_MAX;
  static const int ElementType_ARRAYSIZE =
    Path_ElementType_ElementType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ElementType_descriptor() {
    return Path_ElementType_descriptor();
  }
  static inline const ::std::string& ElementType_Name(ElementType value) {
    return Path_ElementType_Name(value);
  }
  static inline bool ElementType_Parse(const ::std::string& name,
      ElementType* value) {
    return Path_ElementType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .TSP.Path.Element elements = 1;
  inline int elements_size() const;
  inline void clear_elements();
  static const int kElementsFieldNumber = 1;
  inline const ::TSP::Path_Element& elements(int index) const;
  inline ::TSP::Path_Element* mutable_elements(int index);
  inline ::TSP::Path_Element* add_elements();
  inline const ::google::protobuf::RepeatedPtrField< ::TSP::Path_Element >&
      elements() const;
  inline ::google::protobuf::RepeatedPtrField< ::TSP::Path_Element >*
      mutable_elements();

  // @@protoc_insertion_point(class_scope:TSP.Path)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::TSP::Path_Element > elements_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_TSPMessages_2eproto();
  friend void protobuf_AssignDesc_TSPMessages_2eproto();
  friend void protobuf_ShutdownFile_TSPMessages_2eproto();

  void InitAsDefaultInstance();
  static Path* default_instance_;
};
// -------------------------------------------------------------------

class ReferenceDictionary_Entry : public ::google::protobuf::Message {
 public:
  ReferenceDictionary_Entry();
  virtual ~ReferenceDictionary_Entry();

  ReferenceDictionary_Entry(const ReferenceDictionary_Entry& from);

  inline ReferenceDictionary_Entry& operator=(const ReferenceDictionary_Entry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReferenceDictionary_Entry& default_instance();

  void Swap(ReferenceDictionary_Entry* other);

  // implements Message ----------------------------------------------

  ReferenceDictionary_Entry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReferenceDictionary_Entry& from);
  void MergeFrom(const ReferenceDictionary_Entry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .TSP.Reference key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline const ::TSP::Reference& key() const;
  inline ::TSP::Reference* mutable_key();
  inline ::TSP::Reference* release_key();
  inline void set_allocated_key(::TSP::Reference* key);

  // required .TSP.Reference value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::TSP::Reference& value() const;
  inline ::TSP::Reference* mutable_value();
  inline ::TSP::Reference* release_value();
  inline void set_allocated_value(::TSP::Reference* value);

  // @@protoc_insertion_point(class_scope:TSP.ReferenceDictionary.Entry)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::TSP::Reference* key_;
  ::TSP::Reference* value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_TSPMessages_2eproto();
  friend void protobuf_AssignDesc_TSPMessages_2eproto();
  friend void protobuf_ShutdownFile_TSPMessages_2eproto();

  void InitAsDefaultInstance();
  static ReferenceDictionary_Entry* default_instance_;
};
// -------------------------------------------------------------------

class ReferenceDictionary : public ::google::protobuf::Message {
 public:
  ReferenceDictionary();
  virtual ~ReferenceDictionary();

  ReferenceDictionary(const ReferenceDictionary& from);

  inline ReferenceDictionary& operator=(const ReferenceDictionary& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReferenceDictionary& default_instance();

  void Swap(ReferenceDictionary* other);

  // implements Message ----------------------------------------------

  ReferenceDictionary* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReferenceDictionary& from);
  void MergeFrom(const ReferenceDictionary& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ReferenceDictionary_Entry Entry;

  // accessors -------------------------------------------------------

  // repeated .TSP.ReferenceDictionary.Entry entries = 1;
  inline int entries_size() const;
  inline void clear_entries();
  static const int kEntriesFieldNumber = 1;
  inline const ::TSP::ReferenceDictionary_Entry& entries(int index) const;
  inline ::TSP::ReferenceDictionary_Entry* mutable_entries(int index);
  inline ::TSP::ReferenceDictionary_Entry* add_entries();
  inline const ::google::protobuf::RepeatedPtrField< ::TSP::ReferenceDictionary_Entry >&
      entries() const;
  inline ::google::protobuf::RepeatedPtrField< ::TSP::ReferenceDictionary_Entry >*
      mutable_entries();

  // @@protoc_insertion_point(class_scope:TSP.ReferenceDictionary)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::TSP::ReferenceDictionary_Entry > entries_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_TSPMessages_2eproto();
  friend void protobuf_AssignDesc_TSPMessages_2eproto();
  friend void protobuf_ShutdownFile_TSPMessages_2eproto();

  void InitAsDefaultInstance();
  static ReferenceDictionary* default_instance_;
};
// -------------------------------------------------------------------

class UUID : public ::google::protobuf::Message {
 public:
  UUID();
  virtual ~UUID();

  UUID(const UUID& from);

  inline UUID& operator=(const UUID& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UUID& default_instance();

  void Swap(UUID* other);

  // implements Message ----------------------------------------------

  UUID* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UUID& from);
  void MergeFrom(const UUID& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 lower = 1;
  inline bool has_lower() const;
  inline void clear_lower();
  static const int kLowerFieldNumber = 1;
  inline ::google::protobuf::uint64 lower() const;
  inline void set_lower(::google::protobuf::uint64 value);

  // required uint64 upper = 2;
  inline bool has_upper() const;
  inline void clear_upper();
  static const int kUpperFieldNumber = 2;
  inline ::google::protobuf::uint64 upper() const;
  inline void set_upper(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TSP.UUID)
 private:
  inline void set_has_lower();
  inline void clear_has_lower();
  inline void set_has_upper();
  inline void clear_has_upper();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 lower_;
  ::google::protobuf::uint64 upper_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_TSPMessages_2eproto();
  friend void protobuf_AssignDesc_TSPMessages_2eproto();
  friend void protobuf_ShutdownFile_TSPMessages_2eproto();

  void InitAsDefaultInstance();
  static UUID* default_instance_;
};
// -------------------------------------------------------------------

class UUIDPath : public ::google::protobuf::Message {
 public:
  UUIDPath();
  virtual ~UUIDPath();

  UUIDPath(const UUIDPath& from);

  inline UUIDPath& operator=(const UUIDPath& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UUIDPath& default_instance();

  void Swap(UUIDPath* other);

  // implements Message ----------------------------------------------

  UUIDPath* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UUIDPath& from);
  void MergeFrom(const UUIDPath& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TSP.UUID uuids = 1;
  inline int uuids_size() const;
  inline void clear_uuids();
  static const int kUuidsFieldNumber = 1;
  inline const ::TSP::UUID& uuids(int index) const;
  inline ::TSP::UUID* mutable_uuids(int index);
  inline ::TSP::UUID* add_uuids();
  inline const ::google::protobuf::RepeatedPtrField< ::TSP::UUID >&
      uuids() const;
  inline ::google::protobuf::RepeatedPtrField< ::TSP::UUID >*
      mutable_uuids();

  // @@protoc_insertion_point(class_scope:TSP.UUIDPath)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::TSP::UUID > uuids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_TSPMessages_2eproto();
  friend void protobuf_AssignDesc_TSPMessages_2eproto();
  friend void protobuf_ShutdownFile_TSPMessages_2eproto();

  void InitAsDefaultInstance();
  static UUIDPath* default_instance_;
};
// -------------------------------------------------------------------

class PasteboardObject : public ::google::protobuf::Message {
 public:
  PasteboardObject();
  virtual ~PasteboardObject();

  PasteboardObject(const PasteboardObject& from);

  inline PasteboardObject& operator=(const PasteboardObject& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PasteboardObject& default_instance();

  void Swap(PasteboardObject* other);

  // implements Message ----------------------------------------------

  PasteboardObject* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PasteboardObject& from);
  void MergeFrom(const PasteboardObject& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TSP.Reference stylesheet = 1;
  inline bool has_stylesheet() const;
  inline void clear_stylesheet();
  static const int kStylesheetFieldNumber = 1;
  inline const ::TSP::Reference& stylesheet() const;
  inline ::TSP::Reference* mutable_stylesheet();
  inline ::TSP::Reference* release_stylesheet();
  inline void set_allocated_stylesheet(::TSP::Reference* stylesheet);

  // repeated .TSP.Reference drawables = 2;
  inline int drawables_size() const;
  inline void clear_drawables();
  static const int kDrawablesFieldNumber = 2;
  inline const ::TSP::Reference& drawables(int index) const;
  inline ::TSP::Reference* mutable_drawables(int index);
  inline ::TSP::Reference* add_drawables();
  inline const ::google::protobuf::RepeatedPtrField< ::TSP::Reference >&
      drawables() const;
  inline ::google::protobuf::RepeatedPtrField< ::TSP::Reference >*
      mutable_drawables();

  // repeated .TSP.Reference styles = 3;
  inline int styles_size() const;
  inline void clear_styles();
  static const int kStylesFieldNumber = 3;
  inline const ::TSP::Reference& styles(int index) const;
  inline ::TSP::Reference* mutable_styles(int index);
  inline ::TSP::Reference* add_styles();
  inline const ::google::protobuf::RepeatedPtrField< ::TSP::Reference >&
      styles() const;
  inline ::google::protobuf::RepeatedPtrField< ::TSP::Reference >*
      mutable_styles();

  // optional .TSP.Reference theme = 4;
  inline bool has_theme() const;
  inline void clear_theme();
  static const int kThemeFieldNumber = 4;
  inline const ::TSP::Reference& theme() const;
  inline ::TSP::Reference* mutable_theme();
  inline ::TSP::Reference* release_theme();
  inline void set_allocated_theme(::TSP::Reference* theme);

  // optional .TSP.Reference wp_storage = 5;
  inline bool has_wp_storage() const;
  inline void clear_wp_storage();
  static const int kWpStorageFieldNumber = 5;
  inline const ::TSP::Reference& wp_storage() const;
  inline ::TSP::Reference* mutable_wp_storage();
  inline ::TSP::Reference* release_wp_storage();
  inline void set_allocated_wp_storage(::TSP::Reference* wp_storage);

  // optional .TSP.Reference guide_storage = 9;
  inline bool has_guide_storage() const;
  inline void clear_guide_storage();
  static const int kGuideStorageFieldNumber = 9;
  inline const ::TSP::Reference& guide_storage() const;
  inline ::TSP::Reference* mutable_guide_storage();
  inline ::TSP::Reference* release_guide_storage();
  inline void set_allocated_guide_storage(::TSP::Reference* guide_storage);

  // optional .TSP.Reference app_native_object = 6;
  inline bool has_app_native_object() const;
  inline void clear_app_native_object();
  static const int kAppNativeObjectFieldNumber = 6;
  inline const ::TSP::Reference& app_native_object() const;
  inline ::TSP::Reference* mutable_app_native_object();
  inline ::TSP::Reference* release_app_native_object();
  inline void set_allocated_app_native_object(::TSP::Reference* app_native_object);

  // optional bool is_text_primary = 7 [default = false];
  inline bool has_is_text_primary() const;
  inline void clear_is_text_primary();
  static const int kIsTextPrimaryFieldNumber = 7;
  inline bool is_text_primary() const;
  inline void set_is_text_primary(bool value);

  // optional bool is_smart = 8 [default = false];
  inline bool has_is_smart() const;
  inline void clear_is_smart();
  static const int kIsSmartFieldNumber = 8;
  inline bool is_smart() const;
  inline void set_is_smart(bool value);

  // @@protoc_insertion_point(class_scope:TSP.PasteboardObject)
 private:
  inline void set_has_stylesheet();
  inline void clear_has_stylesheet();
  inline void set_has_theme();
  inline void clear_has_theme();
  inline void set_has_wp_storage();
  inline void clear_has_wp_storage();
  inline void set_has_guide_storage();
  inline void clear_has_guide_storage();
  inline void set_has_app_native_object();
  inline void clear_has_app_native_object();
  inline void set_has_is_text_primary();
  inline void clear_has_is_text_primary();
  inline void set_has_is_smart();
  inline void clear_has_is_smart();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::TSP::Reference* stylesheet_;
  ::google::protobuf::RepeatedPtrField< ::TSP::Reference > drawables_;
  ::google::protobuf::RepeatedPtrField< ::TSP::Reference > styles_;
  ::TSP::Reference* theme_;
  ::TSP::Reference* wp_storage_;
  ::TSP::Reference* guide_storage_;
  ::TSP::Reference* app_native_object_;
  bool is_text_primary_;
  bool is_smart_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_TSPMessages_2eproto();
  friend void protobuf_AssignDesc_TSPMessages_2eproto();
  friend void protobuf_ShutdownFile_TSPMessages_2eproto();

  void InitAsDefaultInstance();
  static PasteboardObject* default_instance_;
};
// -------------------------------------------------------------------

class ObjectContainer : public ::google::protobuf::Message {
 public:
  ObjectContainer();
  virtual ~ObjectContainer();

  ObjectContainer(const ObjectContainer& from);

  inline ObjectContainer& operator=(const ObjectContainer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjectContainer& default_instance();

  void Swap(ObjectContainer* other);

  // implements Message ----------------------------------------------

  ObjectContainer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ObjectContainer& from);
  void MergeFrom(const ObjectContainer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 identifier = 1;
  inline bool has_identifier() const;
  inline void clear_identifier();
  static const int kIdentifierFieldNumber = 1;
  inline ::google::protobuf::uint32 identifier() const;
  inline void set_identifier(::google::protobuf::uint32 value);

  // repeated .TSP.Reference objects = 2;
  inline int objects_size() const;
  inline void clear_objects();
  static const int kObjectsFieldNumber = 2;
  inline const ::TSP::Reference& objects(int index) const;
  inline ::TSP::Reference* mutable_objects(int index);
  inline ::TSP::Reference* add_objects();
  inline const ::google::protobuf::RepeatedPtrField< ::TSP::Reference >&
      objects() const;
  inline ::google::protobuf::RepeatedPtrField< ::TSP::Reference >*
      mutable_objects();

  // @@protoc_insertion_point(class_scope:TSP.ObjectContainer)
 private:
  inline void set_has_identifier();
  inline void clear_has_identifier();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::TSP::Reference > objects_;
  ::google::protobuf::uint32 identifier_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_TSPMessages_2eproto();
  friend void protobuf_AssignDesc_TSPMessages_2eproto();
  friend void protobuf_ShutdownFile_TSPMessages_2eproto();

  void InitAsDefaultInstance();
  static ObjectContainer* default_instance_;
};
// ===================================================================


// ===================================================================

// Reference

// required uint64 identifier = 1;
inline bool Reference::has_identifier() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Reference::set_has_identifier() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Reference::clear_has_identifier() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Reference::clear_identifier() {
  identifier_ = GOOGLE_ULONGLONG(0);
  clear_has_identifier();
}
inline ::google::protobuf::uint64 Reference::identifier() const {
  return identifier_;
}
inline void Reference::set_identifier(::google::protobuf::uint64 value) {
  set_has_identifier();
  identifier_ = value;
}

// optional int32 deprecated_type = 2;
inline bool Reference::has_deprecated_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Reference::set_has_deprecated_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Reference::clear_has_deprecated_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Reference::clear_deprecated_type() {
  deprecated_type_ = 0;
  clear_has_deprecated_type();
}
inline ::google::protobuf::int32 Reference::deprecated_type() const {
  return deprecated_type_;
}
inline void Reference::set_deprecated_type(::google::protobuf::int32 value) {
  set_has_deprecated_type();
  deprecated_type_ = value;
}

// optional bool deprecated_is_external = 3;
inline bool Reference::has_deprecated_is_external() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Reference::set_has_deprecated_is_external() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Reference::clear_has_deprecated_is_external() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Reference::clear_deprecated_is_external() {
  deprecated_is_external_ = false;
  clear_has_deprecated_is_external();
}
inline bool Reference::deprecated_is_external() const {
  return deprecated_is_external_;
}
inline void Reference::set_deprecated_is_external(bool value) {
  set_has_deprecated_is_external();
  deprecated_is_external_ = value;
}

// -------------------------------------------------------------------

// DataReference

// required uint64 identifier = 1;
inline bool DataReference::has_identifier() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DataReference::set_has_identifier() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DataReference::clear_has_identifier() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DataReference::clear_identifier() {
  identifier_ = GOOGLE_ULONGLONG(0);
  clear_has_identifier();
}
inline ::google::protobuf::uint64 DataReference::identifier() const {
  return identifier_;
}
inline void DataReference::set_identifier(::google::protobuf::uint64 value) {
  set_has_identifier();
  identifier_ = value;
}

// -------------------------------------------------------------------

// Point

// required float x = 1;
inline bool Point::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Point::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Point::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Point::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float Point::x() const {
  return x_;
}
inline void Point::set_x(float value) {
  set_has_x();
  x_ = value;
}

// required float y = 2;
inline bool Point::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Point::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Point::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Point::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float Point::y() const {
  return y_;
}
inline void Point::set_y(float value) {
  set_has_y();
  y_ = value;
}

// -------------------------------------------------------------------

// Size

// required float width = 1;
inline bool Size::has_width() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Size::set_has_width() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Size::clear_has_width() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Size::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline float Size::width() const {
  return width_;
}
inline void Size::set_width(float value) {
  set_has_width();
  width_ = value;
}

// required float height = 2;
inline bool Size::has_height() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Size::set_has_height() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Size::clear_has_height() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Size::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline float Size::height() const {
  return height_;
}
inline void Size::set_height(float value) {
  set_has_height();
  height_ = value;
}

// -------------------------------------------------------------------

// Range

// required uint32 location = 1;
inline bool Range::has_location() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Range::set_has_location() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Range::clear_has_location() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Range::clear_location() {
  location_ = 0u;
  clear_has_location();
}
inline ::google::protobuf::uint32 Range::location() const {
  return location_;
}
inline void Range::set_location(::google::protobuf::uint32 value) {
  set_has_location();
  location_ = value;
}

// required uint32 length = 2;
inline bool Range::has_length() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Range::set_has_length() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Range::clear_has_length() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Range::clear_length() {
  length_ = 0u;
  clear_has_length();
}
inline ::google::protobuf::uint32 Range::length() const {
  return length_;
}
inline void Range::set_length(::google::protobuf::uint32 value) {
  set_has_length();
  length_ = value;
}

// -------------------------------------------------------------------

// Date

// required double seconds = 1;
inline bool Date::has_seconds() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Date::set_has_seconds() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Date::clear_has_seconds() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Date::clear_seconds() {
  seconds_ = 0;
  clear_has_seconds();
}
inline double Date::seconds() const {
  return seconds_;
}
inline void Date::set_seconds(double value) {
  set_has_seconds();
  seconds_ = value;
}

// -------------------------------------------------------------------

// IndexSet

// repeated .TSP.Range ranges = 1;
inline int IndexSet::ranges_size() const {
  return ranges_.size();
}
inline void IndexSet::clear_ranges() {
  ranges_.Clear();
}
inline const ::TSP::Range& IndexSet::ranges(int index) const {
  return ranges_.Get(index);
}
inline ::TSP::Range* IndexSet::mutable_ranges(int index) {
  return ranges_.Mutable(index);
}
inline ::TSP::Range* IndexSet::add_ranges() {
  return ranges_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TSP::Range >&
IndexSet::ranges() const {
  return ranges_;
}
inline ::google::protobuf::RepeatedPtrField< ::TSP::Range >*
IndexSet::mutable_ranges() {
  return &ranges_;
}

// -------------------------------------------------------------------

// Color

// required .TSP.Color.ColorModel model = 1;
inline bool Color::has_model() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Color::set_has_model() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Color::clear_has_model() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Color::clear_model() {
  model_ = 1;
  clear_has_model();
}
inline ::TSP::Color_ColorModel Color::model() const {
  return static_cast< ::TSP::Color_ColorModel >(model_);
}
inline void Color::set_model(::TSP::Color_ColorModel value) {
  assert(::TSP::Color_ColorModel_IsValid(value));
  set_has_model();
  model_ = value;
}

// optional float r = 3;
inline bool Color::has_r() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Color::set_has_r() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Color::clear_has_r() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Color::clear_r() {
  r_ = 0;
  clear_has_r();
}
inline float Color::r() const {
  return r_;
}
inline void Color::set_r(float value) {
  set_has_r();
  r_ = value;
}

// optional float g = 4;
inline bool Color::has_g() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Color::set_has_g() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Color::clear_has_g() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Color::clear_g() {
  g_ = 0;
  clear_has_g();
}
inline float Color::g() const {
  return g_;
}
inline void Color::set_g(float value) {
  set_has_g();
  g_ = value;
}

// optional float b = 5;
inline bool Color::has_b() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Color::set_has_b() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Color::clear_has_b() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Color::clear_b() {
  b_ = 0;
  clear_has_b();
}
inline float Color::b() const {
  return b_;
}
inline void Color::set_b(float value) {
  set_has_b();
  b_ = value;
}

// optional float a = 6 [default = 1];
inline bool Color::has_a() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Color::set_has_a() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Color::clear_has_a() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Color::clear_a() {
  a_ = 1;
  clear_has_a();
}
inline float Color::a() const {
  return a_;
}
inline void Color::set_a(float value) {
  set_has_a();
  a_ = value;
}

// optional float c = 7;
inline bool Color::has_c() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Color::set_has_c() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Color::clear_has_c() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Color::clear_c() {
  c_ = 0;
  clear_has_c();
}
inline float Color::c() const {
  return c_;
}
inline void Color::set_c(float value) {
  set_has_c();
  c_ = value;
}

// optional float m = 8;
inline bool Color::has_m() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Color::set_has_m() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Color::clear_has_m() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Color::clear_m() {
  m_ = 0;
  clear_has_m();
}
inline float Color::m() const {
  return m_;
}
inline void Color::set_m(float value) {
  set_has_m();
  m_ = value;
}

// optional float y = 9;
inline bool Color::has_y() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Color::set_has_y() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Color::clear_has_y() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Color::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float Color::y() const {
  return y_;
}
inline void Color::set_y(float value) {
  set_has_y();
  y_ = value;
}

// optional float k = 10;
inline bool Color::has_k() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Color::set_has_k() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Color::clear_has_k() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Color::clear_k() {
  k_ = 0;
  clear_has_k();
}
inline float Color::k() const {
  return k_;
}
inline void Color::set_k(float value) {
  set_has_k();
  k_ = value;
}

// optional float w = 11;
inline bool Color::has_w() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Color::set_has_w() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Color::clear_has_w() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Color::clear_w() {
  w_ = 0;
  clear_has_w();
}
inline float Color::w() const {
  return w_;
}
inline void Color::set_w(float value) {
  set_has_w();
  w_ = value;
}

// -------------------------------------------------------------------

// Path_Element

// required .TSP.Path.ElementType type = 1;
inline bool Path_Element::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Path_Element::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Path_Element::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Path_Element::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::TSP::Path_ElementType Path_Element::type() const {
  return static_cast< ::TSP::Path_ElementType >(type_);
}
inline void Path_Element::set_type(::TSP::Path_ElementType value) {
  assert(::TSP::Path_ElementType_IsValid(value));
  set_has_type();
  type_ = value;
}

// repeated .TSP.Point points = 2;
inline int Path_Element::points_size() const {
  return points_.size();
}
inline void Path_Element::clear_points() {
  points_.Clear();
}
inline const ::TSP::Point& Path_Element::points(int index) const {
  return points_.Get(index);
}
inline ::TSP::Point* Path_Element::mutable_points(int index) {
  return points_.Mutable(index);
}
inline ::TSP::Point* Path_Element::add_points() {
  return points_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TSP::Point >&
Path_Element::points() const {
  return points_;
}
inline ::google::protobuf::RepeatedPtrField< ::TSP::Point >*
Path_Element::mutable_points() {
  return &points_;
}

// -------------------------------------------------------------------

// Path

// repeated .TSP.Path.Element elements = 1;
inline int Path::elements_size() const {
  return elements_.size();
}
inline void Path::clear_elements() {
  elements_.Clear();
}
inline const ::TSP::Path_Element& Path::elements(int index) const {
  return elements_.Get(index);
}
inline ::TSP::Path_Element* Path::mutable_elements(int index) {
  return elements_.Mutable(index);
}
inline ::TSP::Path_Element* Path::add_elements() {
  return elements_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TSP::Path_Element >&
Path::elements() const {
  return elements_;
}
inline ::google::protobuf::RepeatedPtrField< ::TSP::Path_Element >*
Path::mutable_elements() {
  return &elements_;
}

// -------------------------------------------------------------------

// ReferenceDictionary_Entry

// required .TSP.Reference key = 1;
inline bool ReferenceDictionary_Entry::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReferenceDictionary_Entry::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReferenceDictionary_Entry::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReferenceDictionary_Entry::clear_key() {
  if (key_ != NULL) key_->::TSP::Reference::Clear();
  clear_has_key();
}
inline const ::TSP::Reference& ReferenceDictionary_Entry::key() const {
  return key_ != NULL ? *key_ : *default_instance_->key_;
}
inline ::TSP::Reference* ReferenceDictionary_Entry::mutable_key() {
  set_has_key();
  if (key_ == NULL) key_ = new ::TSP::Reference;
  return key_;
}
inline ::TSP::Reference* ReferenceDictionary_Entry::release_key() {
  clear_has_key();
  ::TSP::Reference* temp = key_;
  key_ = NULL;
  return temp;
}
inline void ReferenceDictionary_Entry::set_allocated_key(::TSP::Reference* key) {
  delete key_;
  key_ = key;
  if (key) {
    set_has_key();
  } else {
    clear_has_key();
  }
}

// required .TSP.Reference value = 2;
inline bool ReferenceDictionary_Entry::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReferenceDictionary_Entry::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReferenceDictionary_Entry::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReferenceDictionary_Entry::clear_value() {
  if (value_ != NULL) value_->::TSP::Reference::Clear();
  clear_has_value();
}
inline const ::TSP::Reference& ReferenceDictionary_Entry::value() const {
  return value_ != NULL ? *value_ : *default_instance_->value_;
}
inline ::TSP::Reference* ReferenceDictionary_Entry::mutable_value() {
  set_has_value();
  if (value_ == NULL) value_ = new ::TSP::Reference;
  return value_;
}
inline ::TSP::Reference* ReferenceDictionary_Entry::release_value() {
  clear_has_value();
  ::TSP::Reference* temp = value_;
  value_ = NULL;
  return temp;
}
inline void ReferenceDictionary_Entry::set_allocated_value(::TSP::Reference* value) {
  delete value_;
  value_ = value;
  if (value) {
    set_has_value();
  } else {
    clear_has_value();
  }
}

// -------------------------------------------------------------------

// ReferenceDictionary

// repeated .TSP.ReferenceDictionary.Entry entries = 1;
inline int ReferenceDictionary::entries_size() const {
  return entries_.size();
}
inline void ReferenceDictionary::clear_entries() {
  entries_.Clear();
}
inline const ::TSP::ReferenceDictionary_Entry& ReferenceDictionary::entries(int index) const {
  return entries_.Get(index);
}
inline ::TSP::ReferenceDictionary_Entry* ReferenceDictionary::mutable_entries(int index) {
  return entries_.Mutable(index);
}
inline ::TSP::ReferenceDictionary_Entry* ReferenceDictionary::add_entries() {
  return entries_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TSP::ReferenceDictionary_Entry >&
ReferenceDictionary::entries() const {
  return entries_;
}
inline ::google::protobuf::RepeatedPtrField< ::TSP::ReferenceDictionary_Entry >*
ReferenceDictionary::mutable_entries() {
  return &entries_;
}

// -------------------------------------------------------------------

// UUID

// required uint64 lower = 1;
inline bool UUID::has_lower() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UUID::set_has_lower() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UUID::clear_has_lower() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UUID::clear_lower() {
  lower_ = GOOGLE_ULONGLONG(0);
  clear_has_lower();
}
inline ::google::protobuf::uint64 UUID::lower() const {
  return lower_;
}
inline void UUID::set_lower(::google::protobuf::uint64 value) {
  set_has_lower();
  lower_ = value;
}

// required uint64 upper = 2;
inline bool UUID::has_upper() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UUID::set_has_upper() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UUID::clear_has_upper() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UUID::clear_upper() {
  upper_ = GOOGLE_ULONGLONG(0);
  clear_has_upper();
}
inline ::google::protobuf::uint64 UUID::upper() const {
  return upper_;
}
inline void UUID::set_upper(::google::protobuf::uint64 value) {
  set_has_upper();
  upper_ = value;
}

// -------------------------------------------------------------------

// UUIDPath

// repeated .TSP.UUID uuids = 1;
inline int UUIDPath::uuids_size() const {
  return uuids_.size();
}
inline void UUIDPath::clear_uuids() {
  uuids_.Clear();
}
inline const ::TSP::UUID& UUIDPath::uuids(int index) const {
  return uuids_.Get(index);
}
inline ::TSP::UUID* UUIDPath::mutable_uuids(int index) {
  return uuids_.Mutable(index);
}
inline ::TSP::UUID* UUIDPath::add_uuids() {
  return uuids_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TSP::UUID >&
UUIDPath::uuids() const {
  return uuids_;
}
inline ::google::protobuf::RepeatedPtrField< ::TSP::UUID >*
UUIDPath::mutable_uuids() {
  return &uuids_;
}

// -------------------------------------------------------------------

// PasteboardObject

// optional .TSP.Reference stylesheet = 1;
inline bool PasteboardObject::has_stylesheet() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PasteboardObject::set_has_stylesheet() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PasteboardObject::clear_has_stylesheet() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PasteboardObject::clear_stylesheet() {
  if (stylesheet_ != NULL) stylesheet_->::TSP::Reference::Clear();
  clear_has_stylesheet();
}
inline const ::TSP::Reference& PasteboardObject::stylesheet() const {
  return stylesheet_ != NULL ? *stylesheet_ : *default_instance_->stylesheet_;
}
inline ::TSP::Reference* PasteboardObject::mutable_stylesheet() {
  set_has_stylesheet();
  if (stylesheet_ == NULL) stylesheet_ = new ::TSP::Reference;
  return stylesheet_;
}
inline ::TSP::Reference* PasteboardObject::release_stylesheet() {
  clear_has_stylesheet();
  ::TSP::Reference* temp = stylesheet_;
  stylesheet_ = NULL;
  return temp;
}
inline void PasteboardObject::set_allocated_stylesheet(::TSP::Reference* stylesheet) {
  delete stylesheet_;
  stylesheet_ = stylesheet;
  if (stylesheet) {
    set_has_stylesheet();
  } else {
    clear_has_stylesheet();
  }
}

// repeated .TSP.Reference drawables = 2;
inline int PasteboardObject::drawables_size() const {
  return drawables_.size();
}
inline void PasteboardObject::clear_drawables() {
  drawables_.Clear();
}
inline const ::TSP::Reference& PasteboardObject::drawables(int index) const {
  return drawables_.Get(index);
}
inline ::TSP::Reference* PasteboardObject::mutable_drawables(int index) {
  return drawables_.Mutable(index);
}
inline ::TSP::Reference* PasteboardObject::add_drawables() {
  return drawables_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TSP::Reference >&
PasteboardObject::drawables() const {
  return drawables_;
}
inline ::google::protobuf::RepeatedPtrField< ::TSP::Reference >*
PasteboardObject::mutable_drawables() {
  return &drawables_;
}

// repeated .TSP.Reference styles = 3;
inline int PasteboardObject::styles_size() const {
  return styles_.size();
}
inline void PasteboardObject::clear_styles() {
  styles_.Clear();
}
inline const ::TSP::Reference& PasteboardObject::styles(int index) const {
  return styles_.Get(index);
}
inline ::TSP::Reference* PasteboardObject::mutable_styles(int index) {
  return styles_.Mutable(index);
}
inline ::TSP::Reference* PasteboardObject::add_styles() {
  return styles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TSP::Reference >&
PasteboardObject::styles() const {
  return styles_;
}
inline ::google::protobuf::RepeatedPtrField< ::TSP::Reference >*
PasteboardObject::mutable_styles() {
  return &styles_;
}

// optional .TSP.Reference theme = 4;
inline bool PasteboardObject::has_theme() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PasteboardObject::set_has_theme() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PasteboardObject::clear_has_theme() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PasteboardObject::clear_theme() {
  if (theme_ != NULL) theme_->::TSP::Reference::Clear();
  clear_has_theme();
}
inline const ::TSP::Reference& PasteboardObject::theme() const {
  return theme_ != NULL ? *theme_ : *default_instance_->theme_;
}
inline ::TSP::Reference* PasteboardObject::mutable_theme() {
  set_has_theme();
  if (theme_ == NULL) theme_ = new ::TSP::Reference;
  return theme_;
}
inline ::TSP::Reference* PasteboardObject::release_theme() {
  clear_has_theme();
  ::TSP::Reference* temp = theme_;
  theme_ = NULL;
  return temp;
}
inline void PasteboardObject::set_allocated_theme(::TSP::Reference* theme) {
  delete theme_;
  theme_ = theme;
  if (theme) {
    set_has_theme();
  } else {
    clear_has_theme();
  }
}

// optional .TSP.Reference wp_storage = 5;
inline bool PasteboardObject::has_wp_storage() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PasteboardObject::set_has_wp_storage() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PasteboardObject::clear_has_wp_storage() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PasteboardObject::clear_wp_storage() {
  if (wp_storage_ != NULL) wp_storage_->::TSP::Reference::Clear();
  clear_has_wp_storage();
}
inline const ::TSP::Reference& PasteboardObject::wp_storage() const {
  return wp_storage_ != NULL ? *wp_storage_ : *default_instance_->wp_storage_;
}
inline ::TSP::Reference* PasteboardObject::mutable_wp_storage() {
  set_has_wp_storage();
  if (wp_storage_ == NULL) wp_storage_ = new ::TSP::Reference;
  return wp_storage_;
}
inline ::TSP::Reference* PasteboardObject::release_wp_storage() {
  clear_has_wp_storage();
  ::TSP::Reference* temp = wp_storage_;
  wp_storage_ = NULL;
  return temp;
}
inline void PasteboardObject::set_allocated_wp_storage(::TSP::Reference* wp_storage) {
  delete wp_storage_;
  wp_storage_ = wp_storage;
  if (wp_storage) {
    set_has_wp_storage();
  } else {
    clear_has_wp_storage();
  }
}

// optional .TSP.Reference guide_storage = 9;
inline bool PasteboardObject::has_guide_storage() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PasteboardObject::set_has_guide_storage() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PasteboardObject::clear_has_guide_storage() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PasteboardObject::clear_guide_storage() {
  if (guide_storage_ != NULL) guide_storage_->::TSP::Reference::Clear();
  clear_has_guide_storage();
}
inline const ::TSP::Reference& PasteboardObject::guide_storage() const {
  return guide_storage_ != NULL ? *guide_storage_ : *default_instance_->guide_storage_;
}
inline ::TSP::Reference* PasteboardObject::mutable_guide_storage() {
  set_has_guide_storage();
  if (guide_storage_ == NULL) guide_storage_ = new ::TSP::Reference;
  return guide_storage_;
}
inline ::TSP::Reference* PasteboardObject::release_guide_storage() {
  clear_has_guide_storage();
  ::TSP::Reference* temp = guide_storage_;
  guide_storage_ = NULL;
  return temp;
}
inline void PasteboardObject::set_allocated_guide_storage(::TSP::Reference* guide_storage) {
  delete guide_storage_;
  guide_storage_ = guide_storage;
  if (guide_storage) {
    set_has_guide_storage();
  } else {
    clear_has_guide_storage();
  }
}

// optional .TSP.Reference app_native_object = 6;
inline bool PasteboardObject::has_app_native_object() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PasteboardObject::set_has_app_native_object() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PasteboardObject::clear_has_app_native_object() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PasteboardObject::clear_app_native_object() {
  if (app_native_object_ != NULL) app_native_object_->::TSP::Reference::Clear();
  clear_has_app_native_object();
}
inline const ::TSP::Reference& PasteboardObject::app_native_object() const {
  return app_native_object_ != NULL ? *app_native_object_ : *default_instance_->app_native_object_;
}
inline ::TSP::Reference* PasteboardObject::mutable_app_native_object() {
  set_has_app_native_object();
  if (app_native_object_ == NULL) app_native_object_ = new ::TSP::Reference;
  return app_native_object_;
}
inline ::TSP::Reference* PasteboardObject::release_app_native_object() {
  clear_has_app_native_object();
  ::TSP::Reference* temp = app_native_object_;
  app_native_object_ = NULL;
  return temp;
}
inline void PasteboardObject::set_allocated_app_native_object(::TSP::Reference* app_native_object) {
  delete app_native_object_;
  app_native_object_ = app_native_object;
  if (app_native_object) {
    set_has_app_native_object();
  } else {
    clear_has_app_native_object();
  }
}

// optional bool is_text_primary = 7 [default = false];
inline bool PasteboardObject::has_is_text_primary() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PasteboardObject::set_has_is_text_primary() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PasteboardObject::clear_has_is_text_primary() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PasteboardObject::clear_is_text_primary() {
  is_text_primary_ = false;
  clear_has_is_text_primary();
}
inline bool PasteboardObject::is_text_primary() const {
  return is_text_primary_;
}
inline void PasteboardObject::set_is_text_primary(bool value) {
  set_has_is_text_primary();
  is_text_primary_ = value;
}

// optional bool is_smart = 8 [default = false];
inline bool PasteboardObject::has_is_smart() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PasteboardObject::set_has_is_smart() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PasteboardObject::clear_has_is_smart() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PasteboardObject::clear_is_smart() {
  is_smart_ = false;
  clear_has_is_smart();
}
inline bool PasteboardObject::is_smart() const {
  return is_smart_;
}
inline void PasteboardObject::set_is_smart(bool value) {
  set_has_is_smart();
  is_smart_ = value;
}

// -------------------------------------------------------------------

// ObjectContainer

// optional uint32 identifier = 1;
inline bool ObjectContainer::has_identifier() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ObjectContainer::set_has_identifier() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ObjectContainer::clear_has_identifier() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ObjectContainer::clear_identifier() {
  identifier_ = 0u;
  clear_has_identifier();
}
inline ::google::protobuf::uint32 ObjectContainer::identifier() const {
  return identifier_;
}
inline void ObjectContainer::set_identifier(::google::protobuf::uint32 value) {
  set_has_identifier();
  identifier_ = value;
}

// repeated .TSP.Reference objects = 2;
inline int ObjectContainer::objects_size() const {
  return objects_.size();
}
inline void ObjectContainer::clear_objects() {
  objects_.Clear();
}
inline const ::TSP::Reference& ObjectContainer::objects(int index) const {
  return objects_.Get(index);
}
inline ::TSP::Reference* ObjectContainer::mutable_objects(int index) {
  return objects_.Mutable(index);
}
inline ::TSP::Reference* ObjectContainer::add_objects() {
  return objects_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TSP::Reference >&
ObjectContainer::objects() const {
  return objects_;
}
inline ::google::protobuf::RepeatedPtrField< ::TSP::Reference >*
ObjectContainer::mutable_objects() {
  return &objects_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace TSP

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TSP::Color_ColorModel>() {
  return ::TSP::Color_ColorModel_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TSP::Path_ElementType>() {
  return ::TSP::Path_ElementType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_TSPMessages_2eproto__INCLUDED
