syntax = "proto2";

import "TSKArchives.proto";
import "TSPMessages.proto";
import "TSWPArchives.proto";
import "TSSArchives.proto";
package TSA;

message DocumentArchive {
  required .TSK.DocumentArchive super = 1;
  repeated .TSWP.TextPresetDisplayItemArchive text_preset_display_items = 2;
  optional string creation_language = 3;
  optional .TSP.Reference calculation_engine = 4;
  optional .TSP.Reference view_state = 5;
  optional .TSP.Reference function_browser_state = 6;
  optional .TSP.Reference tables_custom_format_list = 7;
  optional bool needs_movie_compatibility_upgrade = 8;
  optional string template_identifier = 9;
  optional .TSP.Reference shortcut_controller = 10;
}

message FunctionBrowserStateArchive {
  repeated uint32 recent_functions = 1;
  repeated uint32 back_functions = 2;
  repeated uint32 forward_functions = 3;
  optional uint32 current_function = 4;
}

message TestDocumentArchive {
  required .TSA.DocumentArchive super = 1;
  optional string value = 2;
}

message ShortcutControllerArchive {
  message ShortcutMapEntry {
    required string shortcut = 1;
    required .TSP.Reference style = 2;
  }
  repeated .TSA.ShortcutControllerArchive.ShortcutMapEntry entries = 1;
}

message PropagatePresetCommandArchive {
  required .TSK.CommandArchive super = 1;
}

message ShortcutCommandArchive {
  optional .TSK.CommandArchive super = 1;
  optional .TSP.Reference old_style = 2;
  optional .TSP.Reference new_style = 3;
  optional string old_shortcut = 4;
  optional string new_shortcut = 5;
}

message AddCustomFormatCommandArchive {
  required .TSK.CommandArchive super = 1;
  optional .TSK.CustomFormatArchive custom_format = 2;
  optional bool for_replacement = 3;
}

message UpdateCustomFormatCommandArchive {
  optional .TSK.CommandArchive super = 1;
  optional .TSK.CustomFormatArchive custom_format = 2;
  optional .TSK.CustomFormatArchive old_custom_format = 3;
  optional uint32 custom_format_id = 4;
}

message ReplaceCustomFormatCommandArchive {
  optional .TSK.CommandArchive super = 1;
  optional .TSK.CustomFormatArchive custom_format = 2;
  optional uint32 custom_format_id = 3;
  optional .TSK.FormatStructArchive replacement_format = 4;
}

